{"cat": "animal", "slot": "product", "value": "wax", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: make or are made from wax. \n        Output: ", "result": "\n        dog, elephant, giraffe, horse, jellyfish, koala, penguin, seal, wax, waxwork\n\"\"\"\n\n# Define the category and condition\ncategory = \"animal\"\ncondition = \"make or are made from wax\""}
{"cat": "animal", "slot": "product", "value": "propolis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: make or are made from propolis. \n        Output: ", "result": "\n```\nbee, honey, hive, wax, pollen, royal jelly, venom, propolis, honeybee\n```"}
{"cat": "animal", "slot": "product", "value": "honey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: make or are made from honey. \n        Output: ", "result": "\n        bee, honeybee, hive, honeycomb, honey, beehive, honeybee honey, \n        honeycomb honey, honeybee honeycomb, honeycomb honeybee. \n        \"\"\"\n        category ="}
{"cat": "animal", "slot": "product", "value": "mucus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: make or are made from mucus. \n        Output: ", "result": "\n            1. snot\n            2. mucus\n            3. booger\n            4. slime\n            5. phlegm\n            6. snotty\n            7. mucusy\n            8. boogery\n            9. slimy\n            "}
{"cat": "animal", "slot": "time", "value": "summer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: live during summer. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "time", "value": "night", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: live during night. \n        Output: ", "result": "\n          dog, cat, owl, bat, fox, raccoon, skunk, deer, bear, wolf\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "sound", "value": "growl", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can growl. \n        Output: ", "result": "\n            dog, cat, lion, tiger, bear, wolf, snake, crocodile, elephant, hippopotamus\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"growl\" in word:\n           "}
{"cat": "animal", "slot": "sound", "value": "trumpeting", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can trumpeting. \n        Output: ", "result": "\n        elephant, giraffe, lion, zebra, rhinoceros, hippopotamus, buffalo, antelope, ostrich, kangaroo\n    \"\"\"\n    animal_words = [\"elephant\", \"giraffe\", \""}
{"cat": "animal", "slot": "sound", "value": "croaking", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can croaking. \n        Output: ", "result": "\n```\nfrog, croak, croaking, croaker, croaks, croakingly, croakerish, croaksy, croaky, croakiness\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. "}
{"cat": "animal", "slot": "sound", "value": "cry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can cry. \n        Output: ", "result": "\n          dog, cat, bird, lion, elephant, whale, seal, crocodile, alligator, hippopotamus\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"can\" in word and \"cry"}
{"cat": "animal", "slot": "sound", "value": "bark", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can bark. \n        Output: ", "result": "\n            dog, \n            cat, \n            elephant, \n            giraffe, \n            hippopotamus, \n            lion, \n            monkey, \n            seal, \n            walrus, \n            zebra\n"}
{"cat": "animal", "slot": "shape", "value": "long", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be long. \n        Output: ", "result": "\n```\ncat, dog, elephant, giraffe, horse, kangaroo, lion, monkey, zebra\n```"}
{"cat": "animal", "slot": "shape", "value": "elongated", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be elongated. \n        Output: ", "result": "\n          dog, elephant, giraffe, snake, whale, crocodile, alligator, \n          hippopotamus, camel, \n```"}
{"cat": "animal", "slot": "accessory", "value": "leash", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: may have to do with leash. \n        Output: ", "result": "\n        dog, leash, walk, chain, collar, tie, rope, lead, harness, retractable\n```\n\n```\nDescribe a scenario where the category is \"vehicle\" and the condition is \"has wheels\". \n        Provide a list of "}
{"cat": "animal", "slot": "accessory", "value": "muzzle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: may have to do with muzzle. \n        Output: ", "result": "\n        dog, cat, horse, pig, cow, sheep, goat, chicken, duck, turkey\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"muzzle\" in word:\n            if \"animal\" in word:"}
{"cat": "animal", "slot": "shape", "value": "round", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be round. \n        Output: ", "result": "\n          dog, cat, horse, cow, sheep, pig, elephant, giraffe, rhinoceros, hippopotamus\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"horse\", \"cow\", \"sheep\", \"pig\","}
{"cat": "animal", "slot": "shape", "value": "circular", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be circular. \n        Output: ", "result": "\n            elephant, giraffe, kangaroo, octopus, penguin, seahorse, snake, spider, starfish, turtle\n    \"\"\"\n    animal_words = [\"elephant\", \"giraffe\", \"kangaroo\","}
{"cat": "animal", "slot": "accessory", "value": "dog", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: may have to do with dog. \n        Output: ", "result": "\n        dog, bark, collar, leash, walk, run, fetch, tail, wag, bite \n    \"\"\"\n    category = \"animal\"\n    condition = \"may have to do with dog\"\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "shape", "value": "pear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be pear. \n        Output: ", "result": "\n          dog, cat, bird, fish, pear, elephant, giraffe, lion, zebra, monkey\n    \"\"\"\n    words = []\n    for word in animal_words:\n        if \"pear\" in word:\n            words.append(word"}
{"cat": "animal", "slot": "group", "value": "herd", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: belong to herd. \n        Output: ", "result": "\n            buffalo, cattle, deer, elephant, giraffe, horse, \n            kangaroo, sheep, zebra\n    \"\"\"\n    herd_words = [\"buffalo\", \"cattle\", \"deer\", \"elephant\", \"giraffe"}
{"cat": "animal", "slot": "group", "value": "swarm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: belong to swarm. \n        Output: ", "result": "\n        dog, bee, ant, flock, swarm, hive, colony, horde, school, swarm\n    \"\"\"\n    category = \"animal\"\n    condition = \"belong to swarm\"\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "group", "value": "infestation", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: belong to infestation. \n        Output: ", "result": "\n```\ncat, cockroach, flea, tick, mosquito, bedbug, ant, termite, mice, rat\n```\n\n### Example 2:\n```python\npython, c++, java, javascript, python\n```\nProvide a list of "}
{"cat": "animal", "slot": "sound", "value": "yelp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can yelp. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, monkey, lion, tiger, bear, wolf\n    \"\"\"\n    words = []\n    for word in word_list:\n        if word.lower() == \"yelp\":\n            words.append(word)"}
{"cat": "animal", "slot": "group", "value": "hive", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: belong to hive. \n        Output: ", "result": "\n```\nbee, honey, hive, honeycomb, worker, queen, drone, pollen, wax, honeybee\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "animal", "slot": "sound", "value": "howl", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can howl. \n        Output: ", "result": "\n            dog, cat, wolf, coyote, fox, owl, seal, whale, elephant, walrus\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"wolf\", \"coyote\", \"fox\", \"owl\", \"se"}
{"cat": "animal", "slot": "accessory", "value": "collar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: may have to do with collar. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "user", "value": "cook", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used by cooks. \n        Output: ", "result": "\n        dog, cat, chicken, beef, pork, lamb, fish, shrimp, lobster, crab\n    \"\"\"\n    category = \"animal\"\n    used_by_cooks = [\"dog\", \"cat\", \"chicken\", \"beef\","}
{"cat": "animal", "slot": "user", "value": "lover", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used by lovers. \n        Output: ", "result": "\n            \n        \"\"\"\n        animal_words = [\"love\", \"heart\", \"rose\", \"bird\", \"butterfly\", \"bee\", \"dove\", \"peace\", \"kiss\", \"hug\"]\n        animal_words = [word for word in animal_words if"}
{"cat": "animal", "slot": "user", "value": "hunter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used by hunters. \n        Output: ", "result": "\n            1. Bow\n            2. Arrows\n            3. Rifle\n            4. Bullets\n            5. Shotgun\n            6. Slingshot\n            7. Crossbow\n            8. Darts\n            9. Spear\n            10. Knife\n"}
{"cat": "animal", "slot": "user", "value": "shepherd", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used by shepherds. \n        Output: ", "result": "\n            1. sheep\n            2. dog\n            3. goat\n            4. cow\n            5. horse\n            6. pig\n            7. llama\n            8. camel\n            9. cat\n            10. chicken\n        \"\"\"\n        shepherd"}
{"cat": "animal", "slot": "user", "value": "poacher", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used by poachers. \n        Output: ", "result": "\n            1. Tiger\n            2. Elephant\n            3. Rhinoceros\n            4. Lion\n            5. Leopard\n            6. Cheetah\n            7. Buffalo\n            8. Hippopotamus\n            9. Crocodile\n            "}
{"cat": "animal", "slot": "user", "value": "policeman", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used by policemen. \n        Output: ", "result": "\n        dog, cat, horse, cow, sheep, pig, chicken, elephant, giraffe, zebra. \n        \"\"\"\n        category = 'animal'\n        condition = 'are used by policemen'\n        words = get_words(category, condition"}
{"cat": "animal", "slot": "user", "value": "blind", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used by blinds. \n        Output: ", "result": "\n        dog, cat, bird, fish, horse, cow, sheep, pig, elephant, giraffe\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print"}
{"cat": "animal", "slot": "user", "value": "beekeeper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used by beekeepers. \n        Output: ", "result": "\n            honeycomb, beehive, beekeeper, bee, honey, honeycomb, honey extractor, bee suit, bee smoker, bee venom\n        \"\"\"\n        category = \"animal\"\n        condition = \"are used by beekeep"}
{"cat": "animal", "slot": "user", "value": "owner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used by owners. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "accessory", "value": "kennel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: may have to do with kennel. \n        Output: ", "result": "\n            1. Dog\n            2. Cat\n            3. Bird\n            4. Fish\n            5. Hamster\n            6. Guinea pig\n            7. Rabbit\n            8. Turtle\n            9. Lizard\n            10. Snake\n        \"\"\"\n       "}
{"cat": "animal", "slot": "accessory", "value": "trainer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: may have to do with trainer. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "accessory", "value": "handler", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: may have to do with handler. \n        Output: ", "result": "\n        dog, cat, bird, horse, fish, snake, lion, tiger, bear, monkey\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print(\","}
{"cat": "animal", "slot": "purpose", "value": "food", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used for food. \n        Output: ", "result": "\n          dog, cat, chicken, beef, pork, lamb, fish, shrimp, lobster, crab\n    \"\"\"\n    category = \"animal\"\n    food_words = [\"dog\", \"cat\", \"chicken\", \"beef\", \"pork"}
{"cat": "animal", "slot": "purpose", "value": "attraction", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used for attraction. \n        Output: ", "result": "\n          dog, cat, bird, fish, butterfly, snake, elephant, giraffe, lion, tiger\n    \"\"\"\n    category = 'animal'\n    condition = 'are used for attraction'\n    words = get_words(category, condition)"}
{"cat": "animal", "slot": "purpose", "value": "research", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used for research. \n        Output: ", "result": "\n        dog, cat, mouse, rat, hamster, guinea pig, chicken, cow, pig, sheep, horse\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)"}
{"cat": "animal", "slot": "purpose", "value": "guard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used to guard. \n        Output: ", "result": "\n            1. guard\n            2. guard\n            3. guard\n            4. guard\n            5. guard\n            6. guard\n            7. guard\n            8. guard\n            9. guard\n            10. guard\n        \"\"\"\n        words = []\n        for word in"}
{"cat": "animal", "slot": "purpose", "value": "guard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used for guard. \n        Output: ", "result": "\n        dog, \n        cat, \n        eagle, \n        lion, \n        tiger, \n        bear, \n        wolf, \n        hawk, \n        owl, \n        snake\n```\n\n```markdown\n"}
{"cat": "animal", "slot": "purpose", "value": "hunting", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used for hunting. \n        Output: ", "result": "\n            1. Bow\n            2. Arrow\n            3. Quiver\n            4. Hunting\n            5. Rifle\n            6. Bullet\n            7. Shotgun\n            8. Sniper\n            9. Tracker\n            10. Camoufl"}
{"cat": "animal", "slot": "purpose", "value": "wild", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: None wild. \n        Output: ", "result": "\n```\ncat, dog, elephant, giraffe, horse, kangaroo, koala, lion, tiger, zebra\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "animal", "slot": "purpose", "value": "haulage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used for haulage. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, jaguar, kangaroo, llama, ostrich, rhinoceros, zebra\n    \"\"\"\n    category = 'animal'\n    condition = 'are used for haul"}
{"cat": "animal", "slot": "purpose", "value": "stray", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: None stray. \n        Output: ", "result": "\n          dog, cat, horse, cow, sheep, goat, pig, chicken, duck, turkey\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"stray\" not in word:\n            words.append(word)\n   "}
{"cat": "animal", "slot": "purpose", "value": "transport", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used for transport. \n        Output: ", "result": "\n        dog, cat, car, bus, train, plane, boat, bike, taxi, subway\n    \"\"\"\n    category = \"animal\"\n    transport_words = [\"dog\", \"cat\", \"car\", \"bus\", \"train\", \"plane\", \"boat\", \""}
{"cat": "animal", "slot": "purpose", "value": "beast of burden", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used for beast of burden. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "behavior", "value": "faithful", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be faithful. \n        Output: ", "result": "\n          dog, cat, bird, fish, horse, cow, sheep, elephant, monkey, turtle\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"faithful\" in word:\n            words.append(word)\n   "}
{"cat": "animal", "slot": "behavior", "value": "cute", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be cute. \n        Output: ", "result": "\n          dog, cat, kitten, puppy, bunny, panda, koala, sloth, otter, hedgehog\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"cute\" in word and \"animal\" in"}
{"cat": "animal", "slot": "behavior", "value": "playful", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be playful. \n        Output: ", "result": "\n          dog, cat, elephant, giraffe, lion, monkey, parrot, raccoon, seal, tiger\n    \"\"\"\n    category = \"animal\"\n    condition = \"can be playful\"\n    words = get_words(category, condition)"}
{"cat": "animal", "slot": "behavior", "value": "obedient", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be obedient. \n        Output: ", "result": "\n          dog,cat,bird,fish,horse,sheep,cow,pig,elephant,giraffe \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"obedient\" in word:\n            words.append(word"}
{"cat": "animal", "slot": "behavior", "value": "loyal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be loyal. \n        Output: ", "result": "\n          dog, cat, horse, elephant, lion, tiger, monkey, pig, cow, sheep\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "behavior", "value": "affectionate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be affectionate. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "behavior", "value": "healthy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be healthy. \n        Output: ", "result": "\n        dog, cat, bird, fish, horse, cow, sheep, pig, elephant, giraffe \n    \"\"\"\n    category = \"animal\"\n    healthy_words = [\"dog\", \"cat\", \"bird\", \"fish\", \"horse\", \"cow\","}
{"cat": "animal", "slot": "behavior", "value": "aggressive", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be aggressive. \n        Output: ", "result": "\n        dog, \n        bear, \n        lion, \n        tiger, \n        wolf, \n        shark, \n        snake, \n        crocodile, \n        elephant. \n        \"\"\"\n        words = []\n       "}
{"cat": "animal", "slot": "behavior", "value": "rabid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be rabid. \n        Output: ", "result": "\n        dog, cat, bat, fox, wolf, raccoon, skunk, squirrel, snake, rat\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"rabid\" in word:\n            words.append(word)\n"}
{"cat": "animal", "slot": "behavior", "value": "cunning", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be cunning. \n        Output: ", "result": "\n          dog, cat, fox, snake, rat, owl, bat, octopus, shark, wolf\n    \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"cunning\" in word:\n            words.append(word)"}
{"cat": "animal", "slot": "behavior", "value": "happy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be happy. \n        Output: ", "result": "\n          dog, cat, bird, fish, elephant, giraffe, monkey, lion, tiger, zebra\n    \"\"\"\n    happy_animals = []\n    for word in animal_words:\n        if \"happy\" in word:\n            happy_"}
{"cat": "animal", "slot": "behavior", "value": "friendly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be friendly. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "behavior", "value": "feral", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be feral. \n        Output: ", "result": "\n          dog, cat, fox, wolf, lion, tiger, bear, raccoon, skunk, coyote\n    \"\"\"\n    category = \"animal\"\n    condition = \"can be feral\"\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "behavior", "value": "submissive", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be submissive. \n        Output: ", "result": "\n            dog,cat,bird,fish,hamster,lion,monkey,sheep,tiger,zebra\n\"\"\"\n\n# Define the function\ndef get_submissive_animals(category: str, condition: str) -> list:\n    \"\"\"\n   "}
{"cat": "animal", "slot": "group", "value": "colony", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: belong to colony. \n        Output: ", "result": "\n          dog, bee, ant, colony, hive, swarm, flock, herd, school, colony, \n          bee, ant, colony, hive, swarm, flock, herd, school, colony, \n          dog, bee"}
{"cat": "animal", "slot": "movement", "value": "slow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are slow. \n        Output: ", "result": "\n          dog, \n          turtle, \n          sloth, \n          snail, \n          crab, \n          snail, \n          sloth, \n          tortoise, \n          turtle.\n    \"\"\"\n    slow_animals"}
{"cat": "animal", "slot": "movement", "value": "attack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can attack. \n        Output: ", "result": "\n        dog, cat, snake, lion, shark, bear, wolf, crocodile, scorpion, spider\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "movement", "value": "attack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can attack. \n        Output: ", "result": "\n        dog, cat, snake, lion, shark, bear, wolf, crocodile, scorpion, spider\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "movement", "value": "chase", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can chase. \n        Output: ", "result": "\n        dog, cat, cheetah, lion, tiger, fox, wolf, bear, leopard, panther\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "size", "value": "small", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be small. \n        Output: ", "result": "\n          dog, cat, hamster, gerbil, mouse, parakeet, canary, finch, goldfish, guinea pig \n    \"\"\"\n    category = \"animal\"\n    condition = \"can be small\"\n    words = get_words(category, condition)"}
{"cat": "animal", "slot": "size", "value": "big", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be big. \n        Output: ", "result": "\n          dog, elephant, giraffe, hippopotamus, kangaroo, lion, rhinoceros, tiger, whale, zebra\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")"}
{"cat": "animal", "slot": "size", "value": "large", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be large. \n        Output: ", "result": "\n            elephant, giraffe, hippopotamus, kangaroo, llama, moose, \n            rhinoceros, sloth, walrus, zebra\n    \"\"\"\n    category = 'animal'\n    condition = 'can be large"}
{"cat": "animal", "slot": "size", "value": "medium", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be medium. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, lion, tiger, bear, wolf, elephant \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n"}
{"cat": "animal", "slot": "group", "value": "larva", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: belong to larva. \n        Output: ", "result": "\n            ant, butterfly, caterpillar, fly, grub, larva, maggot, mosquito, pupa, worm\n\"\"\"\n\nword_list = [\"ant\", \"butterfly\", \"caterpillar\", \"fly\", \"grub"}
{"cat": "animal", "slot": "user", "value": "trainer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used by trainers. \n        Output: ", "result": "\n        dog, \n        cat, \n        horse, \n        elephant, \n        tiger, \n        lion, \n        giraffe, \n        chimpanzee, \n        monkey, \n        zebra\n```\n\n"}
{"cat": "animal", "slot": "user", "value": "handler", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used by handlers. \n        Output: ", "result": "\n            \n        \"\"\"\n        animal_words = [\"leash\", \"collar\", \"food\", \"toy\", \"treats\", \"crate\", \"bed\", \"exercise\", \"training\", \"handler\"]\n        return \", \".join(animal_words)\n\n   "}
{"cat": "animal", "slot": "purpose", "value": "pet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used for pet. \n        Output: ", "result": "\n          dog, cat, bird, fish, hamster, rabbit, guinea pig, turtle, snake, \n          lizard\n    \"\"\"\n    category = \"animal\"\n    condition = \"are used for pet\"\n    words = get_words(category,"}
{"cat": "animal", "slot": "sound", "value": "pet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can pet. \n        Output: ", "result": "\n        dog, cat, fish, bird, hamster, rabbit, snake, lizard, turtle, iguana\n```\n\n```"}
{"cat": "animal", "slot": "group", "value": "nest", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: belong to nest. \n        Output: ", "result": "\n        dog, cat, bird, spider, ant, bee, worm, snake, butterfly, elephant\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"nest\" in word:\n            words.append(word)\n"}
{"cat": "animal", "slot": "purpose", "value": "prey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used for prey. \n        Output: ", "result": "\n            1. mouse\n            2. frog\n            3. fish\n            4. bird\n            5. deer\n            6. rabbit\n            7. squirrel\n            8. lizard\n            9. snake\n            10. shrimp\n        \"\"\"\n"}
{"cat": "animal", "slot": "part", "value": "eye", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  eye. \n        Output: ", "result": " cat, dog, elephant, giraffe, horse, kangaroo, lion, monkey, tiger, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category=category"}
{"cat": "animal", "slot": "part", "value": "skin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  skin. \n        Output: ", "result": " cat, dog, elephant, giraffe, horse, lion, monkey, pig, snake, zebra. \n        \"\"\"\n        category = 'animal'\n        condition = 'can have skin'\n        words = get_words(category, condition)\n"}
{"cat": "animal", "slot": "part", "value": "head", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  head. \n        Output: ", "result": " dog, elephant, giraffe, horse, kangaroo, lion, monkey, octopus, shark, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category="}
{"cat": "animal", "slot": "part", "value": "mouth", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  mouth. \n        Output: ", "result": " dog, cat, bird, fish, snake, elephant, giraffe, monkey, lion, zebra. \n        \"\"\"\n        category = 'animal'\n        condition = 'can have mouth'\n        words = get_words(category, condition)\n       "}
{"cat": "animal", "slot": "part", "value": "leg", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  leg. \n        Output: ", "result": " elephant, giraffe, kangaroo, lion, monkey, octopus, penguin, snake, spider, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter"}
{"cat": "animal", "slot": "part", "value": "ear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  ear. \n        Output: ", "result": " cat, dog, elephant, giraffe, horse, kangaroo, koala, lion, monkey, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category=category"}
{"cat": "animal", "slot": "part", "value": "coat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  coat. \n        Output: ", "result": " dog, cat, fox, bear, lion, tiger, elephant, giraffe, zebra, wolf. \n        \"\"\"\n        category = Category.objects.get(name='animals')\n        words = Word.objects.filter(category=category, text"}
{"cat": "animal", "slot": "part", "value": "tail", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  tail. \n        Output: ", "result": " dog, cat, elephant, giraffe, horse, kangaroo, lion, monkey, snake, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category=category"}
{"cat": "animal", "slot": "part", "value": "tongue", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  tongue. \n        Output: ", "result": " cat, dog, elephant, giraffe, hippopotamus, kangaroo, lion, monkey, snake, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects."}
{"cat": "animal", "slot": "part", "value": "hair", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  hair. \n        Output: ", "result": " dog, cat, elephant, giraffe, horse, lion, monkey, rabbit, sheep, zebra. \n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"elephant\", \"giraffe\", \"horse\", \"lion\", \""}
{"cat": "animal", "slot": "part", "value": "paw", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  paw. \n        Output: ", "result": " cat, dog, lion, tiger, panther, cheetah, leopard, bear, wolf, fox. \n        \"\"\"\n        category = Category.objects.get(name='animals')\n        words = Word.objects.filter(category=category)\n       "}
{"cat": "animal", "slot": "part", "value": "fur", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  fur. \n        Output: ", "result": " cat, dog, fox, bear, rabbit, sheep, goat, lion, tiger, wolf. \n        \"\"\"\n        category = Category.objects.get(name='animals')\n        words = Word.objects.filter(category=category, has_fur=True"}
{"cat": "animal", "slot": "part", "value": "abdomen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  abdomen. \n        Output: ", "result": " elephant, giraffe, kangaroo, lion, monkey, octopus, pig, snake, spider, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter("}
{"cat": "animal", "slot": "part", "value": "antenna", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  antenna. \n        Output: ", "result": " dog, elephant, giraffe, octopus, spider, squid, starfish, whale, zebra, ant. \n    \"\"\"\n    category = 'animal'\n    condition = 'can have antenna'\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "part", "value": "flesh", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  flesh. \n        Output: ", "result": " elephant, giraffe, hippopotamus, kangaroo, lion, monkey, panda, raccoon, tiger, zebra. \n    \"\"\"\n    animal_words = [\"elephant\", \"giraffe\", \"hippopot"}
{"cat": "animal", "slot": "part", "value": "tooth", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  tooth. \n        Output: ", "result": " dog, cat, lion, tiger, elephant, giraffe, hippopotamus, alligator, crocodile, snake. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter"}
{"cat": "animal", "slot": "part", "value": "bone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  bone. \n        Output: ", "result": " dog, cat, elephant, giraffe, horse, lion, zebra, chicken, turkey, ostrich. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category=category,"}
{"cat": "animal", "slot": "part", "value": "tusk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  tusk. \n        Output: ", "result": " elephant, walrus, narwhal, \n```"}
{"cat": "animal", "slot": "part", "value": "neck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  neck. \n        Output: ", "result": " elephant, giraffe, camel, lion, tiger, zebra, rhinoceros, \n        hippopotamus, crocodile, alligator. \n    \"\"\"\n    animal_words = [\"elephant\", \"giraffe\","}
{"cat": "animal", "slot": "part", "value": "stinger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  stinger. \n        Output: ", "result": " bee, wasp, hornet, yellow jacket, honeybee, bumblebee,\n```"}
{"cat": "animal", "slot": "part", "value": "foot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  foot. \n        Output: ", "result": " elephant, giraffe, kangaroo, lion, monkey, octopus, penguin, snake, turtle, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects."}
{"cat": "animal", "slot": "part", "value": "toe", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  toe. \n        Output: ", "result": " cat, dog, elephant, giraffe, horse, kangaroo, lion, monkey, pig, zebra. \n    \"\"\"\n    animal_words = [\"cat\", \"dog\", \"elephant\", \"giraffe\", \"horse\", \"k"}
{"cat": "animal", "slot": "part", "value": "legs", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  legs. \n        Output: ", "result": " cat, dog, elephant, giraffe, horse, kangaroo, lion, monkey, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category=category)\n       "}
{"cat": "animal", "slot": "part", "value": "sac", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  sac. \n        Output: ", "result": " dog, cat, horse, cow, sheep, pig, elephant, giraffe, lion, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category=category, ends_with"}
{"cat": "animal", "slot": "part", "value": "trunk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  trunk. \n        Output: ", "result": " elephant, giraffe, rhinoceros, camel, \n        hippopotamus, zebra, \n```"}
{"cat": "animal", "slot": "part", "value": "whisker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  whisker. \n        Output: ", "result": " cat, mouse, elephant, giraffe, lion, zebra, horse, cow, pig, whale. \n    \"\"\"\n    animal_words = [\"cat\", \"mouse\", \"elephant\", \"giraffe\", \"lion\", \"zebra\","}
{"cat": "animal", "slot": "part", "value": "flag", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  flag. \n        Output: ", "result": " dog, elephant, giraffe, horse, kangaroo, koala, lion, monkey, tiger, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category="}
{"cat": "animal", "slot": "part", "value": "claw", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  claw. \n        Output: ", "result": " cat, lion, tiger, panther, leopard, jaguar, cheetah, cougar, puma, snow leopard. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter("}
{"cat": "animal", "slot": "part", "value": "feeler", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  feeler. \n        Output: ", "result": " elephant, giraffe, octopus, squid, jellyfish, starfish, crab, lobster, shrimp, snail \n    \"\"\"\n    animal_words = [\"elephant\", \"giraffe\", \"octopus\", \"squid\", \"j"}
{"cat": "animal", "slot": "part", "value": "shell", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  shell. \n        Output: ", "result": " dog, cat, snail, tortoise, turtle, oyster, crab, lobster, shrimp, octopus \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"shell\" in word:\n            words.append"}
{"cat": "animal", "slot": "part", "value": "fang", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  fang. \n        Output: ", "result": " dog, cat, snake, crocodile, shark, alligator, lion, tiger, bear, wolf. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"fang\" in word:\n            words.append(word)"}
{"cat": "animal", "slot": "part", "value": "nail", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  nail. \n        Output: ", "result": " elephant, giraffe, horse, kangaroo, lion, monkey, pig, rabbit, tiger, zebra. \n    \"\"\"\n    animal_words = [\"elephant\", \"giraffe\", \"horse\", \"kangaroo\","}
{"cat": "animal", "slot": "part", "value": "horn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  horn. \n        Output: ", "result": " Elephant, Giraffe, Rhinoceros, Buffalo, Moose, Deer, Antelope, Sheep, Goat, Cow. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category"}
{"cat": "animal", "slot": "part", "value": "body", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  body. \n        Output: ", "result": " cat, dog, elephant, giraffe, horse, kangaroo, lion, monkey, tiger, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category=category"}
{"cat": "animal", "slot": "part", "value": "nose", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  nose. \n        Output: ", "result": " cat, dog, elephant, giraffe, horse, kangaroo, lion, monkey, rhinoceros, zebra. \n    \"\"\"\n    animal_words = [\"cat\", \"dog\", \"elephant\", \"giraffe\", \"horse\","}
{"cat": "animal", "slot": "part", "value": "wing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  wing. \n        Output: ", "result": " elephant, giraffe, bird, bat, butterfly, dragonfly, spider, mosquito, bee, ant. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category=category"}
{"cat": "animal", "slot": "part", "value": "egg", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  egg. \n        Output: ", "result": " dog, cat, chicken, duck, goose, quail, pigeon, ostrich, emu, rhea. \n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"chicken\", \"duck\", \"goose\", \"quail\", \""}
{"cat": "animal", "slot": "part", "value": "beak", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  beak. \n        Output: ", "result": " bird, chicken, duck, goose, gull, ostrich, quail, swan, turkey, waterfowl. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category=category"}
{"cat": "animal", "slot": "part", "value": "belly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  belly. \n        Output: ", "result": " cat, dog, elephant, giraffe, hippopotamus, kangaroo, lion, monkey, rhinoceros, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word."}
{"cat": "animal", "slot": "part", "value": "pad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  pad. \n        Output: ", "result": " dog, cat, pad, \n```"}
{"cat": "animal", "slot": "part", "value": "tentacle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  tentacle. \n        Output: ", "result": " shark, squid, octopus, cuttlefish, nautilus, squid, octopus, cuttlefish, nautilus, squid. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter"}
{"cat": "animal", "slot": "part", "value": "sting", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  sting. \n        Output: ", "result": " dog, bee, wasp, hornet, scorpion, tarantula, snake, centipede, spider, ant. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category=category,"}
{"cat": "animal", "slot": "part", "value": "jaw", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  jaw. \n        Output: ", "result": " elephant, giraffe, hippopotamus, jaguar, kangaroo, lion, monkey, shark, tiger, zebra. \n    \"\"\"\n    animal_words = [\"elephant\", \"giraffe\", \"hippop"}
{"cat": "animal", "slot": "movement", "value": "run", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can run. \n        Output: ", "result": "\n          dog, cat, horse, deer, zebra, giraffe, antelope, lion, tiger, cheetah\n    \"\"\"\n    category = \"animal\"\n    condition = \"can run\"\n    words = get_words(category, condition)\n"}
{"cat": "animal", "slot": "movement", "value": "fly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can fly. \n        Output: ", "result": "\n          dog, cat, bird, bat, butterfly, bee, mosquito, dragonfly, hummingbird, seagull\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word"}
{"cat": "animal", "slot": "movement", "value": "swim", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can swim. \n        Output: ", "result": "\n          dog, cat, fish, whale, shark, dolphin, seal, turtle, jellyfish, octopus\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "animal", "slot": "movement", "value": "jump", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can jump. \n        Output: ", "result": "\n          dog, cat, bird, frog, squirrel, kangaroo, rabbit, raccoon, giraffe, elephant\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "animal", "slot": "movement", "value": "fly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can fly. \n        Output: ", "result": "\n          dog, cat, bird, bat, butterfly, bee, mosquito, dragonfly, hummingbird, seagull\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word"}
{"cat": "animal", "slot": "movement", "value": "hop", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can hop. \n        Output: ", "result": "\n```\ncat, frog, rabbit, kangaroo, grasshopper, hedgehog, squirrel, mouse, bird, dog\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "animal", "slot": "movement", "value": "creep", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can creep. \n        Output: ", "result": "\n          dog, snake, lizard, spider, scorpion, centipede, millipede,\n```"}
{"cat": "animal", "slot": "movement", "value": "leap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can leap. \n        Output: ", "result": "\n        dog, cat, rabbit, deer, antelope, kangaroo, frog, goat, sheep, \n        giraffe\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"rabbit\", \"deer\", \"antelope\","}
{"cat": "animal", "slot": "movement", "value": "leap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can leap. \n        Output: ", "result": "\n        dog, cat, rabbit, deer, antelope, kangaroo, frog, goat, sheep, \n        giraffe\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"rabbit\", \"deer\", \"antelope\","}
{"cat": "animal", "slot": "movement", "value": "crawl", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can crawl. \n        Output: ", "result": "\n          dog, cat, snake, lizard, spider, scorpion, crab, lobster, crayfish, shrimp\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "animal", "slot": "place", "value": "land", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in lands. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "place", "value": "garden", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in gardens. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "place", "value": "ditch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in ditches. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "place", "value": "Asia", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in Asias. \n        Output: ", "result": "\n        elephant, giraffe, rhinoceros, tiger, leopard, camel, monkey, \n        panda, koala, kangaroo. \n        \"\"\"\n        category = 'animal'\n        condition = 'can be found or used"}
{"cat": "animal", "slot": "place", "value": "underwater", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in underwaters. \n        Output: ", "result": "\n        dolphin, fish, jellyfish, killer whale, lobster, octopus, pearl, seahorse, shark, turtle \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n"}
{"cat": "animal", "slot": "place", "value": "sea", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in seas. \n        Output: ", "result": "\n        dolphin, fish, jellyfish, lobster, octopus, penguin, seal, shark, turtle, whale\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n"}
{"cat": "animal", "slot": "place", "value": "zoo", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in zoos. \n        Output: ", "result": " elephant, giraffe, lion, tiger, zebra, monkey, chimpanzee, gorilla, koala, kangaroo. \n        \"\"\"\n        category = 'animal'\n        condition = 'can be found or used in zoos'"}
{"cat": "animal", "slot": "place", "value": "terrarium", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in terrariums. \n        Output: ", "result": "\n          beetle, cricket, frog, hermit, \n          insect, iguana, \n```"}
{"cat": "animal", "slot": "place", "value": "Kenia", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in Kenias. \n        Output: ", "result": "\n          giraffe, elephant, lion, zebra, rhinoceros, buffalo, cheetah, leopard, hyena, wildebeest\n    \"\"\"\n    category = 'animal'\n    condition = 'can be found or used in Kenias"}
{"cat": "animal", "slot": "place", "value": "Sri Lanka", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in Sri Lankas. \n        Output: ", "result": " elephant, lion, leopard, crocodile, snake, buffalo, deer, monkey, peacock, turtle \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n"}
{"cat": "animal", "slot": "place", "value": "India", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in Indias. \n        Output: ", "result": "\n        dog, cat, cow, elephant, tiger, snake, monkey, lion, peacock, parrot\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"India\" in word:\n            if \"found\" in"}
{"cat": "animal", "slot": "place", "value": "Africa", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in Africas. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "place", "value": "Tanzania", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in Tanzanias. \n        Output: ", "result": "\n        elephant, giraffe, lion, zebra, leopard, cheetah, rhinoceros, buffalo, hippopotamus, crocodile. \n        \"\"\"\n        category = 'animal'\n        condition = 'can be found"}
{"cat": "animal", "slot": "place", "value": "Thailand", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in Thailands. \n        Output: ", "result": "\n        dog, cat, elephant, tiger, monkey, snake, fish, bird, buffalo, chicken\n    \"\"\"\n    category = 'animal'\n    condition = 'can be found or used in Thailands'\n    words = get_words(category,"}
{"cat": "animal", "slot": "place", "value": "Namibia", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in Namibias. \n        Output: ", "result": "\n        elephant, giraffe, lion, cheetah, zebra, rhinoceros, ostrich, crocodile, antelope, hyena\n    \"\"\"\n    category = \"animal\"\n    condition = \"can be found or used in Namib"}
{"cat": "animal", "slot": "place", "value": "pond", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in ponds. \n        Output: ", "result": "\n```\ncat, fish, turtle, frog, duck, swan, bird, alligator, crocodile, snail\n```\nExplanation:\n\n1. The category is \"animal\"\n2. The condition is \"can be found or used in p"}
{"cat": "animal", "slot": "place", "value": "tropic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in tropics. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "place", "value": "water", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in water. \n        Output: ", "result": "\n        dolphin, fish, jellyfish, lobster, octopus, shark, starfish, turtle, whale, eel\n    \"\"\"\n    animal_words = [\"dolphin\", \"fish\", \"jellyfish\", \"lobster\", \"octopus\","}
{"cat": "animal", "slot": "place", "value": "sanctuary", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in sanctuaries. \n        Output: ", "result": "\n        elephant, giraffe, lion, tiger, zebra, horse, donkey, cow, pig, chicken\n    \"\"\"\n    animal_sanctuary_words = [\n        \"elephant\", \"giraffe\", \"lion\", \"t"}
{"cat": "animal", "slot": "place", "value": "circus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in circuss. \n        Output: ", "result": "\n        elephant, trapeze, clown, tightrope, acrobat, lion, tiger,\n```"}
{"cat": "animal", "slot": "movement", "value": "walk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can walk. \n        Output: ", "result": "\n          dog, cat, elephant, giraffe, lion, zebra, horse, cow, chicken, pig\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "user", "value": "circus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used by circuss. \n        Output: ", "result": "\n        elephant, lion, tiger, giraffe, zebra, clown, acrobat, trapeze, tightrope, animal trainer.\n    \"\"\"\n    words = []\n    for word in cat:\n        if \"circus\" in word"}
{"cat": "animal", "slot": "place", "value": "colony", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in colonies. \n        Output: ", "result": "\n```\ncat, colony, hive, swarm, beehive, apiary, colony of bees, bee colony, bee hive\n```"}
{"cat": "animal", "slot": "place", "value": "kennel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in kennels. \n        Output: ", "result": "\n            1. Dog\n            2. Collar\n            3. Leash\n            4. Kennel\n            5. Food\n            6. Water\n            7. Bedding\n            8. Toys\n            9. Grooming\n            10. Training\n        \"\"\"\n        words ="}
{"cat": "animal", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be black. \n        Output: ", "result": "\n          dog, cat, elephant, giraffe, zebra, blackbird, blackcat, blackdog, blackelephant, blackgiraffe, blackzebra\n    \"\"\"\n    black_animals = []\n    for word in animal_words:\n        if"}
{"cat": "animal", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be black. \n        Output: ", "result": "\n          dog, cat, elephant, giraffe, zebra, blackbird, blackcat, blackdog, blackelephant, blackgiraffe, blackzebra\n    \"\"\"\n    black_animals = []\n    for word in animal_words:\n        if"}
{"cat": "animal", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be brown. \n        Output: ", "result": "\n          dog, cat, horse, cow, sheep, pig, elephant, giraffe, zebra, \n          lion, tiger, bear. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects"}
{"cat": "animal", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be brown. \n        Output: ", "result": "\n          dog, cat, horse, cow, sheep, pig, elephant, giraffe, zebra, \n          lion, tiger, bear. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects"}
{"cat": "animal", "slot": "colorPattern", "value": "spotted", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be spotted. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, turtle, butterfly, frog, spider, ant\n    \"\"\"\n    category = \"animal\"\n    condition = \"can be spotted\"\n    words = get_words(category, condition)\n    return"}
{"cat": "animal", "slot": "colorPattern", "value": "yellow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be yellow. \n        Output: ", "result": "\n          dog, cat, chicken, cow, duck, elephant, giraffe, horse, lion, zebra\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "colorPattern", "value": "yellow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be yellow. \n        Output: ", "result": "\n          dog, cat, chicken, cow, duck, elephant, giraffe, horse, lion, zebra\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "colorPattern", "value": "grey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be grey. \n        Output: ", "result": "\n          dog, cat, fox, wolf, sheep, goat, giraffe, greyhound, grey cat, grey fox \n    \"\"\"\n    category = 'animal'\n    condition = 'can be grey'\n    words = get_words(category, condition)"}
{"cat": "animal", "slot": "colorPattern", "value": "grey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be grey. \n        Output: ", "result": "\n          dog, cat, fox, wolf, sheep, goat, giraffe, greyhound, grey cat, grey fox \n    \"\"\"\n    category = 'animal'\n    condition = 'can be grey'\n    words = get_words(category, condition)"}
{"cat": "animal", "slot": "colorPattern", "value": "green", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be green. \n        Output: ", "result": "\n        dog, cat, fish, bird, snake, lizard, turtle, frog, cow, sheep\n    \"\"\"\n    print(\", \".join(word for word in animal_words if word.lower().startswith(\"can\") and word.lower().endswith(\"green\")))"}
{"cat": "animal", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be white. \n        Output: ", "result": "\n          dog, \n          cat, \n          elephant, \n          giraffe, \n          kangaroo, \n          koala, \n          penguin, \n          rhinoceros, \n          tiger, \n          zebra"}
{"cat": "animal", "slot": "colorPattern", "value": "green", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be green. \n        Output: ", "result": "\n        dog, cat, fish, bird, snake, lizard, turtle, frog, cow, sheep\n    \"\"\"\n    print(\", \".join(word for word in animal_words if word.lower().startswith(\"can\") and word.lower().endswith(\"green\")))"}
{"cat": "animal", "slot": "colorPattern", "value": "orange", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be orange. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, turtle, lion, elephant, giraffe, zebra \n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"bird\", \"fish\", \"snake\", \"turtle\", \"l"}
{"cat": "animal", "slot": "colorPattern", "value": "orange", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be orange. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, turtle, lion, elephant, giraffe, zebra \n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"bird\", \"fish\", \"snake\", \"turtle\", \"l"}
{"cat": "animal", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be white. \n        Output: ", "result": "\n          dog, \n          cat, \n          elephant, \n          giraffe, \n          kangaroo, \n          koala, \n          penguin, \n          rhinoceros, \n          tiger, \n          zebra"}
{"cat": "animal", "slot": "colorPattern", "value": "solid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be solid. \n        Output: ", "result": "\n          dog, cat, elephant, giraffe, horse, zebra, lion, tiger, bear, rhino\n    \"\"\"\n    category = \"animal\"\n    condition = \"can be solid\"\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "colorPattern", "value": "red", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be red. \n        Output: ", "result": "\n          dog, elephant, giraffe, horse, kangaroo, lion, monkey, parrot, tiger, zebra\n    \"\"\"\n    category = \"animal\"\n    condition = \"can be red\"\n    words = get_words(category,"}
{"cat": "animal", "slot": "colorPattern", "value": "red", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be red. \n        Output: ", "result": "\n          dog, elephant, giraffe, horse, kangaroo, lion, monkey, parrot, tiger, zebra\n    \"\"\"\n    category = \"animal\"\n    condition = \"can be red\"\n    words = get_words(category,"}
{"cat": "animal", "slot": "colorPattern", "value": "beige", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be beige. \n        Output: ", "result": "\n          dog, cat, elephant, giraffe, horse, zebra, lion, tiger, panther, leopard\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"beige\" in word:\n            words.append"}
{"cat": "animal", "slot": "colorPattern", "value": "beige", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be beige. \n        Output: ", "result": "\n          dog, cat, elephant, giraffe, horse, zebra, lion, tiger, panther, leopard\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"beige\" in word:\n            words.append"}
{"cat": "animal", "slot": "colorPattern", "value": "striped", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be striped. \n        Output: ", "result": " tiger, zebra, leopard, cheetah, snake, crocodile, alligator, lizard, iguana, giraffe.\n    \"\"\"\n    animal_words = [\"tiger\", \"zebra\", \"leopard\", \"cheetah"}
{"cat": "animal", "slot": "colorPattern", "value": "blue", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be blue. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, turtle, butterfly, frog, lion, zebra \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"blue\" in word:\n            words.append(word"}
{"cat": "animal", "slot": "colorPattern", "value": "blue", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be blue. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, turtle, butterfly, frog, lion, zebra \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"blue\" in word:\n            words.append(word"}
{"cat": "animal", "slot": "colorPattern", "value": "leopard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be leopard. \n        Output: ", "result": "\n```\nleopard,cheetah,tiger,lion,panther,cougar,jaguar,snow leopard,leopard cat,cheetah cat\n```\n\n```python\nProvide a list of 10 words that belong to the"}
{"cat": "animal", "slot": "activity", "value": "breathe", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be breathe. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, lion, elephant, giraffe, whale, dolphin\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "activity", "value": "drink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be drink. \n        Output: ", "result": "\n        dog, cat, bird, fish, cow, sheep, pig, horse, elephant, giraffe\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"bird\", \"fish\", \"cow\", \"sheep\", \"pig\", \"horse\", \"ele"}
{"cat": "animal", "slot": "activity", "value": "fetch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be fetch. \n        Output: ", "result": "\n          dog, cat, fish, bird, turtle, snake, hamster, mouse, rabbit, \n          lion, elephant, giraffe, zebra, monkey, bear, wolf, fox, \n          shark, dolphin,"}
{"cat": "animal", "slot": "activity", "value": "chase", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be chase. \n        Output: ", "result": "\n          dog, cat, bird, mouse, fox, rabbit, snake, lion, tiger, cheetah\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n"}
{"cat": "animal", "slot": "activity", "value": "chew", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be chew. \n        Output: ", "result": "\n        dog, cat, elephant, giraffe, hippopotamus, kangaroo, lion, monkey, panda, zebra. \n        \"\"\"\n        category = 'animal'\n        condition = 'can be chew'\n        words"}
{"cat": "animal", "slot": "activity", "value": "play", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be play. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "activity", "value": "bury", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be bury. \n        Output: ", "result": "\n          dog, cat, bird, snake, turtle, hamster, mouse, lizard, frog, fish.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"bury\" in word:\n            words.append(word)\n   "}
{"cat": "animal", "slot": "activity", "value": "bath", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be bath. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, elephant, giraffe, lion, zebra, hippo \n    \"\"\"\n    category = \"animal\"\n    condition = \"can be bath\"\n    words = get_words(category, condition)\n"}
{"cat": "animal", "slot": "activity", "value": "live", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be live. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, lion, elephant, giraffe, monkey, zebra\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "activity", "value": "kill", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be kill. \n        Output: ", "result": "\n          dog, cat, snake, lion, tiger, bear, shark, wolf, crocodile, elephant\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"kill\" in word:\n            words.append(word)"}
{"cat": "animal", "slot": "activity", "value": "roam", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be roam. \n        Output: ", "result": "\n          dog, cat, elephant, giraffe, lion, zebra, monkey, tiger, bear, wolf\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"can\" in word and \"roam\" in word:"}
{"cat": "animal", "slot": "activity", "value": "growl", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be growl. \n        Output: ", "result": "\n          dog, cat, lion, tiger, bear, wolf, panther, leopard, jaguar, cheetah\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"growl\" in word:\n            words.append"}
{"cat": "animal", "slot": "activity", "value": "trot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be trot. \n        Output: ", "result": "\n          dog, cat, horse, pony, zebra, giraffe, lion, tiger, elephant, rhinoceros\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"trot\" in word:\n            words."}
{"cat": "animal", "slot": "activity", "value": "graze", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be graze. \n        Output: ", "result": "\n        dog, cow, sheep, goat, deer, antelope, buffalo, giraffe, zebra, \n        hippopotamus. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word."}
{"cat": "animal", "slot": "activity", "value": "hunt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be hunt. \n        Output: ", "result": "\n          dog, cat, fox, bear, deer, wolf, lion, tiger, leopard, \n          panther, cheetah, cougar, jaguar, lynx, bobcat, coyote, \n          hyena, jack"}
{"cat": "animal", "slot": "activity", "value": "bite", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be bite. \n        Output: ", "result": "\n          dog, cat, snake, lion, crocodile, shark, spider, scorpion, ant, bee\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "activity", "value": "feed", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be feed. \n        Output: ", "result": "\n          dog, cat, bird, fish, cow, sheep, pig, horse, elephant, giraffe\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print"}
{"cat": "animal", "slot": "activity", "value": "bite", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be bite. \n        Output: ", "result": "\n          dog, cat, snake, lion, crocodile, shark, spider, scorpion, ant, bee\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "activity", "value": "suffer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be suffer. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, lion, elephant, horse, cow, sheep\n    \"\"\"\n    words = []\n    for word in animal_words:\n        if \"suffer\" in word:\n            words.append(word)\n    return words"}
{"cat": "animal", "slot": "activity", "value": "migrate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be migrate. \n        Output: ", "result": "\n          elephant, giraffe, hippopotamus, kangaroo, lion, meerkat, ostrich, penguin, rhinoceros, zebra\n    \"\"\"\n    animal_words = [\"elephant\", \"giraffe\","}
{"cat": "animal", "slot": "activity", "value": "roar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be roar. \n        Output: ", "result": "\n          dog, cat, lion, tiger, bear, panther, leopard, jaguar, cheetah, cougar\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"roar\" in word:\n            words.append"}
{"cat": "animal", "slot": "activity", "value": "die", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be die. \n        Output: ", "result": "\n```\ncat, dog, fish, bird, snake, lion, elephant, giraffe, zebra, shark\n```"}
{"cat": "animal", "slot": "activity", "value": "browse", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be browse. \n        Output: ", "result": "\n        dog, cat, bird, fish, turtle, snake, lion, elephant, giraffe, zebra\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "animal", "slot": "activity", "value": "forage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be forage. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, lion, elephant, giraffe, monkey, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category=category,"}
{"cat": "animal", "slot": "activity", "value": "bait", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be bait. \n        Output: ", "result": "\n            dog, cat, mouse, rat, bird, fish, snake, lion, tiger, bear\n\"\"\"\n\n# Define the category and condition\ncategory = \"animal\"\ncondition = \"can be bait\"\n\n# Define a list to store the words\nwords ="}
{"cat": "animal", "slot": "activity", "value": "lick", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be lick. \n        Output: ", "result": "\n        dog, cat, lion, tiger, elephant, giraffe, monkey, snake, lizard, crocodile\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"lion\", \"tiger\", \"elephant\", \"giraffe"}
{"cat": "animal", "slot": "activity", "value": "kill", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be kill. \n        Output: ", "result": "\n          dog, cat, snake, lion, tiger, bear, shark, wolf, crocodile, elephant\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"kill\" in word:\n            words.append(word)"}
{"cat": "animal", "slot": "activity", "value": "pollinate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be pollinate. \n        Output: ", "result": "\n          dog, cat, bee, butterfly, moth, hummingbird, bumblebee, ant, honeybee, mosquito \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"pollinate\" in word:\n"}
{"cat": "animal", "slot": "activity", "value": "slither", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be slither. \n        Output: ", "result": "\n```\nsnake, viper, serpent, adder, python, rattlesnake, cobra, viperine, asp, horned viper\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "animal", "slot": "activity", "value": "bark", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be bark. \n        Output: ", "result": "\n          dog, cat, bird, fish, cow, sheep, pig, elephant, monkey, lion\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"bark\" in word:\n            words.append(word)\n    return"}
{"cat": "animal", "slot": "activity", "value": "sleep", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be sleep. \n        Output: ", "result": "\n          dog, cat, elephant, giraffe, hippo, kangaroo, lion, monkey, tiger, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter("}
{"cat": "animal", "slot": "activity", "value": "live", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be live. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, lion, elephant, giraffe, monkey, zebra\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "activity", "value": "fuck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be fuck. \n        Output: ", "result": "\n        dog, cat, bird, fish, frog, snake, monkey, lion, tiger, bear\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"can\" in word and \"be\" in word and \"fuck\" in word"}
{"cat": "animal", "slot": "activity", "value": "watch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be watch. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, turtle, lion, elephant, giraffe, zebra\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "animal", "slot": "activity", "value": "forage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be forage. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, lion, elephant, giraffe, monkey, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category=category,"}
{"cat": "animal", "slot": "activity", "value": "feed", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be feed. \n        Output: ", "result": "\n          dog, cat, bird, fish, cow, sheep, pig, horse, elephant, giraffe\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print"}
{"cat": "animal", "slot": "activity", "value": "trumpet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be trumpet. \n        Output: ", "result": "\n          dog, cat, elephant, giraffe, lion, zebra, horse, rhinoceros, hippopotamus, trumpet. \n        \"\"\"\n        category = 'animal'\n        condition = 'can be trumpet'\n       "}
{"cat": "animal", "slot": "activity", "value": "croak", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be croak. \n        Output: ", "result": "\n          dog, cat, bird, fish, frog, snake, lizard, turtle, chicken, croak. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category=category)\n       "}
{"cat": "animal", "slot": "activity", "value": "funnel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be funnel. \n        Output: ", "result": "\n        dog, cat, elephant, giraffe, funnel, fish, bird, snake, lion, zebra \n    \"\"\"\n    words = []\n    for word in animal_words:\n        if \"funnel\" in word:\n            words.append("}
{"cat": "animal", "slot": "activity", "value": "overwinter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be overwinter. \n        Output: ", "result": "\n          dog, cat, bear, wolf, fox, rabbit, squirrel, bird, duck, goose\n    \"\"\"\n    category = Category.objects.get(name='animal')\n    words = Word.objects.filter(category=category, definition__icont"}
{"cat": "animal", "slot": "activity", "value": "love", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be love. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, lion, tiger, bear, monkey, elephant\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"love\" in word:\n            words.append(word)\n   "}
{"cat": "animal", "slot": "activity", "value": "watch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be watch. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, turtle, lion, elephant, giraffe, zebra\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "animal", "slot": "activity", "value": "sting", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be sting. \n        Output: ", "result": "\n        dog, cat, bee, wasp, hornet, ant, spider, scorpion, snake, beetle \n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"bee\", \"wasp\", \"hornet\", \"ant\", \"spider"}
{"cat": "animal", "slot": "activity", "value": "sing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be sing. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, mouse, elephant, giraffe, lion, zebra\n    \"\"\"\n    words = []\n    for word in word_list:\n        if len(word) == 1:\n            words.append(word"}
{"cat": "animal", "slot": "activity", "value": "eat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be eat. \n        Output: ", "result": "\n          dog, cat, fish, chicken, cow, pig, shrimp, lobster, oyster, sushi\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "animal", "slot": "part", "value": "collar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can have  collar. \n        Output: ", "result": " dog, cat, elephant, giraffe, lion, tiger, zebra, horse, rhinoceros, \n        hippopotamus, alligator, crocodile, \n```"}
{"cat": "animal", "slot": "generalization", "value": "mammal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mammal. \n        Output: ", "result": "\n        dog, cat, cow, pig, sheep, elephant, giraffe, whale, dolphin, hippopotamus\n    \"\"\"\n    category = \"animal\"\n    condition = \"are mammal\"\n    words = get_words(category"}
{"cat": "animal", "slot": "generalization", "value": "eutherian mammal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are eutherian mammal. \n        Output: ", "result": " cat, dog, elephant, giraffe, horse, kangaroo, koala, lion, tiger, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animals')\n        words = Word.objects.filter(category=category"}
{"cat": "animal", "slot": "generalization", "value": "eutherian", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are eutherian. \n        Output: ", "result": "\n        dog, cat, elephant, giraffe, hippopotamus, horse, kangaroo, lion, zebra, wolf\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"elephant\", \"giraffe\", \"hi"}
{"cat": "animal", "slot": "generalization", "value": "placental mammal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are placental mammal. \n        Output: ", "result": " cat, cow, dog, elephant, giraffe, horse, kangaroo, lion, monkey, zebra. \n        \"\"\"\n        category = 'animal'\n        condition = 'are placental mammal'\n        words = []\n        for"}
{"cat": "animal", "slot": "generalization", "value": "placental", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are placental. \n        Output: ", "result": "\n        dog, cat, horse, cow, pig, human, elephant, giraffe, zebra, \n        lion, tiger, leopard, cheetah, monkey, chimpanzee, gorilla, \n        rhinoceros,"}
{"cat": "animal", "slot": "generalization", "value": "carnivore", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are carnivore. \n        Output: ", "result": "\n        dog, cat, lion, tiger, bear, wolf, shark, alligator, snake, crocodile. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        condition = Condition.objects.get(name='are"}
{"cat": "animal", "slot": "generalization", "value": "insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are insect. \n        Output: ", "result": "\n```\nant,\nbee,\nbutterfly,\nfly,\ngrasshopper,\ninsect,\nmosquito,\nspider,\ntick,\n\n```"}
{"cat": "animal", "slot": "generalization", "value": "gastropod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are gastropod. \n        Output: ", "result": "\n```\nsnail, slug, oyster, whelk, conch, limpet, abalone, squid, cuttlefish, nautilus\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "animal", "slot": "generalization", "value": "vertebrate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are vertebrate. \n        Output: ", "result": "\n        dog, cat, horse, cow, pig, elephant, giraffe, zebra, lion, tiger\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "animal", "slot": "generalization", "value": "craniate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are craniate. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, \n        kangaroo, llama, octopus, penguin, \n        rhinoceros, shark, turtle, whale. \n        \"\"\"\n        category = '"}
{"cat": "animal", "slot": "generalization", "value": "reptile", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are reptile. \n        Output: ", "result": "\n        snake, lizard, crocodile, turtle, alligator, \n        monitor, iguana, \n```"}
{"cat": "animal", "slot": "generalization", "value": "being", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are being. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, elephant, giraffe, monkey, lion, zebra\n    \"\"\"\n    category = \"animal\"\n    condition = \"are being\"\n    words = get_words(category, condition)\n    return"}
{"cat": "animal", "slot": "generalization", "value": "amphibian", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are amphibian. \n        Output: ", "result": "\n            frog, toad, newt, salamander, axolotl,\n```"}
{"cat": "animal", "slot": "generalization", "value": "oviparous", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are oviparous. \n        Output: ", "result": "\n        dog, cat, bird, fish, frog, snake, turtle, lizard, crocodile, alligator \n    \"\"\"\n    category = \"animal\"\n    condition = \"are oviparous\"\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "generalization", "value": "felid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are felid. \n        Output: ", "result": "\n```\nlion, tiger, leopard, jaguar, cheetah, puma, cougar, leopard, jaguar, cheetah\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the"}
{"cat": "animal", "slot": "generalization", "value": "canid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are canid. \n        Output: ", "result": "\n            dog, cat, wolf, fox, coyote, jackal, dingo, hyena, cheetah, lion\n        \"\"\"\n        category = 'animal'\n        condition = 'are canid'\n        words = get_words(category, condition)\n"}
{"cat": "animal", "slot": "generalization", "value": "reptilian", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are reptilian. \n        Output: ", "result": "\n        lizard, crocodile, snake, turtle, alligator, \n        monitor, iguana, tortoise, terrapin, \n        caiman, crocodile, alligator, turtle, \n        snake, lizard,"}
{"cat": "animal", "slot": "generalization", "value": "feline", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are feline. \n        Output: ", "result": "\n```\ncat, kitten, pussycat, lion, tiger, leopard, jaguar, panther, cheetah, cougar\n```\n\n### Example 2:\nProvide a list of 10 words that belong to the category and"}
{"cat": "animal", "slot": "generalization", "value": "canine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are canine. \n        Output: ", "result": "\n        dog, cat, horse, cow, sheep, pig, chicken, goat, lion, tiger\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print"}
{"cat": "animal", "slot": "generalization", "value": "organism", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are organism. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, elephant, giraffe, monkey, lion, zebra\n    \"\"\"\n    category = \"animal\"\n    condition = \"are organism\"\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "generalization", "value": "animate thing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are animate thing. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, elephant, giraffe, monkey, lion, zebra\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"bird\", \"fish\", \"snake\", \"elephant\", \"giraffe"}
{"cat": "animal", "slot": "generalization", "value": "diapsid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are diapsid. \n        Output: ", "result": "\n        lizard, \n        crocodile, \n        alligator, \n        snake, \n        turtle, \n        terrapin, \n        tortoise, \n        chameleon, \n        gecko, \n        monitor"}
{"cat": "animal", "slot": "generalization", "value": "big cat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are big cat. \n        Output: ", "result": "\n```\nlion, tiger, leopard, jaguar, cheetah, cougar, lynx, puma, jaguarundi, leopard cat\n```\n\nExample 2:\n```\nProvide a list of 10 words that"}
{"cat": "animal", "slot": "generalization", "value": "diapsid reptile", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are diapsid reptile. \n        Output: ", "result": "\n        lizard, crocodile, alligator, turtle, snake, monitor, \n        tuatara, terrapin, tortoise, \n```"}
{"cat": "animal", "slot": "generalization", "value": "living thing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are living thing. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, elephant, giraffe, monkey, lion, zebra\n    \"\"\"\n    category = \"animal\"\n    condition = \"are living thing\"\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "generalization", "value": "cat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are cat. \n        Output: ", "result": "\n```\ncat, kitten, whiskers, fur, purr, meow, claws, eyes, tail\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "animal", "slot": "generalization", "value": "marine mussel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are marine mussel. \n        Output: ", "result": "\n```\nmussel,clam,oyster,scallop,cockle,periwinkle,barnacle,nautilus,sea snail\n```"}
{"cat": "animal", "slot": "generalization", "value": "gnawing mammal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are gnawing mammal. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, kangaroo, koala, llama, panda, sloth, zebra\n    \"\"\"\n    category = \"animal\"\n    condition = \"are gnawing mammal\"\n"}
{"cat": "animal", "slot": "generalization", "value": "ruminant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ruminant. \n        Output: ", "result": "\n        buffalo, cow, deer, elephant, giraffe, kangaroo, moose, ox, rhinoceros, \n        sheep, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        condition"}
{"cat": "animal", "slot": "generalization", "value": "mytilid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mytilid. \n        Output: ", "result": "\n        crab\n        shrimp\n        lobster\n        snail\n        oyster\n        scallop\n        clam\n        mussel\n        squid\n        octopus\n    \"\"\"\n    category = \"animal\"\n    condition = \"are mytilid\""}
{"cat": "animal", "slot": "generalization", "value": "hermaphrodite", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hermaphrodite. \n        Output: ", "result": "\n          dog, cat, salamander, seahorse, snail, starfish, jellyfish, crab, lobster, shrimp\n    \"\"\"\n    category = \"animal\"\n    hermaphrodite_words = [\n        \"dog\", \"cat\","}
{"cat": "animal", "slot": "generalization", "value": "saurian", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are saurian. \n        Output: ", "result": "\n        crocodile, \n        alligator, \n        lizard, \n        snake, \n        turtle, \n        tortoise, \n        iguana, \n        gecko, \n        monitor lizard, \n        komodo"}
{"cat": "animal", "slot": "generalization", "value": "leporid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are leporid. \n        Output: ", "result": "\n        dog, cat, rabbit, hare, fox, wolf, coyote, jackal, hyena, elephant\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"rabbit\", \"hare\", \"fox\", \"wolf\", \"co"}
{"cat": "animal", "slot": "generalization", "value": "unit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are unit. \n        Output: ", "result": "\n        elephant, giraffe, hippopotamus, \n        kangaroo, koala, llama, \n        meerkat, octopus, ostrich, \n        penguin, rhinoceros, sloth, \n        t"}
{"cat": "animal", "slot": "generalization", "value": "leporid mammal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are leporid mammal. \n        Output: ", "result": "\n        dog, cat, rabbit, hare, elephant, hippopotamus, whale, dolphin, seal, walrus\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n"}
{"cat": "animal", "slot": "generalization", "value": "pelecypod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pelecypod. \n        Output: ", "result": "\n        snail, oyster, clam, mussel, scallop, squid, cuttlefish, nautilus, octopus, squid\n    \"\"\"\n    animal_words = [\"snail\", \"oyster\", \"clam\", \"mussel\", \"scallop"}
{"cat": "animal", "slot": "generalization", "value": "lagomorph", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lagomorph. \n        Output: ", "result": "\n```\nrabbit, hare, bunny, pika, coney, jackrabbit, cottontail, snowshoe hare, pangolin, antelope\n```\n\n```\nProvide a list of 10 words that belong to the category"}
{"cat": "animal", "slot": "generalization", "value": "proboscidean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are proboscidean. \n        Output: ", "result": "\n        elephant, mammoth, mastodon, rhinoceros, hippopotamus, giraffe, zebra, \n        okapi, warthog, narwhal\n    \"\"\"\n    animal_words = [\"elephant\", \"mamm"}
{"cat": "animal", "slot": "generalization", "value": "herbivorous", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are herbivorous. \n        Output: ", "result": "\n        elephant, giraffe, hippopotamus, kangaroo, llama, \n        meerkat, ostrich, penguin, sloth, zebra. \n        \"\"\"\n        category = 'animal'\n        condition = '"}
{"cat": "animal", "slot": "generalization", "value": "bivalve", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are bivalve. \n        Output: ", "result": "\n          dog, fish, oyster, clam, mussel, scallop, shrimp, crab, lobster, snail\n    \"\"\"\n    category = \"animal\"\n    condition = \"are bivalve\"\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "generalization", "value": "chelonian", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are chelonian. \n        Output: ", "result": "\n        turtle, tortoise, terrapin, alligator, crocodile, \n        snapping turtle, box turtle, leatherback turtle, \n        hawksbill turtle, Kemp's ridley turtle"}
{"cat": "animal", "slot": "generalization", "value": "arachnoid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are arachnoid. \n        Output: ", "result": "\n        dog, spider, scorpion, tarantula, wolf, snake, lizard, crocodile, octopus, centipede\n    \"\"\"\n    animal_words = [\"dog\", \"spider\", \"scorpion\", \"tarantula\", \"wolf\","}
{"cat": "animal", "slot": "generalization", "value": "crustacean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are crustacean. \n        Output: ", "result": "\n```\ncrab, lobster, shrimp, prawn, lobster, crab, shrimp, lobster, crab, lobster\n```"}
{"cat": "animal", "slot": "generalization", "value": "anapsid reptile", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are anapsid reptile. \n        Output: ", "result": "\n        turtle, tortoise, terrapin, alligator, crocodile, snapping turtle, box turtle, leatherback turtle, hawksbill turtle, Kemp's Ridley turtle\n    \"\"\"\n   "}
{"cat": "animal", "slot": "generalization", "value": "primate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are primate. \n        Output: ", "result": "\n```\nmonkey, gorilla, chimpanzee, orangutan, lemur, marmoset, tamarin, capuchin, squirrel monkey, baboon\n```\n\nExample:\n```\nProvide a list of 10 words that belong"}
{"cat": "animal", "slot": "generalization", "value": "even-toed ungulate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are even-toed ungulate. \n        Output: ", "result": "\n        deer, antelope, giraffe, okapi, eland, wildebeest,\n```"}
{"cat": "animal", "slot": "generalization", "value": "artiodactyl mammal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are artiodactyl mammal. \n        Output: ", "result": "\n        elephant, giraffe, hippopotamus, kangaroo, camel, deer, cow, pig, sheep, goat\n    \"\"\"\n    animal_words = [\"elephant\", \"giraffe\", \"hippopotamus\","}
{"cat": "animal", "slot": "generalization", "value": "artiodactyl", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are artiodactyl. \n        Output: ", "result": "\n        dog, cow, pig, sheep, goat, deer, giraffe, hippopotamus, camel, \n        elephant\n    \"\"\"\n    animal_words = [\"dog\", \"cow\", \"pig\", \"sheep\", \"goat\","}
{"cat": "animal", "slot": "generalization", "value": "mussel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mussel. \n        Output: ", "result": "\n```\ncat, mussel\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: fruit. \n        Condition:"}
{"cat": "animal", "slot": "generalization", "value": "lamellibranch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lamellibranch. \n        Output: ", "result": "\n        dog, cat, elephant, giraffe, hippopotamus, \n        kangaroo, koala, lion, tiger, zebra. \n        \"\"\"\n        category = 'animal'\n        condition = 'are lamellib"}
{"cat": "animal", "slot": "generalization", "value": "pachyderm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pachyderm. \n        Output: ", "result": " elephant, giraffe, hippopotamus, rhinoceros, \n        camel, dugong, manatee, sloth, anteater, \n        armadillo\n    \"\"\"\n    animal_words = [\"elephant\", \"giraffe"}
{"cat": "animal", "slot": "generalization", "value": "proboscidian", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are proboscidian. \n        Output: ", "result": "\n        elephant, rhinoceros, hippopotamus, whale, narwhal,\n```"}
{"cat": "animal", "slot": "generalization", "value": "anapsid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are anapsid. \n        Output: ", "result": "\n        snake, lizard, turtle, crocodile, alligator, monitor, terrapin, tortoise, te\n```"}
{"cat": "animal", "slot": "generalization", "value": "arachnid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are arachnid. \n        Output: ", "result": "\n        dog, spider, scorpion, tarantula, wolf, snake, lizard, centipede, millipede, tick\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "animal", "slot": "generalization", "value": "chelonian reptile", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are chelonian reptile. \n        Output: ", "result": "\n        turtle, tortoise, terrapin, alligator, crocodile, \n        snapping turtle, box turtle, leatherback turtle, \n        hawksbill turtle, Kemp's ridley turtle"}
{"cat": "animal", "slot": "generalization", "value": "ungulate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ungulate. \n        Output: ", "result": "\n        deer, antelope, sheep, goat, giraffe, okapi, eland, wildebeest,\n```"}
{"cat": "animal", "slot": "generalization", "value": "whole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are whole. \n        Output: ", "result": "\n        elephant, giraffe, hippopotamus, \n        kangaroo, koala, llama, \n        octopus, ostrich, penguin, \n        rhinoceros, shark, turtle, \n        z"}
{"cat": "animal", "slot": "generalization", "value": "hoofed mammal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hoofed mammal. \n        Output: ", "result": "\n```\ndeer,\nelephant,\ngiraffe,\nhippopotamus,\nhorse,\nkangaroo,\nrhinoceros,\nsheep,\nzebra,\n```\n\n```\nProvide a list of 10"}
{"cat": "animal", "slot": "generalization", "value": "animal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are animal. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, elephant, giraffe, lion, monkey, zebra\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"bird\", \"fish\", \"snake\", \"elephant\", \"giraffe"}
{"cat": "animal", "slot": "generalization", "value": "arthropod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are arthropod. \n        Output: ", "result": "\n```\nant, spider, cricket, grasshopper, beetle, cockroach, mantis, millipede, centipede, tarantula\n```\nExplanation:\n\n1. Provide a list of 10 words that belong to the category and"}
{"cat": "animal", "slot": "generalization", "value": "invertebrate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are invertebrate. \n        Output: ", "result": "\n        bee, ant, spider, snail, crab, lobster, shrimp, squid, octopus, jellyfish.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "animal", "slot": "activity", "value": "nest", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be nest. \n        Output: ", "result": "\n          dog, cat, bird, fish, spider, ant, bee, worm, snake, elephant\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"nest\" in word:\n            if word not in words:\n                words"}
{"cat": "animal", "slot": "generalization", "value": "hymenopteron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hymenopteron. \n        Output: ", "result": "\n        bee, ant, wasp, honeybee, bumblebee, yellowjacket, hornet,\n```"}
{"cat": "animal", "slot": "generalization", "value": "hymenopterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hymenopterous insect. \n        Output: ", "result": "\n        bee, ant, wasp, hornet, yellow jacket, bumblebee, honeybee,\n```"}
{"cat": "animal", "slot": "generalization", "value": "hymenopteran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hymenopteran. \n        Output: ", "result": "\n        bee, ant, wasp, honeybee, bumblebee, yellowjacket, hornet,\n```"}
{"cat": "animal", "slot": "generalization", "value": "chordate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are chordate. \n        Output: ", "result": "\n        dog, cat, bird, fish, frog, snake, lizard, turtle, cow, pig\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "generalization", "value": "hymenopter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hymenopter. \n        Output: ", "result": "\n        bee, ant, wasp, honeybee, bumblebee, yellowjacket, hornet,\n```"}
{"cat": "animal", "slot": "place", "value": "larva", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in larvas. \n        Output: ", "result": "\n        dog, cat, bird, snake, fish, frog, worm, spider, ant, butterfly\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "place", "value": "hive", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be found or used in hives. \n        Output: ", "result": "\n        bee, honey, comb, hive, honeycomb, honeybee, honeycomb, honeybee, honey, honeycomb \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words"}
{"cat": "animal", "slot": "generalization", "value": "herbivore", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are herbivore. \n        Output: ", "result": "\n        elephant, giraffe, hippopotamus, kangaroo, llama, moose, \n        panda, sheep, sloth, zebra\n```\n\n```\nDesired output: \nComma separated list of words: elephant"}
{"cat": "animal", "slot": "generalization", "value": "mollusk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mollusk. \n        Output: ", "result": "\n          snail, clam, oyster, scallop, squid, cuttlefish, octopus, nautilus,\n```"}
{"cat": "animal", "slot": "activity", "value": "walk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be walk. \n        Output: ", "result": "\n          dog, cat, bird, fish, turtle, snake, elephant, giraffe, lion, zebra\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "animal", "slot": "activity", "value": "crawl", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be crawl. \n        Output: ", "result": "\n          dog, cat, snake, lizard, spider, scorpion, ant, cockroach, beetle, centipede\n    \"\"\"\n    category = Category.objects.get(name='animal')\n    words = Word.objects.filter(category=category"}
{"cat": "animal", "slot": "activity", "value": "run", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be run. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, lion, tiger, elephant, giraffe, zebra\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"bird\", \"fish\", \"snake\", \"lion\", \"tiger\", \""}
{"cat": "animal", "slot": "activity", "value": "fly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be fly. \n        Output: ", "result": "\n          dog, cat, bird, butterfly, bee, mosquito, fly, ant, spider, moth\n```\n\n```\nDescribe a scenario where the category is \"vehicle\" and the condition is \"has wheels\". \n        Provide a list of "}
{"cat": "animal", "slot": "activity", "value": "yelp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be yelp. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, elephant, giraffe, lion, zebra, yelp\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"yelp\" in word:\n            words.append"}
{"cat": "animal", "slot": "activity", "value": "swim", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be swim. \n        Output: ", "result": "\n          dog, cat, fish, whale, shark, dolphin, seal, turtle, jellyfish, octopus\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "animal", "slot": "activity", "value": "jump", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be jump. \n        Output: ", "result": "\n          dog, cat, bird, frog, fish, snake, elephant, giraffe, kangaroo, monkey\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "animal", "slot": "activity", "value": "leap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be leap. \n        Output: ", "result": "\n```\ncat, leopard, leap\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: fruit. \n"}
{"cat": "animal", "slot": "activity", "value": "fly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be fly. \n        Output: ", "result": "\n          dog, cat, bird, butterfly, bee, mosquito, fly, ant, spider, moth\n```\n\n```\nDescribe a scenario where the category is \"vehicle\" and the condition is \"has wheels\". \n        Provide a list of "}
{"cat": "animal", "slot": "activity", "value": "hop", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be hop. \n        Output: ", "result": "\n```\ncat, hop, jump, frog, hopscotch, hopeless, hopelessly, hopelessly, hopelessly, hopelessly, hopelessly, hopelessly, hopelessly, hopelessly, hopelessly, hopelessly, hopelessly,"}
{"cat": "animal", "slot": "activity", "value": "leap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be leap. \n        Output: ", "result": "\n```\ncat, leopard, leap\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: fruit. \n"}
{"cat": "animal", "slot": "activity", "value": "creep", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be creep. \n        Output: ", "result": "\n        dog, cat, snake, spider, bat, frog, crocodile, lizard, scorpion, centipede\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "animal", "slot": "activity", "value": "howl", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: can be howl. \n        Output: ", "result": "\n        dog, cat, howl, bark, meow, roar, chirp, tweet, quack, meow\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"howl\", \"bark\", \"meow\", \"roar\", \"chir"}
{"cat": "animal", "slot": "generalization", "value": "lepidopteran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lepidopteran. \n        Output: ", "result": "\n        butterfly, moth, caterpillar, silkworm, pupa, chrysalis, larva, wing, antennae, proboscis\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "animal", "slot": "generalization", "value": "lepidopteron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lepidopteron. \n        Output: ", "result": "\n        butterfly, moth, caterpillar, silk, chrysalis, pupa, wing, antennae, proboscis, scales.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []"}
{"cat": "animal", "slot": "generalization", "value": "ectotherm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ectotherm. \n        Output: ", "result": "\n        lizard, snake, turtle, crocodile, alligator, \n        chameleon, gecko, iguana, turtle, tortoise. \n        \"\"\"\n        category = 'animal'\n        condition = 'are ectoth"}
{"cat": "animal", "slot": "generalization", "value": "decapod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are decapod. \n        Output: ", "result": "\n```\ncat, crab, lobster, shrimp, prawn, crayfish, squid, octopus, snail, oyster\n```"}
{"cat": "animal", "slot": "generalization", "value": "domestic animal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are domestic animal. \n        Output: ", "result": " cat, dog, horse, cow, pig, chicken, sheep, goat, llama, giraffe \n    \"\"\"\n    category = 'animal'\n    condition = 'are domestic animal'\n    words = get_words(category, condition)\n    return ', '.join"}
{"cat": "animal", "slot": "generalization", "value": "domesticated animal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are domesticated animal. \n        Output: ", "result": " cat, dog, horse, cow, pig, chicken, sheep, goat, turkey, duck\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in text:\n        if word."}
{"cat": "animal", "slot": "generalization", "value": "lepidopterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lepidopterous insect. \n        Output: ", "result": "\n        butterfly, moth, caterpillar, silkworm, pupa, chrysalis, larva, wing, antennae, proboscis\n    \"\"\"\n    butterfly, moth, caterpillar, silkworm, pupa, chrysalis"}
{"cat": "animal", "slot": "generalization", "value": "decapod crustacean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are decapod crustacean. \n        Output: ", "result": "\n```\ncrab, lobster, shrimp, prawn, lobster, crab, shrimp, lobster, crab, lobster\n```"}
{"cat": "animal", "slot": "specialization", "value": "worker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are worker. \n        Output: ", "result": "\n        dog, ant, bee, spider, wasp, termite, mosquito, fly, beetle, cockroach.\n    \"\"\"\n    words = []\n    for word in animal_words:\n        if word.lower() == \"worker\":\n            words"}
{"cat": "animal", "slot": "specialization", "value": "drone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are drone. \n        Output: ", "result": "\n        dog, elephant, giraffe, horse, kangaroo, lion, octopus, penguin, shark, zebra\n    \"\"\"\n    category = \"animal\"\n    drone_words = [\"drone\", \"robot\", \"machine\","}
{"cat": "animal", "slot": "specialization", "value": "queen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are queen. \n        Output: ", "result": "\n```\ncat,queen,queen,queen,queen,queen,queen,queen,queen\n```"}
{"cat": "animal", "slot": "specialization", "value": "bug", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are bug. \n        Output: ", "result": "\n```\nant, beetle, butterfly, caterpillar, cricket, grasshopper, ladybug, mantis, mosquito, spider\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to"}
{"cat": "animal", "slot": "specialization", "value": "Bulldog", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Bulldog. \n        Output: ", "result": "\n            1. Bulldog\n            2. English Bulldog\n            3. French Bulldog\n            4. American Bulldog\n            5. Old English Bulldog\n            6. Olde English Bulldogge\n            7. Bullmastiff\n            8. Box"}
{"cat": "animal", "slot": "specialization", "value": "German Shepherd", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are German Shepherd. \n        Output: ", "result": "\n            1. Dog\n            2. German\n            3. Shepherd\n            4. Canine\n            5. Herding\n            6. Working\n            7. Police\n            8. Military\n            9. Service\n            10. Protection\n        \"\"\"\n        category ="}
{"cat": "animal", "slot": "specialization", "value": "Boxer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Boxer. \n        Output: ", "result": "\n```\nboxer,bull terrier,german shepherd,golden retriever,greyhound,husky,pug,rottweiler,weimaraner,\n```\n\n```"}
{"cat": "animal", "slot": "specialization", "value": "Poodle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Poodle. \n        Output: ", "result": "\n```\nPoodle,poodle,poodle,poodle,poodle,poodle,poodle,poodle,poodle\n```"}
{"cat": "animal", "slot": "specialization", "value": "kit fox", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are kit fox. \n        Output: ", "result": "\n```\nkit, fox, kit, fox, kit, fox, kit, fox, kit, fox\n```"}
{"cat": "animal", "slot": "specialization", "value": "louse", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are louse. \n        Output: ", "result": "\n```\ncat, flea, tick, louse, bedbug, mosquito, ant, cockroach, fly, spider\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "animal", "slot": "specialization", "value": "Yorkshire Terrier", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Yorkshire Terrier. \n        Output: ", "result": "\n        Yorkshire Terrier, Yorkie, Yorkshire, Terrier, York, Yorkshire, Terrier, Terrier, Terrier, Terrier, Terrier, Terrier, Terrier, Terrier, Terrier, Terrier, Terrier, Terrier, Terrier, Terrier, Ter"}
{"cat": "animal", "slot": "specialization", "value": "Labrador", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Labrador. \n        Output: ", "result": "\n        dog, labrador, retriever, canine, water, guide, assistance,\n```"}
{"cat": "animal", "slot": "specialization", "value": "Beagle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Beagle. \n        Output: ", "result": "\n```\nbeagle,basset,hound,dog,canine,mammal,mammalian,carnivore,carnivorous,fauna\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "animal", "slot": "specialization", "value": "Golden Retriever", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Golden Retriever. \n        Output: ", "result": "\n        golden,retriever,goldenretriever,goldenretrievers,retrievergolden,retrieversgolden,goldenretrievergolden,goldenretrieversgolden,re"}
{"cat": "animal", "slot": "specialization", "value": "red fox", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are red fox. \n        Output: ", "result": "\n            red, fox, coat, tail, bushy, redden, reddened, reddening, reddened, reddening\n        \"\"\"\n        category = Category.objects.get(name='animal')\n        condition = Condition.objects.get(name='are"}
{"cat": "animal", "slot": "specialization", "value": "Rottweiler", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Rottweiler. \n        Output: ", "result": "\n        dog,bite,protect,guard,strong,fearless,intelligent,faithful,devoted,fearsome\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "animal", "slot": "specialization", "value": "biped", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are biped. \n        Output: ", "result": "\n          dog, cat, horse, giraffe, zebra, deer, elephant, rhinoceros, \n          lion, tiger\n    \"\"\"\n    category = Category.objects.get(name='animal')\n    words = Word.objects.filter("}
{"cat": "animal", "slot": "specialization", "value": "aquatic bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are aquatic bird. \n        Output: ", "result": "\n        swan, goose, duck, gull, loon, pelican, stork, heron, crane, flamingo \n    \"\"\"\n    category = \"animal\"\n    condition = \"are aquatic bird\"\n    words = get_words(category,"}
{"cat": "animal", "slot": "specialization", "value": "sea creature", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are sea creature. \n        Output: ", "result": "\n        shark, whale, dolphin, jellyfish, octopus, squid, crab, lobster, starfish, sea urchin\n    \"\"\"\n    category = \"animal\"\n    condition = \"are sea creature\"\n    words = get_words(category"}
{"cat": "animal", "slot": "specialization", "value": "Brussels griffon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Brussels griffon. \n        Output: ", "result": "\n        buffalo, camel, chimpanzee, elephant, giraffe, hippopotamus, \n        kangaroo, koala, llama, meerkat, octopus, ostrich, penguin, \n        rhinoceros"}
{"cat": "animal", "slot": "specialization", "value": "Cancer borealis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Cancer borealis. \n        Output: ", "result": "\n        polar bear, grizzly bear, black bear, brown bear, Kodiak bear, Ursus maritimus, Ursus arctos, Ursus horribilis, Ursus americanus, Ursus maritimus, Ursus arctos, Ursus horrib"}
{"cat": "animal", "slot": "specialization", "value": "swimming crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are swimming crab. \n        Output: ", "result": "\n```\ncrab, fish, shrimp, lobster, jellyfish, octopus, squid, clam, oyster, snail\n```\n\n### Example 2:\n```python\npython, c++, java, scala, rust, go, php, python"}
{"cat": "animal", "slot": "specialization", "value": "spider crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are spider crab. \n        Output: ", "result": "\n```\ncrab, spider, legs, claws, carapace, crustacean, ocean, marine, predator\n```"}
{"cat": "animal", "slot": "specialization", "value": "zoophyte", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are zoophyte. \n        Output: ", "result": "\n```\ncat, jellyfish, seahorse, starfish, squid, cuttlefish, octopus, nautilus, sea anemone, coral\n```\nExplanation:\n\n* The category is \"animal\"\n* The condition is \"are zo"}
{"cat": "animal", "slot": "specialization", "value": "Arctic fox", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Arctic fox. \n        Output: ", "result": "\n```\nArctic, fox, white, blue, coat, tail, snow, red, wolf, predator\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words"}
{"cat": "animal", "slot": "specialization", "value": "branchiopod crustacean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are branchiopod crustacean. \n        Output: ", "result": "\n```\ncrayfish, daphnia, cladocera, water flea, crustacean, aquatic, branchiopod, planktonic, freshwater, zooplankton\n```\n\n### Example 2:\n```\nProvide a list"}
{"cat": "animal", "slot": "specialization", "value": "neuropterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are neuropterous insect. \n        Output: ", "result": "\n```\ndragonfly, damselfly, mayfly, stonefly, caddisfly, leech, antlion, dobsonfly, lacewing, grasshopper\n```\nExplanation:\n\n1. The category is \"animal\".\n2. The condition is"}
{"cat": "animal", "slot": "specialization", "value": "dickeybird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are dickeybird. \n        Output: ", "result": "\n        dog,cat,bird,fish,monkey,elephant,lion,tiger,giraffe,zebra \n    \"\"\"\n    dickeybird_words = [\"bird\", \"fish\", \"monkey\", \"elephant\", \"lion\", \"tiger"}
{"cat": "animal", "slot": "specialization", "value": "corgi", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are corgi. \n        Output: ", "result": "\n```\ncorgi,pembroke,corgi,dachshund,corgi,corgi,corgi,corgi,corgi,corgi\n```"}
{"cat": "animal", "slot": "specialization", "value": "poriferan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are poriferan. \n        Output: ", "result": "\n        fish, shrimp, jellyfish, coral, sponge, sea anemone, sea cucumber, oyster, clam, squid\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "animal", "slot": "specialization", "value": "quarry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are quarry. \n        Output: ", "result": "\n        dog, \n        cat, \n        sheep, \n        goat, \n        cow, \n        pig, \n        chicken, \n        horse, \n        elephant, \n        giraffe\n    \"\"\"\n    words = []\n"}
{"cat": "animal", "slot": "specialization", "value": "ratite", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ratite. \n        Output: ", "result": "\n            ostrich, emu, rhea, cassowary, kiwi, ostrich, emu, rhea, cassowary, kiwi\n        \"\"\"\n        category = \"animal\"\n        condition = \"are ratite\"\n        words = ["}
{"cat": "animal", "slot": "specialization", "value": "beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are beetle. \n        Output: ", "result": "\n```\nbeetle,\nbeetle,\nbeetle,\nbeetle,\nbeetle,\nbeetle,\nbeetle,\nbeetle,\nbeetle,\nbeetle\n```\n\n```python\nProvide a list of"}
{"cat": "animal", "slot": "specialization", "value": "Cancer irroratus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Cancer irroratus. \n        Output: ", "result": "\n        dog, cat, lion, tiger, panther, leopard, jaguar, cheetah, cougar, \n        bear, wolf, hyena, elephant, rhinoceros, buffalo, hippopotamus, \n       "}
{"cat": "animal", "slot": "specialization", "value": "lamp shell", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lamp shell. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, turtle, lion, elephant, giraffe, zebra. \n        \"\"\"\n        category = 'animal'\n        condition = 'are lamp shell'\n        words = get_words(category, condition"}
{"cat": "animal", "slot": "specialization", "value": "borer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are borer. \n        Output: ", "result": "\n        dog, cat, elephant, giraffe, hippo, kangaroo, lion, monkey, tiger, zebra. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter("}
{"cat": "animal", "slot": "specialization", "value": "Alaskan king crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Alaskan king crab. \n        Output: ", "result": "\n```\ncrab,crabby,crabapple,crabcake,crabgrass,crabmeat,crabwalk,crabwise,crabby,crabby\n```\n\n```python\nProvide a list of 10 words that belong to"}
{"cat": "animal", "slot": "specialization", "value": "white wolf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are white wolf. \n        Output: ", "result": "\n        polar bear, white tiger, white lion, white leopard, white snow leopard, white jaguar, white cheetah, white cougar, white puma, white leopard. \n        \"\"\"\n        category = Category.objects.get(name='"}
{"cat": "animal", "slot": "specialization", "value": "heteropterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are heteropterous insect. \n        Output: ", "result": "\n        beetle, cockroach, cricket, grasshopper, locust, mantis,\n```"}
{"cat": "animal", "slot": "specialization", "value": "rotifer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are rotifer. \n        Output: ", "result": "\n```\ncat, rotifer\n```\n```"}
{"cat": "animal", "slot": "specialization", "value": "wood ant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are wood ant. \n        Output: ", "result": "\n```\nant,\nbee,\nbutterfly,\ndragonfly,\nfly,\ngrasshopper,\ninsect,\nmosquito,\nspider,\nwasp\n```"}
{"cat": "animal", "slot": "specialization", "value": "bow-wow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are bow-wow. \n        Output: ", "result": "\n```\ncat, dog, bark, meow, cow, moo, roar, quack, chirp, buzz\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma"}
{"cat": "animal", "slot": "specialization", "value": "Leonberg", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Leonberg. \n        Output: ", "result": "\n```\ncat, dog, lion, tiger, bear, wolf, panther, leopard, lynx, cheetah\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. "}
{"cat": "animal", "slot": "specialization", "value": "hexapod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hexapod. \n        Output: ", "result": "\n        dog, cat, elephant, giraffe, horse, spider, scorpion, ant, bee, octopus\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"elephant\", \"giraffe\", \"horse\", \"spider\", \""}
{"cat": "animal", "slot": "specialization", "value": "passeriform bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are passeriform bird. \n        Output: ", "result": "\n          finch, sparrow, canary, dove, pigeon, \n          mockingbird, nightingale, robin, thrush, \n          warbler\n    \"\"\"\n    category = \"animal\"\n    condition = \"are passeriform bird\"\n    words"}
{"cat": "animal", "slot": "specialization", "value": "trogon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are trogon. \n        Output: ", "result": "\n```\ntrogon\ntrogon\ntrogon\ntrogon\ntrogon\ntrogon\ntrogon\ntrogon\ntrogon\ntrogon\n```\n\n```\ntrogon\ntrogon\ntrogon\ntrogon\n"}
{"cat": "animal", "slot": "specialization", "value": "lycaenid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lycaenid. \n        Output: ", "result": "\n        dog, cat, lion, tiger, leopard, cheetah, butterfly, moth, skipper, cockchafer\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "animal", "slot": "specialization", "value": "marine creature", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are marine creature. \n        Output: ", "result": "\n        shark, whale, dolphin, jellyfish, octopus, squid, crab, lobster, oyster, clam\n    \"\"\"\n    category = \"animal\"\n    condition = \"are marine creature\"\n    words = get_words(category"}
{"cat": "animal", "slot": "specialization", "value": "Old World rabbit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Old World rabbit. \n        Output: ", "result": "\n```\nrabbit, bunny, hare, cottontail, jackrabbit, European rabbit, brown rabbit, black rabbit, domestic rabbit, wild rabbit\n```"}
{"cat": "animal", "slot": "specialization", "value": "leaf miner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are leaf miner. \n        Output: ", "result": "\n        dog, elephant, giraffe, horse, kangaroo, lion, monkey, octopus, penguin, turtle\n    \"\"\"\n    animal_words = [\"dog\", \"elephant\", \"giraffe\", \"horse\", \"kang"}
{"cat": "animal", "slot": "specialization", "value": "comb jelly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are comb jelly. \n        Output: ", "result": "\n        jellyfish, comb jelly, jelly, medusa, ctenophore, hydromedusa, hydra, sea gooseberry, Portuguese man o' war, blue bottle.\n    \"\"\"\n    animal_words = [\"jellyfish\", \"comb jelly\", \""}
{"cat": "animal", "slot": "specialization", "value": "white fox", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are white fox. \n        Output: ", "result": "\n            polar bear, arctic fox, snow leopard, white tiger, white lion, white elephant, white rhinoceros, white buffalo, white deer, white moose \n        \"\"\"\n        category = 'animal'\n        condition = 'are white"}
{"cat": "animal", "slot": "specialization", "value": "carabid beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are carabid beetle. \n        Output: ", "result": "\n```\nbeetle,carabid,insect,entomology,zoology,biology,arthropod,carnivore,herbivore,predator\n```\nExplanation:\nThe words that belong to the category \"animal\" and satisfy the condition \""}
{"cat": "animal", "slot": "specialization", "value": "creepy-crawly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are creepy-crawly. \n        Output: ", "result": "\n          snake, spider, scorpion, centipede, millipede,\n```"}
{"cat": "animal", "slot": "specialization", "value": "timber wolf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are timber wolf. \n        Output: ", "result": "\n```\nwolf,alpha,pack,howl,protect,hunt,family,pack,mate,defend\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "animal", "slot": "specialization", "value": "pug-dog", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pug-dog. \n        Output: ", "result": "\n```\npug,dog,pug-dog,pug-dog,pug-dog,pug-dog,pug-dog,pug-dog,pug-dog,pug-dog\n```"}
{"cat": "animal", "slot": "specialization", "value": "Xestobium rufovillosum", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Xestobium rufovillosum. \n        Output: ", "result": "\n        dog, cat, horse, cow, sheep, pig, elephant, giraffe, zebra, lion. \n        \"\"\"\n        category = 'animal'\n        condition = 'are Xestobium rufovillosum'\n        words = get"}
{"cat": "animal", "slot": "specialization", "value": "bird louse", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are bird louse. \n        Output: ", "result": "\n            1. bird\n            2. louse\n            3. feather\n            4. wing\n            5. fly\n            6. nest\n            7. chirp\n            8. egg\n            9. beak\n            10. birdhouse\n        \"\"\"\n        words ="}
{"cat": "animal", "slot": "specialization", "value": "apodiform bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are apodiform bird. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "specialization", "value": "soft-shelled crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are soft-shelled crab. \n        Output: ", "result": "\n```\ncrab,shelled,soft,animal,\n```\n1. Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: fruit. \n        Condition:"}
{"cat": "animal", "slot": "specialization", "value": "cottontail", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are cottontail. \n        Output: ", "result": "\n```\nrabbit, bunny, cottontail, hare, jackrabbit, cottontail rabbit, cotton tail, bunny rabbit, rabbit hare, cottontail rabbit\n```"}
{"cat": "animal", "slot": "specialization", "value": "homotherm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are homotherm. \n        Output: ", "result": "\n        dog, cat, elephant, giraffe, hippopotamus, \n        kangaroo, koala, lion, tiger, zebra. \n        \"\"\"\n        category = 'animal'\n        condition = 'are homotherm'"}
{"cat": "animal", "slot": "specialization", "value": "cock", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are cock. \n        Output: ", "result": "\n```\nrooster, cockerel, cocker, cocker spaniel, cockatoo, cockatiel, cockalorum, cock-a-doodle-doo, cock-a-leekie, cock-a-hoop\n```\n"}
{"cat": "animal", "slot": "specialization", "value": "entoproct", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are entoproct. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, \n        kangaroo, koala, llama, octopus, \n        penguin, seahorse, snail, spider. \n        \"\"\"\n        category = 'an"}
{"cat": "animal", "slot": "specialization", "value": "Canis lupus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Canis lupus. \n        Output: ", "result": "\n        dog,wolf,Canis lupus,gray wolf,timber wolf,Arctic wolf,gray wolf,wolf,Canis lupus,gray wolf,wolf,Canis lupus,gray wolf,wolf,Canis lup"}
{"cat": "animal", "slot": "specialization", "value": "firefly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are firefly. \n        Output: ", "result": "\n```\nfirefly, glowworm, lightningbug, firefly1, firefly2, firefly3, firefly4, firefly5, firefly6, firefly7\n```"}
{"cat": "animal", "slot": "specialization", "value": "thysanopter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are thysanopter. \n        Output: ", "result": "\n```\nfly,dragonfly,damselfly,mayfly,caddisfly,lepidopter,moth,butterfly,bee\n```"}
{"cat": "animal", "slot": "specialization", "value": "andrena", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are andrena. \n        Output: ", "result": "\n            ant, bee, butterfly, dragonfly, fly, honeybee, ladybug, mosquito, wasp, yellowjacket\n\"\"\"\n\nword_list = [\"ant\", \"bee\", \"butterfly\", \"dragonfly\", \"fly\","}
{"cat": "animal", "slot": "specialization", "value": "vixen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are vixen. \n        Output: ", "result": "\n        dog, fox, vixen, hen, cock, rooster, bull, boar, sow, pig\n    \"\"\"\n    words = []\n    for word in animal_words:\n        if \"vixen\" in word:\n            words.append(word)\n"}
{"cat": "animal", "slot": "specialization", "value": "branchiopodan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are branchiopodan. \n        Output: ", "result": "\n```\ncrayfish, water flea, daphnia, cladocera, branchiopod, crustacean, aquatic, planktonic, freshwater, zooplankton\n```\n\n### Example 2:\n```\nProvide a list"}
{"cat": "animal", "slot": "specialization", "value": "Vulpes velox", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Vulpes velox. \n        Output: ", "result": "\n```\nfox, wolf, coyote, red fox, arctic fox, swift fox, kit fox, red wolf, gray wolf, golden jackal\n```"}
{"cat": "animal", "slot": "specialization", "value": "thysanopteron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are thysanopteron. \n        Output: ", "result": "\n        bee, fly, ant, wasp, moth, butterfly, dragonfly, grasshopper, cricket, beetle. \n        \"\"\"\n        category = 'animal'\n        condition = 'are thysanopteron'\n        words = get_words"}
{"cat": "animal", "slot": "specialization", "value": "hen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hen. \n        Output: ", "result": "\n        dog, cat, chicken, duck, goose, swan, turkey, quail, pigeon, hen\n```\n\n```\nDesired output: \nComma separated list of words: dog, cat, chicken, duck, goose, swan,"}
{"cat": "animal", "slot": "specialization", "value": "Dungeness crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Dungeness crab. \n        Output: ", "result": "\n```\ncrab,crabby,crabber,crabcake,crabapple,crabgrass,crabmeat,crabwalk,crabwise\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "animal", "slot": "specialization", "value": "caprimulgiform bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are caprimulgiform bird. \n        Output: ", "result": "\n            owl, \n            nightjar, \n            potoo, \n            nighthawk, \n            goose, \n            swan, \n            stork, \n            flamingo, \n            pelican, \n            cormorant.\n"}
{"cat": "animal", "slot": "specialization", "value": "Nomia melanderi", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Nomia melanderi. \n        Output: ", "result": "\n        dog, cat, horse, elephant, giraffe, zebra, lion, tiger, panther, leopard \n    \"\"\"\n    category = \"animal\"\n    condition = \"are Nomia melanderi\"\n    words = get_words("}
{"cat": "animal", "slot": "specialization", "value": "Ibero-mesornis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Ibero-mesornis. \n        Output: ", "result": "\n            1. Ibero-mesornis\n            2. Ibero-mesornis\n            3. Ibero-mesornis\n            4. Ibero-mesornis\n            5. Ibero-mesornis\n            6. Ibero-mesornis\n            7."}
{"cat": "animal", "slot": "specialization", "value": "leaf-cutter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are leaf-cutter. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, kangaroo, lion, monkey, parrot, turtle, zebra \n    \"\"\"\n    animal_words = [\"dog\", \"elephant\", \"giraffe\", \""}
{"cat": "animal", "slot": "specialization", "value": "white ant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are white ant. \n        Output: ", "result": "\n```\nelephant, giraffe, kangaroo, koala, penguin, polar bear, seal, walrus, whale, zebra\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "animal", "slot": "specialization", "value": "dipterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are dipterous insect. \n        Output: ", "result": "\n        dog, fly, mosquito, gnat, housefly, horsefly, deerfly, blackfly, buffalo fly, tsetse fly \n    \"\"\"\n    category = 'animal'\n    condition = 'are dipterous insect'\n    words = get_words"}
{"cat": "animal", "slot": "specialization", "value": "spitz", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are spitz. \n        Output: ", "result": " wolf, fox, arctic fox, samoyed, husky, akita, chow, eskimo dog, white fox, silver fox.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words ="}
{"cat": "animal", "slot": "specialization", "value": "lycaenid butterfly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lycaenid butterfly. \n        Output: ", "result": "\n        blue, copper, fritillary, hairstreak, \n        limenitis, melitaea, polyommatus, \n        speyeria, zerynthia\n    \"\"\"\n    category = \"animal\"\n    condition = \"are lycaenid"}
{"cat": "animal", "slot": "specialization", "value": "dictyopterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are dictyopterous insect. \n        Output: ", "result": "\n```\ndragonfly, damselfly, mayfly, stonefly, caddisfly, leech, antlion, lacewing, dobsonfly, beetle\n```\nExplanation:\n\n* The category is \"animal\"\n* The condition is \"are"}
{"cat": "animal", "slot": "specialization", "value": "puppy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are puppy. \n        Output: ", "result": "\n        dog,puppy,pup,canine,whelp,litter,pupil,offspring,brood,littermate\n\"\"\"\n\nword_list = [\"dog\", \"puppy\", \"pup\", \"canine\", \"whelp\", \"l"}
{"cat": "animal", "slot": "specialization", "value": "pleurodont", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pleurodont. \n        Output: ", "result": "\n        dog, cat, lion, tiger, panther, leopard, jaguar, cheetah, cougar, wolf\n    \"\"\"\n    category = \"animal\"\n    condition = \"are pleurodont\"\n    words = get_words(category"}
{"cat": "animal", "slot": "specialization", "value": "Fenusa pusilla", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Fenusa pusilla. \n        Output: ", "result": "\n        dog, cat, mouse, rat, hamster, gerbil, chinchilla, guinea pig, ferret, hedgehog \n    \"\"\"\n    fenusa_pusilla_words = []\n    for word in word_list:\n        if \"Fenusa p"}
{"cat": "animal", "slot": "specialization", "value": "Oryctolagus cuniculus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Oryctolagus cuniculus. \n        Output: ", "result": "\n```\nrabbit, cottontail, bunny, hare, jackrabbit, European rabbit, Oryctolagus, cuniculus\n```\n\nExample 2:\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "animal", "slot": "specialization", "value": "working dog", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are working dog. \n        Output: ", "result": " police, border, guard, military, customs, security, detection, protection, patrol, rescue. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        condition = Condition.objects.get(name='are working dog')\n        words = Word."}
{"cat": "animal", "slot": "specialization", "value": "trichopterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are trichopterous insect. \n        Output: ", "result": "\n            ant, bee, butterfly, dragonfly, fly, gnat, mosquito, moth, beetle, grasshopper\n        \"\"\"\n        category = \"animal\"\n        condition = \"are trichopterous insect\"\n        words = get_words("}
{"cat": "animal", "slot": "specialization", "value": "feeder", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are feeder. \n        Output: ", "result": "\n        dog, cat, bird, fish, hamster, guinea pig, turtle, snake, lizard, \n        rabbit. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        words = Word.objects.filter(category"}
{"cat": "animal", "slot": "specialization", "value": "sulphur butterfly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are sulphur butterfly. \n        Output: ", "result": "\n          dog, elephant, giraffe, horse, kangaroo, lion, octopus, penguin, seahorse, zebra\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words ="}
{"cat": "animal", "slot": "specialization", "value": "longicorn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are longicorn. \n        Output: ", "result": "\n        elephant, giraffe, horse, zebra, rhinoceros, lion, tiger, panther, leopard, cheetah\n    \"\"\"\n    category = \"animal\"\n    condition = \"are longicorn\"\n    words = get_"}
{"cat": "animal", "slot": "specialization", "value": "psocopterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are psocopterous insect. \n        Output: ", "result": "\n        bee, ant, wasp, fly, mosquito, moth, butterfly, cricket, grasshopper, beetle.\n    \"\"\"\n    category = 'animal'\n    condition = 'are psocopterous insect'\n    words = get_words("}
{"cat": "animal", "slot": "specialization", "value": "carinate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are carinate. \n        Output: ", "result": "\n        dog, cat, elephant, giraffe, hippopotamus, kangaroo, lion, monkey, rhinoceros, zebra. \n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"elephant\", \"g"}
{"cat": "animal", "slot": "specialization", "value": "rabbit ears", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are rabbit ears. \n        Output: ", "result": "\n```\nrabbit,ears,rabbitry,rabbitization,rabbitize,rabbitly,rabbithood,rabbitlyness,rabbitness,rabbitly\n```\nExplanation: The word \"rabbit\" satisfies"}
{"cat": "animal", "slot": "specialization", "value": "homeotherm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are homeotherm. \n        Output: ", "result": "\n        dog, cat, elephant, giraffe, hippopotamus, \n        kangaroo, koala, lion, tiger, zebra. \n        \"\"\"\n        category = 'animal'\n        condition = 'are homeotherm'"}
{"cat": "animal", "slot": "specialization", "value": "chrysomelid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are chrysomelid. \n        Output: ", "result": "\n        dog, ant, beetle, grasshopper, cockroach, caterpillar, butterfly, moth,\n```"}
{"cat": "animal", "slot": "specialization", "value": "Apis mellifera", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Apis mellifera. \n        Output: ", "result": "\n```\nbee, honey, hive, queen, worker, drone, pollen, nectar, sting, honeycomb\n```\nExplanation: The words that belong to the category \"animal\" and satisfy the condition \"are Apis mellifera\" are"}
{"cat": "animal", "slot": "specialization", "value": "Helix pomatia", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Helix pomatia. \n        Output: ", "result": "\n```\nsnail, slug, limpet, whelk, conch, nautilus, squid, cuttlefish, octopus\n```"}
{"cat": "animal", "slot": "specialization", "value": "pooch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pooch. \n        Output: ", "result": "\n        dog,cat,bird,fish,horse,cow,sheep,pig,monkey,elephant\n    \"\"\"\n    category = Category.objects.get(name='animal')\n    pooch_words = Word.objects.filter(category=category, definition__"}
{"cat": "animal", "slot": "specialization", "value": "toy dog", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are toy dog. \n        Output: ", "result": "\n            Chihuahua, Poodle, Dachshund, Cocker Spaniel, Beagle, Basset Hound, Pug, Shih Tzu, Bichon Frise, Yorkshire Terrier\n        \"\"\"\n        category = \"animal\"\n        condition = \""}
{"cat": "animal", "slot": "specialization", "value": "ladybird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ladybird. \n        Output: ", "result": "\n```\nant, bee, butterfly, dragonfly, grasshopper, ladybird, moth, spider, wasp\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. "}
{"cat": "animal", "slot": "specialization", "value": "pea crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pea crab. \n        Output: ", "result": "\n```\ncrab,pea,crabby,crabgrass,crabapple,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabb"}
{"cat": "animal", "slot": "specialization", "value": "marine animal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are marine animal. \n        Output: ", "result": "\n        dolphin, whale, shark, turtle, jellyfish, octopus, crab, lobster, squid, fish\n    \"\"\"\n    animal_words = [\"dolphin\", \"whale\", \"shark\", \"turtle\", \"jelly"}
{"cat": "animal", "slot": "specialization", "value": "whirligig beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are whirligig beetle. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, \n        kangaroo, koala, llama, octopus, \n        penguin, rhinoceros, tiger, \n        whirligig beetle, zeb"}
{"cat": "animal", "slot": "specialization", "value": "Paralithodes camtschatica", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Paralithodes camtschatica. \n        Output: ", "result": "\n        lobster, crayfish, shrimp, prawn, lobster, crayfish, shrimp, prawn, lobster, crayfish, shrimp, prawn, lobster, crayfish, shrimp, prawn, lob"}
{"cat": "animal", "slot": "specialization", "value": "peeper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are peeper. \n        Output: ", "result": "\n        dog, cat, bird, fish, frog, snake, monkey, elephant, lion, zebra\n    \"\"\"\n    category = \"animal\"\n    peeper_words = [\"dog\", \"cat\", \"bird\", \"fish\", \"frog\", \""}
{"cat": "animal", "slot": "specialization", "value": "ladybug", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ladybug. \n        Output: ", "result": "\n```\nladybug,beetle,bug,insect,lady,ladybug,beetle,bug,insect,lady\n```"}
{"cat": "animal", "slot": "specialization", "value": "coyote", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are coyote. \n        Output: ", "result": "\n```\ncoyote, wolf, jackal, dog, fox, gray wolf, red wolf, golden jackal, gray wolf, red wolf\n```\nExplanation: The words that belong to the category \"animal\" and satisfy the condition \"are coyote"}
{"cat": "animal", "slot": "specialization", "value": "odonate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are odonate. \n        Output: ", "result": "\n```\ndragonfly, damselfly, mayfly, stonefly, caddisfly, leech, mosquito, ant, bee, wasp\n```"}
{"cat": "animal", "slot": "specialization", "value": "moulter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are moulter. \n        Output: ", "result": "\n        dog, cat, cow, pig, sheep, goat, horse, chicken, duck, turkey\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"moulter\" in word:\n            words.append(word)\n   "}
{"cat": "animal", "slot": "specialization", "value": "mollusc", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mollusc. \n        Output: ", "result": "\n        dog, cat, snail, oyster, crab, lobster, squid, octopus, mussel, clam\n    \"\"\"\n    category = \"animal\"\n    condition = \"are mollusc\"\n    words = get_words(category, condition)"}
{"cat": "animal", "slot": "specialization", "value": "phasmid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are phasmid. \n        Output: ", "result": "\n            1. stick insect\n            2. Walking Stick\n            3. Phasma\n            4. Phasmids\n            5. Stick Insects\n            6. Walking Sticks\n            7. Phasmid Insects\n            8. Phasmids Insects"}
{"cat": "animal", "slot": "specialization", "value": "bird of passage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are bird of passage. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "specialization", "value": "critter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are critter. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, lion, tiger, bear, monkey, elephant\n    \"\"\"\n    category = Category.objects.get(name='animal')\n    critter_words = Word.objects.filter(category=category, definition__"}
{"cat": "animal", "slot": "specialization", "value": "leaf-miner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are leaf-miner. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, \n        kangaroo, koala, lion, monkey, \n        octopus, parrot, penguin, snake, \n        turtle, whale, zeb"}
{"cat": "animal", "slot": "specialization", "value": "brush-footed butterfly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are brush-footed butterfly. \n        Output: ", "result": "\n        comma-separated list of 10 words:\n        comma-separated list of 10 words:\n        comma-separated list of 10 words:\n        comma-separated list of 10 words:\n        comma-separated list of 10 words"}
{"cat": "animal", "slot": "specialization", "value": "weevil", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are weevil. \n        Output: ", "result": "\n```\nant, beetle, cockroach, cricket, flea, grasshopper, locust, spider, tick, weevil\n```\n\n### Example 2:\n```python\npython, c++, java, javascript, python, c++, java, javascript"}
{"cat": "animal", "slot": "specialization", "value": "fertilized egg", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are fertilized egg. \n        Output: ", "result": "\n        dog, cat, chicken, cow, pig, sheep, goat, horse, elephant, giraffe\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"chicken\", \"cow\", \"pig\", \"sheep\", \"goat\", \"hor"}
{"cat": "animal", "slot": "specialization", "value": "Felis domesticus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Felis domesticus. \n        Output: ", "result": "\n        dog, cat, lion, tiger, panther, leopard, cheetah, puma, jaguar, cougar\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "animal", "slot": "specialization", "value": "cirriped", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are cirriped. \n        Output: ", "result": "\n```\ncrab, lobster, shrimp, barnacle, snail, clam, oyster, scallop, krill, hermit crab\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to"}
{"cat": "animal", "slot": "specialization", "value": "pharaoh's ant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pharaoh's ant. \n        Output: ", "result": "\n```\nant, aphid, colony, fungus, infestation, mound, pharaoh, queen, worker\n```\nExplanation: The words that belong to the category \"animal\" and satisfy the condition \"are pharaoh's ant\" are: ant,"}
{"cat": "animal", "slot": "specialization", "value": "Menippe mercenaria", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Menippe mercenaria. \n        Output: ", "result": "\n        fish,crab,lobster,shrimp,oyster,scallop,clam,snail,squid,octopus\n\"\"\"\n\nword_list = [\"fish\", \"crab\", \"lobster\", \"shrimp\", \"oyster\", \"scal"}
{"cat": "animal", "slot": "specialization", "value": "poikilotherm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are poikilotherm. \n        Output: ", "result": "\n        dog, cat, fish, bird, snake, lizard, turtle, crocodile, alligator, \n        whale, dolphin. \n        \"\"\"\n        category = 'animal'\n        condition = 'are poikilotherm'\n       "}
{"cat": "animal", "slot": "specialization", "value": "polyzoan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are polyzoan. \n        Output: ", "result": "\n        fish, shrimp, jellyfish, coral, sea anemone, hydra, Portuguese man o' war, sea sponge, sea cucumber, sea urchin.\n    \"\"\"\n    animal_words = [\"fish\", \"shrimp\", \"jellyfish"}
{"cat": "animal", "slot": "specialization", "value": "neuropteran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are neuropteran. \n        Output: ", "result": "\n```\ndragonfly, damselfly, mayfly, stonefly, caddisfly, leech, antlion, dobsonfly, lacewing, beetle\n```\nExplanation:\nThe words that belong to the category \"animal\" and satisfy the condition \""}
{"cat": "animal", "slot": "specialization", "value": "pest", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pest. \n        Output: ", "result": "\n        dog, \n        cat, \n        mouse, \n        rat, \n        ant, \n        cockroach, \n        spider, \n        wasp, \n        fly.\n    \"\"\"\n    category = \"animal\"\n    condition ="}
{"cat": "animal", "slot": "specialization", "value": "Archaeopteryx lithographica", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Archaeopteryx lithographica. \n        Output: ", "result": "\n        - Archaeopteryx\n        - Lithographica\n        - Archaeopteryx lithographica\n        - Archaeopteryx, lithographica\n        - Archaeopteryx, lithographica\n        - Archaeopteryx lithographica"}
{"cat": "animal", "slot": "specialization", "value": "fictional animal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are fictional animal. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "specialization", "value": "Felis catus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Felis catus. \n        Output: ", "result": "\n        dog, cat, kitten, feline, pussycat, whiskers, furball, purr, meow, hiss\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "animal", "slot": "specialization", "value": "social insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are social insect. \n        Output: ", "result": "\n```\nant, bee, wasp, termite, honeybee, bumblebee, yellowjacket, hornet, paper wasp, mason bee\n```\nExplanation:\n\n1. Provide a list of 10 words that belong to the category"}
{"cat": "animal", "slot": "specialization", "value": "young", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are young. \n        Output: ", "result": " puppy, kitten, calf, foal, chick, duckling, gosling, cub, fawn, piglet. \n        \"\"\"\n        category = Category.objects.get(name='animals')\n        words = Word.objects.filter(category=category"}
{"cat": "animal", "slot": "specialization", "value": "web spinner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are web spinner. \n        Output: ", "result": "\n        dog, cat, spider, scorpion, tarantula, ant, bee, wasp, fly, mosquito \n    \"\"\"\n    category = \"animal\"\n    condition = \"are web spinner\"\n    words = get_words(category, condition)"}
{"cat": "animal", "slot": "specialization", "value": "barnacle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are barnacle. \n        Output: ", "result": "\n        dog, cat, horse, cow, pig, sheep, goat, chicken, duck, turkey\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print"}
{"cat": "animal", "slot": "specialization", "value": "lapdog", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lapdog. \n        Output: ", "result": "\n```\nlapdog, poodle, dachshund, chihuahua, pug, bichon frise, yorkshire terrier, pomeranian, toy poodle, miniature schnauzer\n```\n```"}
{"cat": "animal", "slot": "specialization", "value": "phoronid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are phoronid. \n        Output: ", "result": "\n        dog, cat, horse, zebra, giraffe, lion, elephant, rhinoceros, hippopotamus, crocodile \n    \"\"\"\n    category = \"animal\"\n    condition = \"are phoronid\"\n    words"}
{"cat": "animal", "slot": "specialization", "value": "peanut worm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are peanut worm. \n        Output: ", "result": "\n```\ncat,worm,peanut,caterpillar,moth,butterfly,larva,grub,pupa,cocoon\n```"}
{"cat": "animal", "slot": "specialization", "value": "mongrel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mongrel. \n        Output: ", "result": "\n            dog, cat, horse, cow, sheep, pig, chicken, goat, lion, tiger\n        \"\"\"\n        category = \"animal\"\n        condition = \"are mongrel\"\n        words = get_words(category, condition)\n        return \", \"."}
{"cat": "animal", "slot": "specialization", "value": "telsontail", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are telsontail. \n        Output: ", "result": "\n        elephant, giraffe, hippopotamus, jellyfish, kangaroo, octopus, penguin, seahorse, shark, whale\n    \"\"\"\n    animal_words = [\"elephant\", \"giraffe\", \"hi"}
{"cat": "animal", "slot": "specialization", "value": "two-winged insects", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are two-winged insects. \n        Output: ", "result": "\n        bee, fly, wasp, mosquito, gnat, moth, butterfly, ant, grasshopper, dragonfly. \n        \"\"\"\n        category = 'animal'\n        condition = 'are two-winged insects'\n        words = get_"}
{"cat": "animal", "slot": "specialization", "value": "blister beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are blister beetle. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, \n        kangaroo, koala, llama, meerkat, \n        octopus, ostrich, penguin, rhinoceros, \n        seahorse,"}
{"cat": "animal", "slot": "specialization", "value": "bunny rabbit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are bunny rabbit. \n        Output: ", "result": "\n```\nbunny,rabbit,cottontail,hare,warren,burrow,leap,hop,skip,jump\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n"}
{"cat": "animal", "slot": "specialization", "value": "mecopteran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mecopteran. \n        Output: ", "result": "\n        bee, fly, ant, wasp, spider, mosquito, butterfly, moth, cricket, grasshopper.\n    \"\"\"\n    category = \"animal\"\n    condition = \"are mecopteran\"\n    words = get_words(category,"}
{"cat": "animal", "slot": "specialization", "value": "dalmatian", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are dalmatian. \n        Output: ", "result": "\n        dalmatian, dalmatian, dalmatian, dalmatian, dalmatian, dalmatian, dalmatian, dalmatian, dalmatian, dalmatian. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        dal"}
{"cat": "animal", "slot": "specialization", "value": "Reynard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Reynard. \n        Output: ", "result": "\n```\ncat, fox, wolf, lion, tiger, leopard, panther, cheetah, jaguar, cougar\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "animal", "slot": "specialization", "value": "brachyuran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are brachyuran. \n        Output: ", "result": "\n```\ncrab, lobster, shrimp, crayfish, prawn, lobster, crab, shrimp, crayfish, prawn\n```"}
{"cat": "animal", "slot": "specialization", "value": "thysanuron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are thysanuron. \n        Output: ", "result": "\n        lizard, gecko, skink, monitor, \n        crocodile, alligator, turtle,\n```"}
{"cat": "animal", "slot": "specialization", "value": "Vulpes macrotis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Vulpes macrotis. \n        Output: ", "result": "1. Coyote, 2. Red fox, 3. Gray fox, 4. Swift fox, 5. Arctic fox, 6. Fennec fox, 7. Kit fox, 8. Raccoon dog, 9. Zor"}
{"cat": "animal", "slot": "specialization", "value": "grey fox", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are grey fox. \n        Output: ", "result": "\n```\ngrey,fox,greyfox,grey-fox,greyfoxes,grey-grey-fox,grey-grey-foxes,grey-grey-grey-fox,grey-grey-grey-grey-fox,"}
{"cat": "animal", "slot": "specialization", "value": "clerid beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are clerid beetle. \n        Output: ", "result": "\n```\nant, beetle, clerid, dung, elytra, exoskeleton, grubs, larvae, metallic, predator\n```\nExplanation:\n\n* The category is \"animal\"\n* The condition is \"are clerid be"}
{"cat": "animal", "slot": "specialization", "value": "carriage dog", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are carriage dog. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "specialization", "value": "trichopteran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are trichopteran. \n        Output: ", "result": "\n        bee, butterfly, moth, dragonfly, damselfly, mayfly, ant, grasshopper, cricket, cockroach \n    \"\"\"\n    category = \"animal\"\n    condition = \"are trichopteran\"\n    words = get_"}
{"cat": "animal", "slot": "specialization", "value": "ectoproct", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ectoproct. \n        Output: ", "result": "\n        cuttlefish, octopus, squid, nautilus, sea cucumber, sea lily, sea pig, sea hare, feather star, bryozoan.\n    \"\"\"\n    category = \"animal\"\n    condition = \"are ectopro"}
{"cat": "animal", "slot": "specialization", "value": "ladybird beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ladybird beetle. \n        Output: ", "result": "\n```\nladybird, beetle, lady, bird, insect, red, black, spots, wing, \n```\n\n### Exercise 2:\n```python\n# Input\ncategory = \"vehicle\"\ncondition = \"have more than 4 wheels"}
{"cat": "animal", "slot": "specialization", "value": "molter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are molter. \n        Output: ", "result": "\n        dog, cat, mouse, elephant, giraffe, whale, butterfly, bird, spider, snake\n    \"\"\"\n    category = \"animal\"\n    condition = \"are molter\"\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "specialization", "value": "range animal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are range animal. \n        Output: ", "result": "\n            1. Elephant\n            2. Giraffe\n            3. Lion\n            4. Zebra\n            5. Rhinoceros\n            6. Buffalo\n            7. Hippopotamus\n            8. Kangaroo\n            9. Koala"}
{"cat": "animal", "slot": "specialization", "value": "elater", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are elater. \n        Output: ", "result": "\n```\ncat, mouse, rat, hamster, gerbil, elephant, giraffe, zebra, lion, tiger\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. "}
{"cat": "animal", "slot": "specialization", "value": "defoliator", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are defoliator. \n        Output: ", "result": " elephant, giraffe, kangaroo, lion, monkey, parrot, snake, spider, wolf, zebra. \n        Explanation: elephant, giraffe, kangaroo, lion, monkey, parrot,"}
{"cat": "animal", "slot": "specialization", "value": "trichopteron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are trichopteron. \n        Output: ", "result": "\n        dog, cat, bird, fish, frog, snake, spider, ant, bee, butterfly. \n        \"\"\"\n        category = 'animal'\n        condition = 'are trichopteron'\n        words = get_words(category, condition)\n"}
{"cat": "animal", "slot": "specialization", "value": "cur", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are cur. \n        Output: ", "result": "\n```\ncat, dog, lion, tiger, panther, leopard, cheetah, cougar, bear, wolf\n```\nExplanation: The words that belong to the category animal and satisfy the condition are cat, dog, lion, tiger, panther"}
{"cat": "animal", "slot": "specialization", "value": "honeybee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are honeybee. \n        Output: ", "result": "\n```\nbee, honey, hive, pollen, queen, worker, drone, nectar, honeycomb, apiary\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "animal", "slot": "specialization", "value": "wolf cub", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are wolf cub. \n        Output: ", "result": "\n            1. puppy\n            2. cub\n            3. wolf\n            4. howl\n            5. pack\n            6. hunt\n            7. alpha\n            8. defend\n            9. prey\n            10. territory\n        \"\"\"\n        wolf_"}
{"cat": "animal", "slot": "specialization", "value": "sulfur butterfly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are sulfur butterfly. \n        Output: ", "result": "\n```\nsulfur butterfly, sulfur butterfly, sulfur butterfly, sulfur butterfly, sulfur butterfly, sulfur butterfly, sulfur butterfly, sulfur butterfly, sulfur butterfly, sulfur butterfly\n"}
{"cat": "animal", "slot": "specialization", "value": "stonefly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are stonefly. \n        Output: ", "result": "\n        stonefly,mayfly,caddisfly,trout,hatch,nymph,dryfly,nymphing,stream,flyfishing\n```\n\n```{r}\nlibrary(dplyr)\nlibrary(stringr)\n\nwords <- c(\"stonefly"}
{"cat": "animal", "slot": "specialization", "value": "lampshell", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lampshell. \n        Output: ", "result": "\n        dog, cat, elephant, giraffe, zebra, snail, crab, lobster, shrimp, oyster\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"elephant\", \"giraffe\", \"zebra"}
{"cat": "animal", "slot": "specialization", "value": "red wolf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are red wolf. \n        Output: ", "result": "\n        red,wolf,howl,pack,alpha,mating,hunt,paws,carnivorous,endangered\n    \"\"\"\n    animal_words = [\"red\", \"wolf\", \"howl\", \"pack\", \"alpha\", \"mating\", \"hunt"}
{"cat": "animal", "slot": "specialization", "value": "slave-maker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are slave-maker. \n        Output: ", "result": "\n        dog, \n        cat, \n        horse, \n        cow, \n        sheep, \n        chicken, \n        pig, \n        elephant, \n        giraffe, \n        zebra. \n        \"\"\"\n        category"}
{"cat": "animal", "slot": "specialization", "value": "hemipteron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hemipteron. \n        Output: ", "result": "\n        beetle\n        cockroach\n        grasshopper\n        cricket\n        ant\n        termite\n        ladybug\n        butterfly\n        moth\n        wasp\n    \"\"\"\n    category = \"animal\"\n    condition = \"are hemipteron"}
{"cat": "animal", "slot": "specialization", "value": "sponge", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are sponge. \n        Output: ", "result": "\n        elephant, shark, jellyfish, whale, dolphin, octopus, squid, cuttlefish, nautilus, sponge.\n    \"\"\"\n    animal_words = [\"elephant\", \"shark\", \"jellyfish\", \"wh"}
{"cat": "animal", "slot": "specialization", "value": "stayer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are stayer. \n        Output: ", "result": "\n        dog, cat, horse, elephant, giraffe, zebra, lion, tiger, bear, wolf\n    \"\"\"\n    category = \"animal\"\n    condition = \"are stayer\"\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "specialization", "value": "homoiotherm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are homoiotherm. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "specialization", "value": "hemipterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hemipterous insect. \n        Output: ", "result": "\n        beetle, cockroach, cricket, grasshopper, locust, mantis,\n```"}
{"cat": "animal", "slot": "specialization", "value": "cuckoo-bumblebee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are cuckoo-bumblebee. \n        Output: ", "result": "\n        cuckoo, bumblebee, cuckoo-bumblebee, bumblebee-cuckoo, cuckoo-bumblebee-cuckoo, bumblebee-cuckoo-bumblebee, cuckoo-bumblebee"}
{"cat": "animal", "slot": "specialization", "value": "flea", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are flea. \n        Output: ", "result": "\n```\ncat, flea, fleas, flea, fleas, flea, fleas, flea, fleas\n```"}
{"cat": "animal", "slot": "specialization", "value": "sucking louse", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are sucking louse. \n        Output: ", "result": "\n        dog, cat, lion, tiger, elephant, giraffe, zebra, horse, cow, pig. \n        \"\"\"\n        category = 'animal'\n        condition = 'are sucking louse'\n        words = get_words(category"}
{"cat": "animal", "slot": "specialization", "value": "orthopteran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are orthopteran. \n        Output: ", "result": "\n```\ngrasshopper, cricket, locust, katydid, dragonfly, grasshopper, cricket, locust, katydid, dragonfly\n```"}
{"cat": "animal", "slot": "specialization", "value": "female", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are female. \n        Output: ", "result": "\n            dog, cat, horse, cow, sheep, chicken, goat, pig, elephant, giraffe\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"horse\", \"cow\", \"sheep\", \"chicken\", \"goat\", \"p"}
{"cat": "animal", "slot": "specialization", "value": "acrodont", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are acrodont. \n        Output: ", "result": "\n        dog, cat, lion, tiger, cheetah, leopard, jaguar, puma, cougar, wolf\n    \"\"\"\n    category = \"animal\"\n    condition = \"are acrodont\"\n    words = get_words(category,"}
{"cat": "animal", "slot": "specialization", "value": "holometabola", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are holometabola. \n        Output: ", "result": "\n        beetle, butterfly, moth, dragonfly, damselfly, mayfly, grasshopper, cricket, cockroach, ant. \n    \"\"\"\n    category = 'animal'\n    condition = 'are holometabola'\n    words ="}
{"cat": "animal", "slot": "specialization", "value": "meloid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are meloid. \n        Output: ", "result": "\n        dog, ant, bee, wasp, termite, cockroach, beetle, grasshopper, locust, caterpillar.\n    \"\"\"\n    animal_words = [\"ant\", \"bee\", \"wasp\", \"termite\", \"cockro"}
{"cat": "animal", "slot": "specialization", "value": "toy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are toy. \n        Output: ", "result": "\n        dog, cat, elephant, giraffe, horse, kangaroo, lion, monkey, penguin, tiger\n    \"\"\"\n    category = \"animal\"\n    condition = \"are toy\"\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "specialization", "value": "copepod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are copepod. \n        Output: ", "result": "\n```\ncopepod, crustacean, aquatic, zooplankton, copepodites, copepodid, nauplius, planktonic, Arctic, Antarctic\n```\n\nExample:\n```\nProvide a list of 10 words"}
{"cat": "animal", "slot": "specialization", "value": "echinoderm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are echinoderm. \n        Output: ", "result": "\n```\nstarfish, sea urchin, sand dollar, sea cucumber, brittle star, sea lily, feather star, sea urchin, sand dollar, sea cucumber\n```"}
{"cat": "animal", "slot": "specialization", "value": "nonpasserine bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are nonpasserine bird. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "specialization", "value": "doggie", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are doggie. \n        Output: ", "result": "\n        dog,cat,bird,fish,horse,cow,pig,sheep,elephant,monkey\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "specialization", "value": "Canis latrans", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Canis latrans. \n        Output: ", "result": " coyote, gray wolf, red wolf, \n```"}
{"cat": "animal", "slot": "specialization", "value": "domestic cat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are domestic cat. \n        Output: ", "result": "\n```\ncat, kitten, pussycat, tabby, calico, Siamese, Persian, Maine Coon, Ragdoll, British Shorthair\n```\n```"}
{"cat": "animal", "slot": "specialization", "value": "birch leaf miner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are birch leaf miner. \n        Output: ", "result": "\n        beech, \n        birch, \n        elm, \n        hawthorn, \n        horse-chestnut, \n        lime, \n        oak, \n        sycamore, \n        willow. \n        \"\"\"\n"}
{"cat": "animal", "slot": "specialization", "value": "lightning bug", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lightning bug. \n        Output: ", "result": "\n```\nfirefly, glowworm, lightningbug, lightningbeetle, lightningfly, lightningbugs, lightningbeetles, lightningflies, lightningbeetles, lightningflies\n```"}
{"cat": "animal", "slot": "specialization", "value": "parazoan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are parazoan. \n        Output: ", "result": "\n        elephant, giraffe, kangaroo, lion, monkey, octopus, penguin, seal, snake, zebra\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words ="}
{"cat": "animal", "slot": "specialization", "value": "basenji", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are basenji. \n        Output: ", "result": "\n        basenji,baboon,baboon,baboon,baboon,baboon,baboon,baboon,baboon,baboon \n    \"\"\"\n    basenji_words = [\"basenji\", \"baboon\"]\n"}
{"cat": "animal", "slot": "specialization", "value": "moss animal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are moss animal. \n        Output: ", "result": "\n        dog, cat, elephant, giraffe, lion, monkey, snake, spider, turtle, zebra\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"elephant\", \"giraffe\", \"lion\", \"mon"}
{"cat": "animal", "slot": "specialization", "value": "pollinator", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pollinator. \n        Output: ", "result": "\n        bee, butterfly, moth, hummingbird, bumblebee, honeybee, fly, beetle, ant, ladybug\n    \"\"\"\n    pollinator_words = [\"bee\", \"butterfly\", \"moth\", \"hummingbird\","}
{"cat": "animal", "slot": "specialization", "value": "Urocyon cinereoargenteus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Urocyon cinereoargenteus. \n        Output: ", "result": "\n        dog, coyote, wolf, fox, jackal, dingo, red wolf, gray wolf, Ethiopian wolf,\n```"}
{"cat": "animal", "slot": "specialization", "value": "leaf beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are leaf beetle. \n        Output: ", "result": "\n        dog, elephant, giraffe, horse, kangaroo, koala, lion, monkey, tiger, zebra. \n        \"\"\"\n        category = 'animal'\n        condition = 'are leaf beetle'\n        words = get_"}
{"cat": "animal", "slot": "specialization", "value": "stone fly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are stone fly. \n        Output: ", "result": "\n```\nstone,fly,stonefly,flystone,flyfly,stoneflys,flystones,flyflys,stoneflies\n```"}
{"cat": "animal", "slot": "specialization", "value": "hemipteran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hemipteran. \n        Output: ", "result": "\n        beetle, cockroach, cricket, grasshopper, locust, mantis,\n```"}
{"cat": "animal", "slot": "specialization", "value": "four-footed butterfly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are four-footed butterfly. \n        Output: ", "result": "\n        dog, cat, butterfly, horse, elephant, giraffe, kangaroo, zebra, lion, tiger\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "animal", "slot": "specialization", "value": "elaterid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are elaterid. \n        Output: ", "result": "\n```\ncat, mouse, rat, hamster, gerbil, elephant, giraffe, zebra, rhino, hippopotamus\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "animal", "slot": "specialization", "value": "potter bee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are potter bee. \n        Output: ", "result": "\n```\nbee, drone, hive, pollen, nectar, queen, worker, colony, honey, sting\n```"}
{"cat": "animal", "slot": "specialization", "value": "springtail", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are springtail. \n        Output: ", "result": "\n```\nant, cricket, grasshopper, locust, mantis, millipede, sowbug, spider, tick, \n```\n```"}
{"cat": "animal", "slot": "specialization", "value": "soft-shell crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are soft-shell crab. \n        Output: ", "result": "\n        soft-shell,crabby,crabber,crabcake,crabhouse,crabmeat,crabwalk,crabwise,crabwise,crabwise. \n        \"\"\"\n        category = 'animal'\n        condition = 'are soft-"}
{"cat": "animal", "slot": "specialization", "value": "game", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are game. \n        Output: ", "result": "\n```\ncat, dog, bird, fish, horse, zebra, giraffe, monkey, lion, tiger\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated"}
{"cat": "animal", "slot": "specialization", "value": "stone crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are stone crab. \n        Output: ", "result": "\n        stone, crab, claw, shell, carapace, pincers, crustacean, seafood, delicacy, Florida. \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []"}
{"cat": "animal", "slot": "specialization", "value": "woodborer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are woodborer. \n        Output: ", "result": "\n```\nant, beetle, borer, cockchafer, longhorn, moth, pest, weevil, woodworm\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "animal", "slot": "specialization", "value": "elaterid beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are elaterid beetle. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, \n        kangaroo, koala, lion, rhinoceros, \n        tiger, zebra. \n        \"\"\"\n        category = Category.objects.get(name='"}
{"cat": "animal", "slot": "specialization", "value": "migrator", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are migrator. \n        Output: ", "result": "\n        elephant, giraffe, kangaroo, pelican, penguin, quail, stork, swan, toucan, flamingo\n    \"\"\"\n    animal_migrator = [\"elephant\", \"giraffe\", \"kangaroo\", \""}
{"cat": "animal", "slot": "specialization", "value": "danaid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are danaid. \n        Output: ", "result": "\n        dog, cat, horse, cow, sheep, goat, pig, chicken, elephant, giraffe\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"horse\", \"cow\", \"sheep\", \"goat\", \"pig\", \"ch"}
{"cat": "animal", "slot": "specialization", "value": "cuculiform bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are cuculiform bird. \n        Output: ", "result": "\n            1. Cuckoo\n            2. Cuckoo\n            3. Cuckoo\n            4. Cuckoo\n            5. Cuckoo\n            6. Cuckoo\n            7. Cuckoo\n            8. Cuckoo\n            9. Cuckoo\n"}
{"cat": "animal", "slot": "specialization", "value": "termite", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are termite. \n        Output: ", "result": "\n            ant, termite, cockroach, beetle, grasshopper, cricket, spider, scorpion, centipede, millipede\n        \"\"\"\n        category = \"animal\"\n        condition = \"are termite\"\n        words = get_words"}
{"cat": "animal", "slot": "specialization", "value": "prairie wolf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are prairie wolf. \n        Output: ", "result": "\n```\nwolf,coyote,gray wolf,timber wolf,prairie wolf,Canis lupus,gray wolf,Canis lupus,Canis lupus,Canis lupus,Canis lupus,Canis lupus"}
{"cat": "animal", "slot": "specialization", "value": "pupa", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pupa. \n        Output: ", "result": "\n        dog, butterfly, moth, caterpillar, pupa, ant, bee, wasp, mosquito, ladybug\n```\n\n```\nDescribe a scenario where the input is a list of 10 words, where each word belongs to a different category,"}
{"cat": "animal", "slot": "specialization", "value": "Formica rufa", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Formica rufa. \n        Output: ", "result": "\n        Formica, rufa, ant, colony, queen, worker, nest, forage, trail, pheromones \n    \"\"\"\n    category = \"animal\"\n    condition = \"are Formica rufa\"\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "specialization", "value": "ringlet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ringlet. \n        Output: ", "result": "\n        dog, cat, elephant, giraffe, hippopotamus, kangaroo, lion, monkey, parrot, zebra \n    \"\"\"\n    category = \"animal\"\n    condition = \"are ringlet\"\n    words = get"}
{"cat": "animal", "slot": "specialization", "value": "gray wolf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are gray wolf. \n        Output: ", "result": "\n```\ngray,wolf,wolves,gray-wolf,gray-wolves,grey-wolf,grey-wolves,grey-gray-wolf,grey-gray-wolves,grey-grey-wolf,grey-grey-"}
{"cat": "animal", "slot": "specialization", "value": "cottontail rabbit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are cottontail rabbit. \n        Output: ", "result": "\n```\nrabbit, bunny, cottontail, hare, jackrabbit, rabbitry, warren, bunnyhop, cottontail rabbit, jackrabbit\n```"}
{"cat": "animal", "slot": "specialization", "value": "Alaska crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Alaska crab. \n        Output: ", "result": "\n```\ncrab, salmon, halibut, king crab, snow crab, Dungeness crab, red king crab, blue king crab, Tanner crab\n```"}
{"cat": "animal", "slot": "specialization", "value": "dicky-bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are dicky-bird. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, lion, tiger, monkey, elephant, giraffe\n    \"\"\"\n    category = \"animal\"\n    condition = \"are dicky-bird\"\n    words = get_words(category, condition)\n"}
{"cat": "animal", "slot": "specialization", "value": "darter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are darter. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, lizard, turtle, frog, dolphin, shark\n    \"\"\"\n    category = \"animal\"\n    condition = \"are darter\"\n    words = get_words(category, condition)\n    print"}
{"cat": "animal", "slot": "specialization", "value": "wood rabbit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are wood rabbit. \n        Output: ", "result": "\n```\nrabbit, bunny, wood, carrot, cottontail, burrow, nest, warren, leap, hop\n```\nExplanation:\nThe words that belong to the category \"animal\" and satisfy the condition \"are wood rabbit\" are:"}
{"cat": "animal", "slot": "specialization", "value": "archaeornis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are archaeornis. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "specialization", "value": "Anoplophora glabripennis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Anoplophora glabripennis. \n        Output: ", "result": "\n        bee, ant, wasp, hornet, yellowjacket, bumblebee, honeybee, cicada, grasshopper, cricket \n    \"\"\"\n    category = \"animal\"\n    condition = \"are Anoplophora glabripennis\""}
{"cat": "animal", "slot": "specialization", "value": "seed shrimp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are seed shrimp. \n        Output: ", "result": "\n        dog, cat, fish, bird, snake, lizard, spider, ant, bee, butterfly\n    \"\"\"\n    words = []\n    for word in animal_words:\n        if word.lower() == \"seed shrimp\":\n            words.append("}
{"cat": "animal", "slot": "specialization", "value": "Vulpes fulva", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Vulpes fulva. \n        Output: ", "result": "\n```\nfox, coyote, red fox, gray fox, arctic fox, kit fox, red wolf, gray wolf, jackal, dingo\n```\nExplanation: The words that belong to the category \"animal\" and satisfy the condition \"are"}
{"cat": "animal", "slot": "specialization", "value": "Monomorium minimum", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Monomorium minimum. \n        Output: ", "result": "\n        dog, cat, mouse, rat, hamster, gerbil, guinea pig, chicken, cow, pig\n    \"\"\"\n    category = \"animal\"\n    condition = \"are Monomorium minimum\"\n    words = get_words(category, condition)\n"}
{"cat": "animal", "slot": "specialization", "value": "legionary ant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are legionary ant. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, spider, ant, bee, butterfly, mosquito. \n        \"\"\"\n        category = 'animal'\n        condition = 'are legionary ant'\n        words = get_words(category, condition)"}
{"cat": "animal", "slot": "specialization", "value": "biting louse", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are biting louse. \n        Output: ", "result": "\n        dog, tick, flea, lice, mosquito, spider, ant, bee, wasp, hornet.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "specialization", "value": "predator", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are predator. \n        Output: ", "result": " tiger, lion, cheetah, jaguar, leopard, cougar, shark, barracuda, great white shark, hammerhead shark. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        predators ="}
{"cat": "animal", "slot": "specialization", "value": "leporide", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are leporide. \n        Output: ", "result": "\n        dog, cat, rabbit, hare, fox, squirrel, rat, mouse, hamster, guinea pig \n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"rabbit\", \"hare\", \"fox\", \"squirrel\", \""}
{"cat": "animal", "slot": "specialization", "value": "mason bee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mason bee. \n        Output: ", "result": "\n```\nmason,bee,beehive,beekeeper,beehouse,bee-friendly,bee-attractive,bee-proof,bee-pollinate,bee-symbiotic\n```\n\nExplanation:\n```\nThe"}
{"cat": "animal", "slot": "specialization", "value": "rove beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are rove beetle. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, \n        kangaroo, lion, monkey, penguin, \n        rhinoceros, tiger, zebra. \n        \"\"\"\n        category = 'animal'"}
{"cat": "animal", "slot": "specialization", "value": "wildcat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are wildcat. \n        Output: ", "result": " tiger, leopard, cheetah, jaguar, cougar, lion, leopard, jaguar, cougar, lion.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words ="}
{"cat": "animal", "slot": "specialization", "value": "proturan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are proturan. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, spider, ant, bee, butterfly, fly.\n    \"\"\"\n    category = 'animal'\n    proturan_words = ['dog', 'cat', 'bird', 'fish', 'snake', 'sp"}
{"cat": "animal", "slot": "specialization", "value": "orthopterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are orthopterous insect. \n        Output: ", "result": "\n```\ngrasshopper, cricket, locust, mantis, dragonfly, grasshopper, cricket, locust, mantis, dragonfly\n```"}
{"cat": "animal", "slot": "specialization", "value": "longicorn beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are longicorn beetle. \n        Output: ", "result": "\n          dog, elephant, giraffe, hippopotamus, \n          kangaroo, koala, lion, rhinoceros, \n          tiger, zebra\n    \"\"\"\n    category = \"animal\"\n    condition = \"are"}
{"cat": "animal", "slot": "specialization", "value": "garden snail", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are garden snail. \n        Output: ", "result": "\n```\nslug, snail, snail, snail, snail, snail, snail, snail, snail\n```"}
{"cat": "animal", "slot": "specialization", "value": "sipunculid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are sipunculid. \n        Output: ", "result": "\n        fish, shark, whale, dolphin, octopus, squid, cuttlefish, nautilus, crab, lobster.\n    \"\"\"\n    animal_words = [\"fish\", \"shark\", \"whale\", \"dolphin\", \"octopus"}
{"cat": "animal", "slot": "specialization", "value": "mate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mate. \n        Output: ", "result": "\n        dog,cat,bird,fish,cow,pig,sheep,horse,elephant,giraffe\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"bird\", \"fish\", \"cow\", \"pig\", \"sheep\", \"horse\","}
{"cat": "animal", "slot": "specialization", "value": "zooplankton", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are zooplankton. \n        Output: ", "result": "\n        fish, shrimp, krill, cladocera, copepod, ostracod,\n```"}
{"cat": "animal", "slot": "specialization", "value": "sea moss", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are sea moss. \n        Output: ", "result": "\n        dolphin, fish, jellyfish, kelp, lobster, octopus, oyster, seahorse, squid, starfish\n    \"\"\"\n    animal_words = [\"dolphin\", \"fish\", \"jellyfish\", \"kelp\", \""}
{"cat": "animal", "slot": "specialization", "value": "thysanopterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are thysanopterous insect. \n        Output: ", "result": "\n```\ndragonfly, damselfly, mayfly, stonefly, caddisfly, leech, ant, bee, wasp, hornet\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "animal", "slot": "specialization", "value": "branchiopod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are branchiopod. \n        Output: ", "result": "\n```\ncrayfish, shrimp, lobster, prawn, crawfish, barnacle, clam, oyster, snail, scallop\n```\nExplanation:\n\n1. The category is \"animal\"\n2. The condition is \"are branch"}
{"cat": "animal", "slot": "specialization", "value": "bulldog ant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are bulldog ant. \n        Output: ", "result": "\n```\nbulldog,ant,bull,dog,fight,tenacity,gameness,stubbornness,determination,perseverance\n```\nExplanation:\nThe words that belong to the category \"animal\" and satisfy the condition \"are bulld"}
{"cat": "animal", "slot": "specialization", "value": "alkali bee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are alkali bee. \n        Output: ", "result": "\n        elephant, giraffe, hippopotamus, \n        kangaroo, koala, llama, \n        meerkat, octopus, ostrich, \n        penguin, rhinoceros, \n```"}
{"cat": "animal", "slot": "specialization", "value": "coach dog", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are coach dog. \n        Output: ", "result": "\n```\ncat, coach, dog\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: fruit. \n        Condition: are"}
{"cat": "animal", "slot": "specialization", "value": "Great Pyrenees", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Great Pyrenees. \n        Output: ", "result": "\n```\nwolf,husky,grizzly,bear,lion,tiger,leopard,lioness,cougar,wolfpack\n```"}
{"cat": "animal", "slot": "specialization", "value": "bark beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are bark beetle. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, kangaroo, lion, monkey, panda, raccoon, wolf\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words"}
{"cat": "animal", "slot": "specialization", "value": "pierid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pierid. \n        Output: ", "result": "\n            dog, cat, bird, butterfly, moth, dragonfly, bee, spider, ant, grasshopper \n    \"\"\"\n    category = \"animal\"\n    condition = \"are pierid\"\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "specialization", "value": "hard-shell crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hard-shell crab. \n        Output: ", "result": "\n          dog, cat, bird, fish, snake, lion, turtle, crab, shrimp, lobster\n        \"\"\"\n        category = \"animal\"\n        condition = \"are hard-shell crab\"\n        words = get_words(category, condition"}
{"cat": "animal", "slot": "specialization", "value": "edible snail", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are edible snail. \n        Output: ", "result": "\n```\nslug, snail, escargot, helix, perlemoen, conch, whelk, abalone, oyster, mussel\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. "}
{"cat": "animal", "slot": "specialization", "value": "earwig", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are earwig. \n        Output: ", "result": "\n        dog, \n        cat, \n        bird, \n        fish, \n        snake, \n        spider, \n        ant, \n        bee, \n        butterfly, \n        moth.\n    \"\"\"\n    words = []\n   "}
{"cat": "animal", "slot": "specialization", "value": "king crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are king crab. \n        Output: ", "result": "\n        dog, cat, bird, fish, crab, lobster, shrimp, snail, jellyfish, octopus \n    \"\"\"\n    category = \"animal\"\n    condition = \"are king crab\"\n    words = get_words(category, condition)"}
{"cat": "animal", "slot": "specialization", "value": "giant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are giant. \n        Output: ", "result": "\n        elephant, giraffe, koala, kangaroo, crocodile, alligator, \n        hippopotamus, rhinoceros, \n```"}
{"cat": "animal", "slot": "specialization", "value": "Newfoundland", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Newfoundland. \n        Output: ", "result": "\n```\ndog, seal, fisherman, ice, Newfoundland, Labrador, Canada, St. John's, capital, dog sledding\n```\nExplanation:\nThe words that belong to the category \"animal\" and satisfy the condition \"are Newfoundland\""}
{"cat": "animal", "slot": "specialization", "value": "pureblood", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pureblood. \n        Output: ", "result": "\n            dog, cat, snake, lion, tiger, owl, eagle, butterfly, spider, scorpion\n        \"\"\"\n        category = \"animal\"\n        condition = \"are pureblood\"\n        words = get_words(category, condition)"}
{"cat": "animal", "slot": "specialization", "value": "doggy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are doggy. \n        Output: ", "result": "\n        dog,cat,bird,fish,horse,cow,pig,sheep,elephant,monkey\n    \"\"\"\n    category = Category.objects.get(name='animal')\n    condition = Condition.objects.get(name='are doggy')\n"}
{"cat": "animal", "slot": "specialization", "value": "archeopteryx", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are archeopteryx. \n        Output: ", "result": "\n            1. Archaeopteryx\n            2. Pterodactyl\n            3. Pteranodon\n            4. Rhamphorhynchus\n            5. Dimorphodon\n            6. Scaphognathus\n            7. Hesperornis\n            8"}
{"cat": "animal", "slot": "specialization", "value": "varmint", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are varmint. \n        Output: ", "result": "\n        */\n        public List<string> GetWords(string category, string condition)\n        {\n            List<string> words = new List<string>();\n\n            using (MySqlConnection connection = new MySqlConnection(connectionString))\n            {\n                connection.Open();\n"}
{"cat": "animal", "slot": "specialization", "value": "Belgian hare", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Belgian hare. \n        Output: ", "result": "\n```\nrabbit, hare, bunny, leveret, coney, cottontail, jackrabbit, European rabbit, brown hare, P\u00e8re David's deer\n```\nExplanation:\nThe words that belong to the category \"animal\""}
{"cat": "animal", "slot": "specialization", "value": "Angora", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Angora. \n        Output: ", "result": "\n```\ncat, rabbit, angora, fluffy, soft, wool, cute, cuddly, warm, furry\n```\n\n### Example 2:\nProvide a list of 10 words that belong to the category and satisfy the condition. "}
{"cat": "animal", "slot": "specialization", "value": "water beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are water beetle. \n        Output: ", "result": "\n```\nwater, beetle, aquatic, insect, amphibious, carapace, larva, metamorphosis, hydrophobic, underwater\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to"}
{"cat": "animal", "slot": "specialization", "value": "pharaoh ant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pharaoh ant. \n        Output: ", "result": "\n```\nant, aphid, colony, infestation, mound, pharaoh, queen, worker\n```\n\n#### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "animal", "slot": "specialization", "value": "night bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are night bird. \n        Output: ", "result": "\n            owl, \n            bat, \n            nightingale, \n            whip-poor-will, \n            nighthawk, \n            goose, \n            swan, \n            crane, \n            stork, \n            flaming"}
{"cat": "animal", "slot": "specialization", "value": "ground beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ground beetle. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, \n        kangaroo, lion, monkey, penguin, \n        rhinoceros, tiger, zebra. \n        \"\"\"\n        category = 'animal'"}
{"cat": "animal", "slot": "specialization", "value": "army ant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are army ant. \n        Output: ", "result": "\n```\nant, army, colony, infantry, march, pheromone, queen, salute, soldier, trail\n```\n\n#### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "animal", "slot": "specialization", "value": "gray fox", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are gray fox. \n        Output: ", "result": "\n```\ngray,fox,grey,silver,gray-fox,grey-fox,silver-fox,grey-silver-fox,silver-grey-fox,grey-silver-grey-fox\n```"}
{"cat": "animal", "slot": "specialization", "value": "neuropteron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are neuropteron. \n        Output: ", "result": "\n        beetle,fly,grasshopper,moth,butterfly,dragonfly,cricket,grasshopper,moth,butterfly. \n        \"\"\"\n        category = 'animal'\n        condition = 'are neuropteron'\n       "}
{"cat": "animal", "slot": "specialization", "value": "imago", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are imago. \n        Output: ", "result": "\n        dog, elephant, giraffe, horse, kangaroo, lion, monkey, panda, tiger, zebra\n    \"\"\"\n    category = \"animal\"\n    condition = \"are imago\"\n    words = get_words(category,"}
{"cat": "animal", "slot": "specialization", "value": "lapin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lapin. \n        Output: ", "result": "\n```\nlapin, ch\u00e8vre, agneau, mouton, brebis, agneau, ch\u00e8vre, mouton, agneau, ch\u00e8vre\n```\nExplanation: The words that belong to the category \"animal\" and satisfy the condition \"are"}
{"cat": "animal", "slot": "specialization", "value": "bumblebee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are bumblebee. \n        Output: ", "result": "\n```\nbumblebee, bumblebee, bumblebee, bumblebee, bumblebee, bumblebee, bumblebee, bumblebee, bumblebee\n```"}
{"cat": "animal", "slot": "specialization", "value": "dipteron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are dipteron. \n        Output: ", "result": "\n        dog, fly, ant, bee, mosquito, butterfly, moth, gnat, housefly, mosquito\n    \"\"\"\n    category = \"animal\"\n    condition = \"are dipteron\"\n    words = get_words(category, condition)\n"}
{"cat": "animal", "slot": "specialization", "value": "dickybird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are dickybird. \n        Output: ", "result": "\n```\ndickybird, parrot, cockatoo, macaw, parakeet, budgerigar, canary, finch, sparrow, penguin\n```\nExplanation: The words `dickybird`, `parrot`, `cockatoo`, `mac"}
{"cat": "animal", "slot": "specialization", "value": "ctenophore", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ctenophore. \n        Output: ", "result": "\n        dolphin, octopus, jellyfish, squid, cuttlefish, nautilus, ctenophore,\n```"}
{"cat": "animal", "slot": "specialization", "value": "phasmid insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are phasmid insect. \n        Output: ", "result": "\n            1. stick insect\n            2. walking stick\n            3. mantis\n            4. cockroach\n            5. grasshopper\n            6. cricket\n            7. locust\n            8. stick insect\n            9. walking stick\n            10. mantis"}
{"cat": "animal", "slot": "specialization", "value": "dickey-bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are dickey-bird. \n        Output: ", "result": "\n        dog,cat,bird,pig,cow,sheep,horse,elephant,giraffe,monkey\n```\n\n```\nDescribe a scenario where the input is a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "animal", "slot": "specialization", "value": "gallinaceous bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are gallinaceous bird. \n        Output: ", "result": "\n        chicken, duck, goose, turkey, guinea fowl, pheasant, quail, partridge, peafowl, domestic fowl.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n"}
{"cat": "animal", "slot": "specialization", "value": "dipteran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are dipteran. \n        Output: ", "result": "\n```\nfly, mosquito, gnat, fruitfly, midges, drosophila, vinegar fly,\n```"}
{"cat": "animal", "slot": "specialization", "value": "leaf-cutting bee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are leaf-cutting bee. \n        Output: ", "result": "\n            ant, bee, butterfly, caterpillar, dragonfly, fly, grasshopper, ladybug, spider, wasp\n    \"\"\"\n    animal_words = [\"ant\", \"bee\", \"butterfly\", \"caterpillar\", \""}
{"cat": "animal", "slot": "specialization", "value": "mutant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mutant. \n        Output: ", "result": "\n        dog, cat, fish, bird, snake, spider, monkey, lion, tiger, wolf\n    \"\"\"\n    words = []\n    for word in animal_words:\n        if \"mutant\" in word:\n            words.append(word)\n   "}
{"cat": "animal", "slot": "specialization", "value": "coraciiform bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are coraciiform bird. \n        Output: ", "result": "\n        crow, eagle, falcon, hawk, kite, osprey, raven, seagull, sparrowhawk, vulture\n    \"\"\"\n    category = \"animal\"\n    condition = \"are coraciiform bird\"\n    words = get_words"}
{"cat": "animal", "slot": "specialization", "value": "Canis niger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Canis niger. \n        Output: ", "result": "1. wolf, 2. coyote, 3. gray wolf, 4. red wolf, 5. jackal, 6. dingo, 7. African wild dog, 8. domestic dog, 9. red fox, 10. arctic"}
{"cat": "animal", "slot": "specialization", "value": "brush wolf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are brush wolf. \n        Output: ", "result": "\n```\nwolf,coyote,fox,bear,lion,tiger,leopard,cougar,wolverine,hyena\n```\nExplanation: The words that belong to the category \"animal\" and satisfy the condition \"are brush wolf\""}
{"cat": "animal", "slot": "specialization", "value": "bird of prey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are bird of prey. \n        Output: ", "result": "\n          hawk, eagle, falcon, owl, vulture, kite, heron, stork, osprey,\n```"}
{"cat": "animal", "slot": "specialization", "value": "humblebee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are humblebee. \n        Output: ", "result": "\n```\nhumblebee, bumblebee, bee, beehive, honeybee, workerbee, dronebee, queenbee, mellifluous, pollinate\n```\nExplanation:\nThe word \"humblebee\" is"}
{"cat": "animal", "slot": "specialization", "value": "varment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are varment. \n        Output: ", "result": "\n        dog, cat, mouse, rat, snake, spider, ant, bee, butterfly, fly. \n        \"\"\"\n        category = 'animal'\n        condition = 'are varment'\n        words = get_words(category, condition)\n        return ',"}
{"cat": "animal", "slot": "specialization", "value": "work animal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are work animal. \n        Output: ", "result": "\n        dog, cat, horse, cow, pig, chicken, sheep, goat, elephant, giraffe\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"horse\", \"cow\", \"pig\", \"chicken\", \"sheep\", \"go"}
{"cat": "animal", "slot": "specialization", "value": "nester", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are nester. \n        Output: ", "result": "\n          dog, hen, nest, roost, colony, hive, swarm, flock, herd, colony\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"nester\" in word:\n            words.append(word)\n"}
{"cat": "animal", "slot": "specialization", "value": "racer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are racer. \n        Output: ", "result": "\n        dog, cat, horse, tiger, cheetah, lion, snake, wolf, fox, rabbit\n    \"\"\"\n    category = \"animal\"\n    racer_words = [\"dog\", \"cat\", \"horse\", \"tiger\", \"cheet"}
{"cat": "animal", "slot": "specialization", "value": "cirripede", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are cirripede. \n        Output: ", "result": "\n        crab\n        shrimp\n        lobster\n        barnacle\n        snail\n        clam\n        oyster\n        scallop\n        mussel\n        squid\n    \"\"\"\n    category = \"animal\"\n    condition = \"are cirripede"}
{"cat": "animal", "slot": "specialization", "value": "orthopteron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are orthopteron. \n        Output: ", "result": "\n```\ngrasshopper, cricket, locust, katydid, mantis, dragonfly, grasshopper, cricket, locust, katydid\n```\nExplanation: The words that belong to the category \"animal\" and satisfy the condition \"are orthopter"}
{"cat": "animal", "slot": "specialization", "value": "pierid butterfly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pierid butterfly. \n        Output: ", "result": "\n        peacock, swallowtail, painted lady, monarch, \n        cabbage white, red admiral, mourning cloak, \n        question mark, comma. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"butterfly\""}
{"cat": "animal", "slot": "specialization", "value": "Vulpes vulpes", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Vulpes vulpes. \n        Output: ", "result": "\n        fox, wolf, jackal, coyote, red fox, gray fox, arctic fox, kit fox, red wolf, gray wolf.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")"}
{"cat": "animal", "slot": "specialization", "value": "carpenter bee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are carpenter bee. \n        Output: ", "result": "\n            ant, bee, beetle, butterfly, caterpillar, dragonfly, \n            fly, moth, spider, wasp. \n        \"\"\"\n        category = 'animal'\n        condition = 'are carpenter bee'\n       "}
{"cat": "animal", "slot": "specialization", "value": "fiddler crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are fiddler crab. \n        Output: ", "result": "\n            ant, crab, fiddle, fiddler, fiddling, fiddler's, fiddler's crab, fiddler's fiddling, fiddler's fiddling crab, fiddler's fiddle, fiddler's fiddle"}
{"cat": "animal", "slot": "specialization", "value": "raptor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are raptor. \n        Output: ", "result": "\n        hawk, eagle, falcon, kestrel, osprey, buzzard, vulture, kite, harrier, falconet\n    \"\"\"\n    raptor_words = [\"hawk\", \"eagle\", \"falcon\", \"kestrel\","}
{"cat": "animal", "slot": "specialization", "value": "parrot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are parrot. \n        Output: ", "result": "\n```\nparrot, macaw, cockatoo, parakeet, conure, budgerigar, lovebird, parrotlet, Amazon parrot, African grey\n```"}
{"cat": "animal", "slot": "specialization", "value": "Monomorium pharaonis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Monomorium pharaonis. \n        Output: ", "result": "\n        dog, cat, mouse, rat, elephant, giraffe, lion, zebra, hippo, crocodile. \n        \"\"\"\n        category = 'animal'\n        condition = 'are Monomorium pharaonis'\n        words = get"}
{"cat": "animal", "slot": "specialization", "value": "Angora rabbit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Angora rabbit. \n        Output: ", "result": "\n            1. Angora\n            2. rabbit\n            3. wool\n            4. fluffy\n            5. white\n            6. bunny\n            7. cute\n            8. soft\n            9. cuddly\n            10. furry\n"}
{"cat": "animal", "slot": "specialization", "value": "Sinornis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Sinornis. \n        Output: ", "result": "\n        dog, cat, bird, fish, lion, tiger, elephant, giraffe, zebra, \n        snake, crocodile. \n        \"\"\"\n        category = 'animal'\n        condition = 'are Sinornis'\n        words ="}
{"cat": "animal", "slot": "specialization", "value": "deathwatch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are deathwatch. \n        Output: ", "result": "\n```\nant, beetle, cockroach, cricket, fly, grasshopper, mantis, spider, tick, wasp\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "animal", "slot": "specialization", "value": "metabola", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are metabola. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, lion, elephant, giraffe, monkey, zebra\n    \"\"\"\n    category = \"animal\"\n    condition = \"are metabola\"\n    words = get_words(category, condition)\n"}
{"cat": "animal", "slot": "specialization", "value": "insectivore", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are insectivore. \n        Output: ", "result": "\n```\nant, bee, butterfly, fly, grasshopper, ladybug, mosquito, spider, tick, wasp\n```\nExplanation:\n\n1. Provide a list of 10 words that belong to the category and satisfy the condition.\n2"}
{"cat": "animal", "slot": "specialization", "value": "bunny", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are bunny. \n        Output: ", "result": "\n```\nbunny,rabbit,hare,cottontail,warren,burrow,leap,jump,nibble,hop\n```\nExplanation: The words that belong to the category \"animal\" and satisfy the condition \"are bunny"}
{"cat": "animal", "slot": "specialization", "value": "thoroughbred", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are thoroughbred. \n        Output: ", "result": "\n        dog, cat, horse, zebra, giraffe, lion, tiger, elephant, rhinoceros, cheetah \n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"horse\", \"zebra\", \"giraffe\","}
{"cat": "animal", "slot": "specialization", "value": "male", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are male. \n        Output: ", "result": "\n        dog, cat, horse, elephant, giraffe, lion, tiger, zebra, rhinoceros, hippopotamus\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"horse\", \"elephant\", \"gira"}
{"cat": "animal", "slot": "specialization", "value": "Alaska king crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Alaska king crab. \n        Output: ", "result": "\n```\ncrab,crabby,crabgrass,crabapple,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabby,cra"}
{"cat": "animal", "slot": "specialization", "value": "maned wolf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are maned wolf. \n        Output: ", "result": "\n```\nmaned,wolf,gray,maned,wolf,gray,maned,wolf,gray,maned,wolf,gray\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "animal", "slot": "specialization", "value": "grey wolf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are grey wolf. \n        Output: ", "result": "\n```\ngrey,wolf,wolves,gray,greyhound,greyhounds,greyhound,greyhounds,greyhound,greyhounds,greyhound,greyhounds,greyhound,greyhounds,"}
{"cat": "animal", "slot": "specialization", "value": "deathwatch beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are deathwatch beetle. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, \n        kangaroo, lion, octopus, penguin, \n        rhinoceros, shark, tiger, whale. \n        \"\"\"\n        category = 'an"}
{"cat": "animal", "slot": "specialization", "value": "little black ant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are little black ant. \n        Output: ", "result": "\n```\nant, black, little, ant, black, little, ant, black, little, ant\n```"}
{"cat": "animal", "slot": "specialization", "value": "plecopteran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are plecopteran. \n        Output: ", "result": "\n        bee, butterfly, dragonfly, fly, gnat, mosquito, moth,\n```"}
{"cat": "animal", "slot": "specialization", "value": "flightless bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are flightless bird. \n        Output: ", "result": "\n          penguin, emu, ostrich, kiwi, cassowary, rhea, emu, ostrich, kiwi, cassowary\n    \"\"\"\n    animal_words = [\"penguin\", \"emu\", \"ostrich\", \"kiwi\","}
{"cat": "animal", "slot": "specialization", "value": "embryo", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are embryo. \n        Output: ", "result": "\n        dog, cat, bird, fish, frog, snake, cow, sheep, pig, chicken\n    \"\"\"\n    category = \"animal\"\n    condition = \"are embryo\"\n    words = get_words(category, condition)\n    print(\", \".join"}
{"cat": "animal", "slot": "specialization", "value": "danaid butterfly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are danaid butterfly. \n        Output: ", "result": "\n        comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma, comma,"}
{"cat": "animal", "slot": "specialization", "value": "conceptus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are conceptus. \n        Output: ", "result": "\n            \n    \"\"\"\n    animal_conceptus_words = [\"conceptus\", \"embryo\", \"fetus\", \"zygote\", \"blastocyst\", \"trophoblast\", \"placenta\", \"embryonic\", \"fetal\"]\n    return"}
{"cat": "animal", "slot": "specialization", "value": "wolf pup", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are wolf pup. \n        Output: ", "result": "\n            1. wolf\n            2. pup\n            3. howl\n            4. pack\n            5. hunt\n            6. prey\n            7. alpha\n            8. family\n            9. territory\n            10. pack\n        \"\"\"\n        words = []\n"}
{"cat": "animal", "slot": "specialization", "value": "ephemerid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ephemerid. \n        Output: ", "result": "\n        dog, mosquito, mayfly, cricket, grasshopper, dragonfly, ant, spider, bee, butterfly. \n        \"\"\"\n        category = \"animal\"\n        condition = \"are ephemerid\"\n        words = get_words"}
{"cat": "animal", "slot": "specialization", "value": "stomatopod crustacean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are stomatopod crustacean. \n        Output: ", "result": "\n```\ncrab, lobster, shrimp, prawn, krill, mantis shrimp, squid, crayfish, barnacle, snail\n```\n\n### Example 2:\n```python\nGenerate a list of 10 words that belong"}
{"cat": "animal", "slot": "specialization", "value": "Canis lupus tundrarum", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Canis lupus tundrarum. \n        Output: ", "result": "\n```\nwolf, arctic wolf, white arctic wolf, canis lupus tundrarum, tundra wolf, polar wolf, snow wolf, white wolf, arctic wolf, white arctic wolf\n```\nExplanation:\nThe"}
{"cat": "animal", "slot": "specialization", "value": "prairie fox", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are prairie fox. \n        Output: ", "result": "\n```\ncoyote, fox, wolf, bison, buffalo, antelope, deer, elk, prairie dog, skunk\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "animal", "slot": "specialization", "value": "sea mat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are sea mat. \n        Output: ", "result": "\n        fish, shark, whale, dolphin, jellyfish, octopus, crab, lobster, oyster, clam\n\"\"\"\n\n# Define the category and condition\ncategory = \"animal\"\ncondition = \"are sea mat\"\n\n# Define"}
{"cat": "animal", "slot": "specialization", "value": "malacostracan crustacean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are malacostracan crustacean. \n        Output: ", "result": "\n```\ncrab, shrimp, lobster, prawn, crayfish, krill, barnacle, squid, mantis shrimp, shrimp\n```\nExplanation:\n\n1. Provide a list of 10 words that belong to the"}
{"cat": "animal", "slot": "specialization", "value": "house cat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are house cat. \n        Output: ", "result": "\n```\ncat, kitten, litter, purr, scratch, meow, whiskers, fur, claws\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma"}
{"cat": "animal", "slot": "specialization", "value": "Symbion pandora", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Symbion pandora. \n        Output: ", "result": "\n        elephant, giraffe, kangaroo, koala, octopus, penguin, seahorse, starfish, turtle, zebra \n    \"\"\"\n    category = \"animal\"\n    condition = \"are Symbion pandora"}
{"cat": "animal", "slot": "specialization", "value": "offspring", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are offspring. \n        Output: ", "result": "\n        dog, \n        cat, \n        horse, \n        cow, \n        sheep, \n        pig, \n        chicken, \n        goat, \n        lion, \n        tiger, \n        elephant, \n       "}
{"cat": "animal", "slot": "specialization", "value": "survivor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are survivor. \n        Output: ", "result": "\n            1. crocodile\n            2. shark\n            3. snake\n            4. lion\n            5. tiger\n            6. bear\n            7. alligator\n            8. elephant\n            9. hippopotamus\n            10"}
{"cat": "animal", "slot": "specialization", "value": "captive", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are captive. \n        Output: ", "result": "\n        elephant, giraffe, kangaroo, lion, meerkat, monkey, penguin, seal, tiger, zebra\n    \"\"\"\n    animal_words = [\"elephant\", \"giraffe\", \"kangaroo\", \""}
{"cat": "animal", "slot": "specialization", "value": "bryozoan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are bryozoan. \n        Output: ", "result": "\n        fish, shrimp, crab, lobster, snail, scallop, oyster, clam, mussel, squid\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "animal", "slot": "specialization", "value": "Alopex lagopus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Alopex lagopus. \n        Output: ", "result": "\n        fox, arctic, snow, white, tail, bushy, red, agile, hunt, leap\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"Alopex lagopus\" in word:\n            words.append("}
{"cat": "animal", "slot": "specialization", "value": "ratite bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ratite bird. \n        Output: ", "result": "\n            1. ostrich\n            2. emu\n            3. rhea\n            4. cassowary\n            5. kiwi\n            6. condor\n            7. vulture\n            8. stork\n            9. flamingo\n            10."}
{"cat": "animal", "slot": "specialization", "value": "ephemeropteran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ephemeropteran. \n        Output: ", "result": "\n```\ndragonfly, damselfly, mayfly, stonefly, caddisfly, dobsonfly, leech, beetle, ant, grasshopper\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to"}
{"cat": "animal", "slot": "specialization", "value": "ostracod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ostracod. \n        Output: ", "result": "\n        dog, cat, bird, fish, snail, crab, lobster, shrimp, oyster, ostracod\n    \"\"\"\n    category = \"animal\"\n    condition = \"are ostracod\"\n    words = get_words(category, condition)"}
{"cat": "animal", "slot": "specialization", "value": "mussel shrimp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mussel shrimp. \n        Output: ", "result": "\n```\ncat, mussel, shrimp\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: fruit. \n        Cond"}
{"cat": "animal", "slot": "specialization", "value": "nymphalid butterfly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are nymphalid butterfly. \n        Output: ", "result": "\n        peacock, swallowtail, monarch, painted lady, mourning cloak, \n        comma, question mark, exclamation mark, dollar sign, percent sign. \n        \"\"\"\n        category = 'animal'\n        condition = 'are nymphalid but"}
{"cat": "animal", "slot": "specialization", "value": "andrenid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are andrenid. \n        Output: ", "result": "\n```\ncat, ant, bee, wasp, hornet, yellowjacket, bumblebee, honeybee, firefly, glowworm\n```"}
{"cat": "animal", "slot": "specialization", "value": "mutt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mutt. \n        Output: ", "result": "\n        dog,cat,bird,fish,horse,cow,sheep,pig,monkey,elephant\n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"bird\", \"fish\", \"horse\", \"cow\", \"sheep\", \"pig\", \""}
{"cat": "animal", "slot": "specialization", "value": "ringlet butterfly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ringlet butterfly. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, kangaroo, lion, octopus, penguin, seahorse, zebra\n    \"\"\"\n    category = \"animal\"\n    condition = \"are ringlet butterfly"}
{"cat": "animal", "slot": "specialization", "value": "scavenger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are scavenger. \n        Output: ", "result": "\n            1. hyena\n            2. vulture\n            3. shark\n            4. eagle\n            5. crocodile\n            6. seagull\n            7. cat\n            8. crow\n            9. owl\n            10. jackal\n        \"\"\""}
{"cat": "animal", "slot": "specialization", "value": "passerine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are passerine. \n        Output: ", "result": "\n        finch, sparrow, canary, warbler, nightingale, lark, wren, thrush, blackbird, robin\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "animal", "slot": "specialization", "value": "lamellicorn beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lamellicorn beetle. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, kangaroo, lion, rhinoceros, tiger, zebra, \n        Category: animal. \n        Condition: are mammal. \n        Output: \n"}
{"cat": "animal", "slot": "specialization", "value": "thysanuran insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are thysanuran insect. \n        Output: ", "result": "\n        cricket, grasshopper, locust, mantis, stick insect, cockroach, termite, ant, beetle, spider. \n        \"\"\"\n        category = 'animal'\n        condition = 'are thysanuran insect'\n        words ="}
{"cat": "animal", "slot": "specialization", "value": "Newfoundland dog", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Newfoundland dog. \n        Output: ", "result": "\n        dog, Labrador Retriever, St. Bernard, Great Dane, Irish Wolfhound, Newfoundland, Siberian Husky, Alaskan Malamute, Beagle, Basset Hound. \n        \"\"\"\n        category = Category.objects.get(name='"}
{"cat": "animal", "slot": "specialization", "value": "ephemeron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ephemeron. \n        Output: ", "result": "\n        dog, cat, bird, fish, snake, butterfly, spider, ant, bee, mosquito\n    \"\"\"\n    category = \"animal\"\n    condition = \"are ephemeron\"\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "specialization", "value": "sea animal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are sea animal. \n        Output: ", "result": "\n        dolphin, fish, jellyfish, killer whale, lobster, octopus, penguin, seal, shark, turtle\n    \"\"\"\n    animal_words = [\"dolphin\", \"fish\", \"jellyfish\", \"killer whale"}
{"cat": "animal", "slot": "specialization", "value": "Belgian griffon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Belgian griffon. \n        Output: ", "result": "\n```\ngriffon, griffon, griffon, griffon, griffon, griffon, griffon, griffon, griffon\n```"}
{"cat": "animal", "slot": "specialization", "value": "scorpion shell", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are scorpion shell. \n        Output: ", "result": "\n```\nscorpion, shell, sting, venom, tail, claws, poison, arachnid, exoskeleton, underworld\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "animal", "slot": "specialization", "value": "Mexican hairless", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Mexican hairless. \n        Output: ", "result": "\n        dog, cat, chihuahua, xoloitzcuintle, guinea pig, \n        hedgehog, iguana, \n```"}
{"cat": "animal", "slot": "specialization", "value": "worm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are worm. \n        Output: ", "result": "\n        dog, cat, snake, frog, worm, spider, ant, butterfly, bee, mosquito \n    \"\"\"\n    category = \"animal\"\n    condition = \"are worm\"\n    words = get_words(category, condition)\n"}
{"cat": "animal", "slot": "specialization", "value": "gallfly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are gallfly. \n        Output: ", "result": "\n        dog,fly,gall,fly,gall,fly,gall,fly,gall,fly. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        condition = Condition.objects.get(name='are gallfly')\n       "}
{"cat": "animal", "slot": "specialization", "value": "ladybeetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ladybeetle. \n        Output: ", "result": "\n```\nladybug, ladybeetle, ladybird, lady, ladybug, ladybeetle, ladybird, lady, ladybug, ladybeetle, ladybird, lady, ladybug, ladybeetle, ladybird, lady, ladybug, ladybeetle,"}
{"cat": "animal", "slot": "specialization", "value": "slave ant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are slave ant. \n        Output: ", "result": "\n```\nant\n```"}
{"cat": "animal", "slot": "specialization", "value": "metazoan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are metazoan. \n        Output: ", "result": " cat, dog, elephant, giraffe, horse, kangaroo, lion, monkey, snake, zebra. \n        \"\"\"\n        category = 'animal'\n        condition = 'are metazoan'\n        words = get_words(category"}
{"cat": "animal", "slot": "specialization", "value": "shellfish", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are shellfish. \n        Output: ", "result": "\n        crab, lobster, shrimp, oyster, scallop, clam, mussel, snail, abalone, squid\n    \"\"\"\n    category = \"animal\"\n    condition = \"are shellfish\"\n    words = get_words(category,"}
{"cat": "animal", "slot": "specialization", "value": "twitterer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are twitterer. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "specialization", "value": "mining bee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mining bee. \n        Output: ", "result": "\n            ant, bee, bumblebee, honeybee, mining bee, mason bee, blue orchard bee, leafcutter bee, cellophane bee, carpenter bee\n        \"\"\"\n        category = \"animal\"\n       "}
{"cat": "animal", "slot": "specialization", "value": "Cancer magister", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Cancer magister. \n        Output: ", "result": "\n        dog, elephant, giraffe, hippopotamus, \n        kangaroo, lion, monkey, octopus, \n        penguin, rhinoceros, tiger, whale. \n        \"\"\"\n        category = 'an"}
{"cat": "animal", "slot": "specialization", "value": "carpet beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are carpet beetle. \n        Output: ", "result": "\n        dog, cat, mouse, rat, bird, spider, ant, bee, butterfly, beetle. \n    \"\"\"\n    animal_words = [\"dog\", \"cat\", \"mouse\", \"rat\", \"bird\", \"spider\", \"ant\", \"bee\","}
{"cat": "animal", "slot": "specialization", "value": "rock crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are rock crab. \n        Output: ", "result": "\n```\ncrab,crabby,crabgrass,crabapple,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabby,cra"}
{"cat": "animal", "slot": "specialization", "value": "stomatopod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are stomatopod. \n        Output: ", "result": "\n```\ncrab, lobster, shrimp, krill, mantis shrimp, snapping shrimp, squid, cuttlefish, nautilus, octopus\n```"}
{"cat": "animal", "slot": "specialization", "value": "tiger beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are tiger beetle. \n        Output: ", "result": "\n```\ntiger,beetle\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: fruit. \n        Cond"}
{"cat": "animal", "slot": "specialization", "value": "barker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are barker. \n        Output: ", "result": "\n        dog, cat, bark, barker, howl, meow, roar, growl, chirp, tweet\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "animal", "slot": "specialization", "value": "griffon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are griffon. \n        Output: ", "result": "\n        dog, eagle, griffin, griffon, hawk, lion, phoenix, raptor, vulture, wyvern \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []"}
{"cat": "animal", "slot": "specialization", "value": "ephemeral", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ephemeral. \n        Output: ", "result": "\n```\ncat, frog, butterfly, mayfly, dragonfly, locust, grasshopper, cicada, ant, bee\n```\n\n### Example 2:\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "animal", "slot": "specialization", "value": "Asian longhorned beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Asian longhorned beetle. \n        Output: ", "result": "\n        longhorn,beetle,Asian,invasive,forest,pest,wood,tree,damage,ecosystem \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "animal", "slot": "specialization", "value": "clerid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are clerid. \n        Output: ", "result": "\n        elephant,giraffe,hippopotamus,kangaroo,lion,monkey,owl,snake,zebra,\n```"}
{"cat": "animal", "slot": "specialization", "value": "gallinacean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are gallinacean. \n        Output: ", "result": "\n        chicken, duck, goose, turkey, pigeon, quail, guinea fowl, emu, ostrich, rhea.\n    \"\"\"\n    animal_words = [\"chicken\", \"duck\", \"goose\", \"turkey\","}
{"cat": "animal", "slot": "specialization", "value": "Arctic wolf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Arctic wolf. \n        Output: ", "result": "\n```\nArctic,wolf,white,coat,pack,howl,hunt,tundra,maintain,survive\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "animal", "slot": "specialization", "value": "lady beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lady beetle. \n        Output: ", "result": "\n        ladybug, ladybeetle, ladybird, lady, ladybug, ladybeetle, ladybird, lady, ladybug, ladybeetle, ladybird, lady, ladybug, ladybeetle, ladybird, lady, ladybug, ladybeetle, ladybird"}
{"cat": "animal", "slot": "specialization", "value": "pug", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pug. \n        Output: ", "result": "\n```\npug,toy,puggle,pugly,pugnacious,pugilist,pugilistic,pugilistic,pugilistic,pugilistic,pugilistic,pugilistic,pugilistic,pug"}
{"cat": "animal", "slot": "specialization", "value": "Welsh corgi", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Welsh corgi. \n        Output: ", "result": "\n```\ncorgi,pembroke,cardigan,welsh,corgi,welsh,corgi,welsh,corgi,welsh,corgi\n```"}
{"cat": "animal", "slot": "specialization", "value": "carpenter ant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are carpenter ant. \n        Output: ", "result": "\n```\nant, carpenter, colony, damage, wood, home, infestation, nest, pest, structural\n```"}
{"cat": "animal", "slot": "specialization", "value": "cnidarian", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are cnidarian. \n        Output: ", "result": "\n        jellyfish, comb jelly, sea wasp, Portuguese man o' war, blue bottle, lion's mane jellyfish, hydrozoa, coral, sea anemone, cnidarian\n    \"\"\"\n    category = \"animal\"\n    condition"}
{"cat": "animal", "slot": "specialization", "value": "piciform bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are piciform bird. \n        Output: ", "result": "\n```\ntoucan, macaw, parrot, cockatoo, penguin, flamingo, owl, eagle, hawk, falcon\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to"}
{"cat": "animal", "slot": "specialization", "value": "leaf-cutter bee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are leaf-cutter bee. \n        Output: ", "result": "\n            ant, bee, butterfly, caterpillar, dragonfly, ladybug, mantis, mosquito, spider, wasp\n        \"\"\"\n        category = \"animal\"\n        condition = \"are leaf-cutter bee\"\n        words ="}
{"cat": "animal", "slot": "specialization", "value": "omnivore", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are omnivore. \n        Output: ", "result": "\n        dog, cat, cow, pig, chicken, sheep, goat, horse, elephant, giraffe\n    \"\"\"\n    category = \"animal\"\n    condition = \"are omnivore\"\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "specialization", "value": "slave-making ant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are slave-making ant. \n        Output: ", "result": "\n```\nant, \nbee, \nwasp, \nyellowjacket, \nhornet, \nmason, \nsweat, \nfire, \nslave-making\n```"}
{"cat": "animal", "slot": "specialization", "value": "fire ant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are fire ant. \n        Output: ", "result": "\n```\nant\nbee\nbutterfly\ndragonfly\nfly\ngiraffe\nlion\nmonkey\nsnake\nzebra\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "animal", "slot": "specialization", "value": "driver ant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are driver ant. \n        Output: ", "result": "\n        dog, cat, ant, bee, butterfly, moth, spider, scorpion, centipede, millipede.\n    \"\"\"\n    category = \"animal\"\n    condition = \"are driver ant\"\n    words = get_words(category, condition)"}
{"cat": "animal", "slot": "specialization", "value": "carinate bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are carinate bird. \n        Output: ", "result": "\n            canary, cardinal, crane, crow, dove, eagle, falcon, hawk, heron, ibis\n        \"\"\"\n        category = \"animal\"\n        condition = \"are carinate bird\"\n        words = get_words(category, condition)\n       "}
{"cat": "animal", "slot": "specialization", "value": "copepod crustacean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are copepod crustacean. \n        Output: ", "result": "\n```\ncopepod, crustacean, zooplankton, aquatic, filter-feeder, copepodites, nauplii,\n```\n1. Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "animal", "slot": "specialization", "value": "archaeopteryx", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are archaeopteryx. \n        Output: ", "result": "\n            1. Archaeopteryx\n            2. Pterodactyl\n            3. Pteranodon\n            4. Quetzalcoatlus\n            5. Dimorphodon\n            6. Rhamphorhynchus\n            7. Hesperornis\n            "}
{"cat": "animal", "slot": "specialization", "value": "protoavis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are protoavis. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "specialization", "value": "purebred", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are purebred. \n        Output: ", "result": "\n        dog, cat, horse, elephant, giraffe, zebra, lion, tiger, panther, cheetah\n    \"\"\"\n    category = \"animal\"\n    condition = \"are purebred\"\n    words = get_words(category, condition"}
{"cat": "animal", "slot": "specialization", "value": "stunt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are stunt. \n        Output: ", "result": "\n```\ncat, jump, fly, dive, leap, flip, somersault, twist, tumble, backflip\n```\n```"}
{"cat": "animal", "slot": "specialization", "value": "carpet bug", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are carpet bug. \n        Output: ", "result": "\n        dog, cat, mouse, elephant, giraffe, lion, zebra, snake, spider, scorpion \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "animal", "slot": "specialization", "value": "Canis rufus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Canis rufus. \n        Output: ", "result": "\n            wolf, coyote, fox, jackal, dingo, red wolf, gray wolf, Ethiopian wolf,\n```"}
{"cat": "animal", "slot": "specialization", "value": "coelenterate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are coelenterate. \n        Output: ", "result": "\n        fish, jellyfish, coral, sea anemone, starfish, sea urchin, sea cucumber, sea sponge, sea turtle, seahorse.\n    \"\"\"\n    animal_words = [\"fish\", \"jellyfish\", \"coral\","}
{"cat": "animal", "slot": "specialization", "value": "homopteran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are homopteran. \n        Output: ", "result": "\n        beetle, cockroach, grasshopper, cricket, ant, termite,\n```"}
{"cat": "animal", "slot": "specialization", "value": "homopterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are homopterous insect. \n        Output: ", "result": "\n```\nant, grasshopper, cricket, locust, mantis, cockroach, termite, cricket, grasshopper, locust\n```"}
{"cat": "animal", "slot": "specialization", "value": "raptorial bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are raptorial bird. \n        Output: ", "result": "\n        hawk, eagle, falcon, osprey, kestrel, goshawk, buzzard, vulture, kite, harrier\n    \"\"\"\n    category = \"animal\"\n    condition = \"are raptorial bird\"\n    words = get_"}
{"cat": "animal", "slot": "specialization", "value": "adult", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are adult. \n        Output: ", "result": "\n```\ncat, dog, elephant, giraffe, horse, lion, zebra\n```"}
{"cat": "animal", "slot": "specialization", "value": "European rabbit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are European rabbit. \n        Output: ", "result": "\n```\nrabbit, bunny, cottontail, hare, jackrabbit, European rabbit, Oryctolagus cuniculus, lagomorph, lagomorpha\n```\n\nExample:\n```\nProvide a list of 10 words"}
{"cat": "animal", "slot": "specialization", "value": "predatory animal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are predatory animal. \n        Output: ", "result": "\n            1. Lion\n            2. Tiger\n            3. Shark\n            4. Crocodile\n            5. Bear\n            6. Wolf\n            7. Cheetah\n            8. Jaguar\n            9. Leopard\n            10. Panther\n        \"\"\""}
{"cat": "animal", "slot": "specialization", "value": "flying bird", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are flying bird. \n        Output: ", "result": "\n```\ncanary, eagle, falcon, hawk, ostrich, penguin, seagull, stork, swallow, vulture\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category"}
{"cat": "animal", "slot": "specialization", "value": "Jonah crab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are Jonah crab. \n        Output: ", "result": "\n```\nJonah,crab,crabs,crabby,crabby,crabber,crabber,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabby,crabb"}
{"cat": "animal", "slot": "specialization", "value": "brachiopod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are brachiopod. \n        Output: ", "result": "\n        fish, shrimp, crab, lobster, squid, snail, oyster, scallop, clam, mussel. \n        \"\"\"\n        category = 'animal'\n        condition = 'are brachiopod'\n        words = get_words"}
{"cat": "animal", "slot": "specialization", "value": "collembolan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are collembolan. \n        Output: ", "result": "\n        beetle, ant, grasshopper, cricket, spider, fly, mosquito, butterfly, moth, cockroach \n    \"\"\"\n    category = \"animal\"\n    condition = \"are collembolan\"\n    words = get_words"}
{"cat": "animal", "slot": "specialization", "value": "hunting dog", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hunting dog. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "specialization", "value": "nymphalid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are nymphalid. \n        Output: ", "result": "\n          dog, cat, butterfly, moth, skipper, grasshopper, locust, cricket, cicada, ant. \n        \"\"\"\n        category = 'animal'\n        condition = 'are nymphalid'\n        words = get_words(category, condition"}
{"cat": "animal", "slot": "specialization", "value": "long-horned beetle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are long-horned beetle. \n        Output: ", "result": "\n        elephant, giraffe, rhinoceros, buffalo, zebra, antelope, hippopotamus, crocodile, lion, tiger\n    \"\"\"\n    animal_words = [\"elephant\", \"giraffe\", \"rhin"}
{"cat": "animal", "slot": "specialization", "value": "domestic animal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are domestic animal. \n        Output: ", "result": " cat, dog, horse, cow, pig, chicken, sheep, goat, llama, giraffe \n    \"\"\"\n    category = 'animal'\n    condition = 'are domestic animal'\n    words = get_words(category, condition)\n    return ', '.join"}
{"cat": "animal", "slot": "specialization", "value": "lepidopteron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lepidopteron. \n        Output: ", "result": "\n        butterfly, moth, caterpillar, silk, chrysalis, pupa, wing, antennae, proboscis, scales.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []"}
{"cat": "animal", "slot": "specialization", "value": "lepidopteran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lepidopteran. \n        Output: ", "result": "\n        butterfly, moth, caterpillar, silkworm, pupa, chrysalis, larva, wing, antennae, proboscis\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "animal", "slot": "specialization", "value": "prey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are prey. \n        Output: ", "result": "\n          dog, cat, mouse, rabbit, deer, antelope, sheep, cow, chicken, duck\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "specialization", "value": "decapod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are decapod. \n        Output: ", "result": "\n```\ncat, crab, lobster, shrimp, prawn, crayfish, squid, octopus, snail, oyster\n```"}
{"cat": "animal", "slot": "specialization", "value": "ectotherm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are ectotherm. \n        Output: ", "result": "\n        lizard, snake, turtle, crocodile, alligator, \n        chameleon, gecko, iguana, turtle, tortoise. \n        \"\"\"\n        category = 'animal'\n        condition = 'are ectoth"}
{"cat": "animal", "slot": "specialization", "value": "domesticated animal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are domesticated animal. \n        Output: ", "result": " cat, dog, horse, cow, pig, chicken, sheep, goat, turkey, duck\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in text:\n        if word."}
{"cat": "animal", "slot": "specialization", "value": "lepidopterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are lepidopterous insect. \n        Output: ", "result": "\n        butterfly, moth, caterpillar, silkworm, pupa, chrysalis, larva, wing, antennae, proboscis\n    \"\"\"\n    butterfly, moth, caterpillar, silkworm, pupa, chrysalis"}
{"cat": "animal", "slot": "specialization", "value": "decapod crustacean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are decapod crustacean. \n        Output: ", "result": "\n```\ncrab, lobster, shrimp, prawn, lobster, crab, shrimp, lobster, crab, lobster\n```"}
{"cat": "animal", "slot": "purpose", "value": "animal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are used for animal. \n        Output: ", "result": "\n            \n```"}
{"cat": "animal", "slot": "specialization", "value": "herbivore", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are herbivore. \n        Output: ", "result": "\n        elephant, giraffe, hippopotamus, kangaroo, llama, moose, \n        panda, sheep, sloth, zebra\n```\n\n```\nDesired output: \nComma separated list of words: elephant"}
{"cat": "animal", "slot": "specialization", "value": "larva", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are larva. \n        Output: ", "result": "\n```\nant, caterpillar, worm, maggot, grub, larva, pupa, butterfly, moth\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "animal", "slot": "specialization", "value": "mollusk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are mollusk. \n        Output: ", "result": "\n          snail, clam, oyster, scallop, squid, cuttlefish, octopus, nautilus,\n```"}
{"cat": "animal", "slot": "specialization", "value": "hymenopterous insect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hymenopterous insect. \n        Output: ", "result": "\n        bee, ant, wasp, hornet, yellow jacket, bumblebee, honeybee,\n```"}
{"cat": "animal", "slot": "specialization", "value": "hymenopteron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hymenopteron. \n        Output: ", "result": "\n        bee, ant, wasp, honeybee, bumblebee, yellowjacket, hornet,\n```"}
{"cat": "animal", "slot": "specialization", "value": "hymenopter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hymenopter. \n        Output: ", "result": "\n        bee, ant, wasp, honeybee, bumblebee, yellowjacket, hornet,\n```"}
{"cat": "animal", "slot": "specialization", "value": "hymenopteran", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are hymenopteran. \n        Output: ", "result": "\n        bee, ant, wasp, honeybee, bumblebee, yellowjacket, hornet,\n```"}
{"cat": "animal", "slot": "specialization", "value": "chordate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are chordate. \n        Output: ", "result": "\n        dog, cat, bird, fish, frog, snake, lizard, turtle, cow, pig\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n   "}
{"cat": "animal", "slot": "specialization", "value": "pet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are pet. \n        Output: ", "result": "\n        dog, cat, fish, bird, hamster, rabbit, snake, lizard, turtle, \n        guinea pig. \n        \"\"\"\n        category = Category.objects.get(name='animal')\n        pets = Pet.objects.filter("}
{"cat": "animal", "slot": "specialization", "value": "invertebrate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are invertebrate. \n        Output: ", "result": "\n        bee, ant, spider, snail, crab, lobster, shrimp, squid, octopus, jellyfish.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "animal", "slot": "specialization", "value": "arthropod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: animal. \n        Condition: are arthropod. \n        Output: ", "result": "\n```\nant, spider, cricket, grasshopper, beetle, cockroach, mantis, millipede, centipede, tarantula\n```\nExplanation:\n\n1. Provide a list of 10 words that belong to the category and"}
{"cat": "food", "slot": "purpose", "value": "vision", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are used for vision. \n        Output: ", "result": "\n            1. Eye\n            2. Vision\n            3. Sight\n            4. See\n            5. Look\n            6. View\n            7. Gaze\n            8. Inspect\n            9. Observe\n            10. Perceive\n        \"\"\"\n       "}
{"cat": "food", "slot": "size", "value": "small", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be small. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, kiwi, mango, orange, peach\n    \"\"\"\n    words = []\n    for word in word_list:\n        if len(word) <= 5:\n            words.append(word)\n"}
{"cat": "food", "slot": "material", "value": "unleavened", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be made of unleavened. \n        Output: ", "result": "\n        bread, cracker, naan, pita, tortilla, crepe, chapati, roti, lavash, manakish \n    \"\"\"\n    category = \"food\"\n    condition = \"can be made of unleavened\"\n    words = []\n   "}
{"cat": "food", "slot": "material", "value": "rye", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be made of rye. \n        Output: ", "result": "\n          apple, bread, cake, cookie, cracker, donut, loaf, muffin, pastry, pizza \n    \"\"\"\n    category = \"food\"\n    condition = \"can be made of rye\"\n    words = get_words(category, condition"}
{"cat": "food", "slot": "material", "value": "yeast", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be made of yeast. \n        Output: ", "result": "\n        apple, bread, cake, cookie, dough, pizza, roll, sourdough, yeast\n    \"\"\"\n    food_words = [\n        \"apple\", \"bread\", \"cake\", \"cookie\", \"dough\", \"pizza\", \"roll\", \"s"}
{"cat": "food", "slot": "material", "value": "sourdough", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be made of sourdough. \n        Output: ", "result": "\n        bread, dough, flour, yeast, rise, knead, proof, pizza, sourdough, breadstick\n    \"\"\"\n    food_words = [\"bread\", \"dough\", \"flour\", \"yeast\", \"rise\", \"knead\","}
{"cat": "food", "slot": "material", "value": "tasting", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be made of tasting. \n        Output: ", "result": "\n        apple, cake, chocolate, cookie, donut, ice cream, pizza, sandwich, sushi, yogurt\n    \"\"\"\n    category = 'food'\n    condition = 'can be made of tasting'\n    words = get_words"}
{"cat": "food", "slot": "material", "value": "salt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be made of salt. \n        Output: ", "result": "\n          apple, bread, cheese, chicken, coffee, cucumber, egg, garlic, ice cream, milk\n    \"\"\"\n    food_words = [\"apple\", \"bread\", \"cheese\", \"chicken\", \"coffee\", \"cucumber\", \"eg"}
{"cat": "food", "slot": "time", "value": "dinner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be consumed or used during dinner. \n        Output: ", "result": "\n        salad, soup, bread, pasta, steak, chicken, fish, potatoes, vegetables, dessert \n    \"\"\"\n    category = 'food'\n    condition = 'can be consumed or used during dinner'\n    words = []\n    for word in"}
{"cat": "food", "slot": "time", "value": "autumn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be consumed or used during autumn. \n        Output: ", "result": "\n            1. Pumpkin \n            2. Apple \n            3. Cinnamon \n            4. Maple \n            5. Squash \n            6. Corn \n            7. Nutmeg \n            8. Gourd \n            9."}
{"cat": "food", "slot": "time", "value": "lunch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be consumed or used during lunch. \n        Output: ", "result": "\n        sandwich, soup, salad, bread, chips, drink, fruit, dessert, pasta, pizza \n    \"\"\"\n    category = 'food'\n    condition = 'can be consumed or used during lunch'\n    words = []\n    for word in"}
{"cat": "food", "slot": "time", "value": "summer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be consumed or used during summer. \n        Output: ", "result": "\n            1. Ice Cream\n            2. Watermelon\n            3. Popsicle\n            4. Lemonade\n            5. Salad\n            6. Grilled Chicken\n            7. Barbecue\n            8. Fresh Fruit\n            9. Iced"}
{"cat": "food", "slot": "time", "value": "April", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be consumed or used during April. \n        Output: ", "result": "\n            chocolate, peanut butter, jelly, banana, strawberry, blueberry, raspberry, lemonade, ice cream, pizza, hamburger\n        \"\"\"\n        category = 'food'\n        condition = 'can be consumed or"}
{"cat": "food", "slot": "time", "value": "meal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be consumed or used during meal. \n        Output: ", "result": "\n        apple, bread, butter, coffee, milk, sugar, salt, water, knife, fork\n    \"\"\"\n    food_words = [\n        \"apple\", \"bread\", \"butter\", \"coffee\", \"milk\", \"sugar\", \"salt\","}
{"cat": "food", "slot": "material", "value": "water", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be made of water. \n        Output: ", "result": "\n        apple, banana, carrot, celery, grapes, ice, lemon, melon, orange, water\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"carrot\", \"celery\", \"grapes\", \"ice\", \"lemon\","}
{"cat": "food", "slot": "taste", "value": "acid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be acid. \n        Output: ", "result": "\n            apple, banana, citrus, orange, lemon, pineapple, tomato, vinegar, cranberry, grapefruit\n    \"\"\"\n    food_words = [\n        \"apple\", \"banana\", \"citrus\", \"orange\", \"lemon"}
{"cat": "food", "slot": "taste", "value": "cold", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be cold. \n        Output: ", "result": "\n            chocolate, ice cream, frozen yogurt, sorbet, iced coffee, iced tea, slushie, popsicle, frozen pizza, frozen burrito.\n    \"\"\"\n    category = 'food'\n    condition = 'can be cold"}
{"cat": "food", "slot": "taste", "value": "dessert", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be dessert. \n        Output: ", "result": "\n            chocolate, cake, ice cream, cookie, pudding, pie, tart, candy, donut, sundae\n    \"\"\"\n    category = Category.objects.get(name='food')\n    words = Word.objects.filter(category=category,"}
{"cat": "food", "slot": "taste", "value": "sparkling", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be sparkling. \n        Output: ", "result": "\n        chocolate, soda, champagne, sparkling water, iced tea, lemonade, ginger ale, \n        cola, tonic water, seltzer water.\n    \"\"\"\n    food_words = [\"chocolate\", \"soda\", \"champ"}
{"cat": "food", "slot": "taste", "value": "sugary", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be sugary. \n        Output: ", "result": "\n        chocolate, candy, dessert, sweet, sugar, syrup, treat, cookie, ice cream, cake\n    \"\"\"\n    sugary_words = [\n        \"chocolate\", \"candy\", \"dessert\", \"sweet\", \"sugar\","}
{"cat": "food", "slot": "taste", "value": "iced", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be iced. \n        Output: ", "result": "\n        chocolate, ice cream, iced coffee, iced tea, iced water, iced milk, iced frappuccino, iced mocha, iced latte, iced cappuccino.\n    \"\"\"\n    words = []\n    for word"}
{"cat": "food", "slot": "taste", "value": "soft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be soft. \n        Output: ", "result": "\n            chocolate, cake, cookie, ice cream, pudding, muffin, candy, pie, cake, donut\n    \"\"\"\n    category = \"food\"\n    condition = \"can be soft\"\n    words = get_words(category, condition"}
{"cat": "food", "slot": "taste", "value": "fizzy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be fizzy. \n        Output: ", "result": "\n        chocolate, soda, ginger ale, iced tea, lemonade, \n        cola, root beer, sparkling water, tonic water, \n        ginger beer\n    \"\"\"\n    category = 'food'\n    condition = 'can be"}
{"cat": "food", "slot": "taste", "value": "herbal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be herbal. \n        Output: ", "result": "\n            apple, cinnamon, ginger, mint, basil, thyme, rosemary, lavender, chamomile, hibiscus. \n        \"\"\"\n        category = \"food\"\n        condition = \"can be herbal\"\n        words = []\n"}
{"cat": "food", "slot": "material", "value": "milk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be made of milk. \n        Output: ", "result": "\n        chocolate, ice cream, cheese, yogurt, milkshake, pudding, cheesecake, butter, sour cream, whipped cream\n```\n\n```"}
{"cat": "food", "slot": "smell", "value": "fruity", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell fruity. \n        Output: ", "result": "\n            apple, banana, cherry, grape, lemon, orange, peach, plum, raspberry, strawberry\n    \"\"\"\n    fruits = ['apple', 'banana', 'cherry', 'grape', 'lemon', 'orange', 'pe"}
{"cat": "food", "slot": "smell", "value": "floral", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell floral. \n        Output: ", "result": "\n            chocolate, rose, lilac, lavender, jasmine, gardenia, honeysuckle, orange blossom, ylang-ylang. \n        \"\"\"\n        category = 'food'\n        condition = 'can smell floral'\n       "}
{"cat": "food", "slot": "smell", "value": "bitter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell bitter. \n        Output: ", "result": "\n            apple, bitter, chocolate, coffee, flower, garlic, lemon, onion, peppermint, tea\n\"\"\"\n\nprint(find_words(category='food', condition='can smell bitter'))\n```\nOutput:\napple, bitter, choc"}
{"cat": "food", "slot": "smell", "value": "spicy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell spicy. \n        Output: ", "result": "\n        chili, curry, garlic, jalapeno, onion, pepper, spicy, sriracha, thai, wasabi \n    \"\"\"\n    category = \"food\"\n    condition = \"can smell spicy\"\n    words = get_"}
{"cat": "food", "slot": "smell", "value": "cheap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell cheap. \n        Output: ", "result": "\n            apple, bread, cheese, coffee, garlic, onion, pizza, popcorn, sushi, vanilla\n    \"\"\"\n    category = \"food\"\n    condition = \"can smell cheap\"\n    words = get_words(category, condition)\n"}
{"cat": "food", "slot": "smell", "value": "balsamic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell balsamic. \n        Output: ", "result": "1. Balsamic, 2. Balsamic, 3. Balsamic, 4. Balsamic, 5. Balsamic, 6. Balsamic, 7. Balsamic, 8. Balsamic, "}
{"cat": "food", "slot": "smell", "value": "acidic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell acidic. \n        Output: ", "result": "1. Lemon, 2. Orange, 3. Vinegar, 4. Tomato, 5. Lemonade, 6. Pickle, 7. Pineapple, 8. Grapefruit, 9. Pineapple juice, 10."}
{"cat": "food", "slot": "smell", "value": "tasty", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell tasty. \n        Output: ", "result": "\n        apple, cake, chocolate, coffee, cookies, donut, pizza, sandwich, sushi, tiramisu\n    \"\"\"\n    category = \"food\"\n    condition = \"can smell tasty\"\n    words = get_words(category,"}
{"cat": "food", "slot": "smell", "value": "aromatic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell aromatic. \n        Output: ", "result": "\n        chocolate, vanilla, lavender, rose, jasmine, lemon, orange, cinnamon, peppermint, banana\n    \"\"\"\n    category = \"food\"\n    condition = \"can smell aromatic\"\n    words = get_"}
{"cat": "food", "slot": "smell", "value": "organic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell organic. \n        Output: ", "result": "\n          apple, banana, cherry, cinnamon, clove, ginger, lavender, mint, orange, vanilla\n    \"\"\"\n    category = \"food\"\n    condition = \"can smell organic\"\n    words = get_words(category, condition)"}
{"cat": "food", "slot": "smell", "value": "fresh", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell fresh. \n        Output: ", "result": "\n            apple, bread, cheese, coffee, cinnamon, cookie, egg, garlic, onion, pizza\n    \"\"\"\n    category = \"food\"\n    condition = \"can smell fresh\"\n    words = get_words(category, condition)\n    return"}
{"cat": "food", "slot": "smell", "value": "varietal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell varietal. \n        Output: ", "result": "\n        chocolate, vanilla, strawberry, raspberry, blueberry, lemon, orange, lime, grapefruit, pineapple. \n    \"\"\"\n    category = 'food'\n    condition = 'can smell varietal'\n    words ="}
{"cat": "food", "slot": "smell", "value": "elegant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell elegant. \n        Output: ", "result": "\n        chocolate, vanilla, lavender, jasmine, rose, honeysuckle, orange blossom, ylang-ylang, patchouli, sandalwood\n    \"\"\"\n    category = \"food\"\n    condition = \"can smell elegant\"\n"}
{"cat": "food", "slot": "material", "value": "wheat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be made of wheat. \n        Output: ", "result": "\n        bread, cake, cookie, dough, flour, pizza, roll, sandwich, toast, wheat \n    \"\"\"\n    food_words = [\"bread\", \"cake\", \"cookie\", \"dough\", \"flour\", \"pizza\", \"roll\","}
{"cat": "food", "slot": "consistency", "value": "firm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste firm. \n        Output: ", "result": "\n        apple, bread, cheese, chicken, cake, cookie, ice cream, pizza, steak, yogurt\n    \"\"\"\n    category = \"food\"\n    condition = \"can have a consistency or taste firm\"\n    words = []\n    for word"}
{"cat": "food", "slot": "consistency", "value": "liquid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste liquid. \n        Output: ", "result": "\n            chocolate, ice cream, milk, pudding, soda, soup, syrup, tea, water, yogurt\n        \"\"\"\n        category = 'food'\n        condition = 'can have a consistency or taste liquid'\n        words = []\n        for"}
{"cat": "food", "slot": "consistency", "value": "crispy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste crispy. \n        Output: ", "result": "\n            pizza, french fries, chicken nuggets, onion rings, tater tots, fried chicken, tempura, fish and chips, buffalo wings, calamari. \n        \"\"\"\n        category = 'food'\n        condition = 'can"}
{"cat": "food", "slot": "consistency", "value": "tart", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste tart. \n        Output: ", "result": "\n            apple, cherry, lemon, lime, orange, pear, raspberry, strawberry, tangerine, watermelon \n        \"\"\"\n        category = 'food'\n        condition = 'can have a consistency or taste tart'\n        words ="}
{"cat": "food", "slot": "consistency", "value": "rich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste rich. \n        Output: ", "result": "\n            chocolate, caramel, fudge, truffle, ganache, frosting, whipped cream, ice cream, sorbet, sherbet \n        \"\"\"\n        category = 'food'\n        condition = 'can have a consistency or taste rich"}
{"cat": "food", "slot": "consistency", "value": "sour", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste sour. \n        Output: ", "result": "\n            apple, cranberry, grapefruit, lemon, lime, orange, pineapple, raspberry, strawberry, tangerine\n        \"\"\"\n        category = \"food\"\n        condition = \"can have a consistency or taste sour\"\n       "}
{"cat": "food", "slot": "consistency", "value": "spongy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste spongy. \n        Output: ", "result": "\n            chocolate cake, pudding, sponge cake, angel food cake, jelly, custard, trifle, panna cotta, rice pudding, bread pudding. \n        \"\"\"\n        category = 'food'\n        condition ="}
{"cat": "food", "slot": "consistency", "value": "juicy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste juicy. \n        Output: ", "result": "\n            1. Juicy\n            2. Consistency\n            3. Taste\n            4. Juicy\n            5. Consistency\n            6. Taste\n            7. Juicy\n            8. Consistency\n            9. Taste\n            10. Juicy"}
{"cat": "food", "slot": "consistency", "value": "ripe", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste ripe. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, kiwi, mango, orange, peach\n        \"\"\"\n        category = \"food\"\n        condition = \"can have a consistency or taste ripe\"\n        words = []\n        for word in product"}
{"cat": "food", "slot": "consistency", "value": "sparkling", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste sparkling. \n        Output: ", "result": "\n            1. Soda\n            2. Champagne\n            3. Sparkling Wine\n            4. Seltzer\n            5. Cider\n            6. Lemonade\n            7. Ginger Ale\n            8. Tonic Water\n            9. Cola\n            10"}
{"cat": "food", "slot": "consistency", "value": "edible", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste edible. \n        Output: ", "result": "\n            apple, banana, chocolate, cinnamon, cookie, donut, ice cream, jelly, muffin, pizza \n        \"\"\"\n        category = \"food\"\n        condition = \"can have a consistency or taste edible\"\n        words"}
{"cat": "food", "slot": "consistency", "value": "crisp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste crisp. \n        Output: ", "result": "\n            apple, banana, carrot, cucumber, grape, lemon, orange, pear, strawberry, watermelon \n        \"\"\"\n        category = \"food\"\n        condition = \"can have a consistency or taste crisp\"\n        words ="}
{"cat": "food", "slot": "consistency", "value": "crunchy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste crunchy. \n        Output: ", "result": "\n            pizza, cracker, chips, popcorn, cereal, cookie, pretzel, breadstick, taco, crackers\n\"\"\"\n\nword_list = []\nfor word in word_list:\n    if \"crunchy\" in word:\n       "}
{"cat": "food", "slot": "consistency", "value": "juicy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste juicy. \n        Output: ", "result": "\n            1. Juicy\n            2. Consistency\n            3. Taste\n            4. Juicy\n            5. Consistency\n            6. Taste\n            7. Juicy\n            8. Consistency\n            9. Taste\n            10. Juicy"}
{"cat": "food", "slot": "shape", "value": "elongated", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be elongated. \n        Output: ", "result": "\n          apple, banana, cherry, date, elongate, fig, grape, kiwi, melon, orange, pear, plum, strawberry, watermelon\n    \"\"\"\n    food_words = [\n        \"apple\", \"banana\", \"cher"}
{"cat": "food", "slot": "shape", "value": "long", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be long. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, kiwi, mango, orange, pear\n    \"\"\"\n    words = []\n    for word in word_list:\n        if len(word) > 5:\n            words.append(word)\n"}
{"cat": "food", "slot": "shape", "value": "round", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be round. \n        Output: ", "result": "\n            apple, cake, donut, pizza, bread, cookie, ice cream, sandwich, round cake, round pizza\n    \"\"\"\n    words = []\n    for word in words:\n        if \"round\" in word:\n            words.append(word)\n"}
{"cat": "food", "slot": "shape", "value": "circular", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be circular. \n        Output: ", "result": "\n        apple, banana, cherry, doughnut, egg, fig, grape, honey, ice cream, orange\n    \"\"\"\n    words = []\n    for word in word_list:\n        if len(word) == 1:\n            words.append(word"}
{"cat": "food", "slot": "shape", "value": "conical", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be conical. \n        Output: ", "result": "\n          apple, cake, cone, croissant, doughnut, donut, muffin, pastry, pizza, waffle\n    \"\"\"\n    category = \"food\"\n    condition = \"can be conical\"\n    words = get_words(category, condition"}
{"cat": "food", "slot": "shape", "value": "thin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be thin. \n        Output: ", "result": "\n            apple, banana, carrot, celery, cucumber, grape, lemon, lime, orange, strawberry \n        \"\"\"\n        category = \"food\"\n        condition = \"can be thin\"\n        words = get_words(category, condition)"}
{"cat": "food", "slot": "shape", "value": "oval", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be oval. \n        Output: ", "result": "\n          apple, cake, cookie, donut, egg, gingerbread, ice cream, jellybean, muffin, pizza\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"oval\" in word:\n            words.append"}
{"cat": "food", "slot": "shape", "value": "oval", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be oval. \n        Output: ", "result": "\n          apple, cake, cookie, donut, egg, gingerbread, ice cream, jellybean, muffin, pizza\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"oval\" in word:\n            words.append"}
{"cat": "food", "slot": "shape", "value": "pointed", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be pointed. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, honey, jam, juice, kiwi, melon, nectarine, orange, peach, plum, pear, pomegranate, raspberry, strawberry, watermelon"}
{"cat": "food", "slot": "material", "value": "grape", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be made of grape. \n        Output: ", "result": "\n            apple, banana, cherry, grape, grapefruit, lemon, orange, peach, plum, raspberry\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"grape\" in word:\n            words.append"}
{"cat": "food", "slot": "user", "value": "farmer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are used by farmers. \n        Output: ", "result": "\n        apples, bananas, carrots, corn, grapes, lettuce, oranges, peas, potatoes, tomatoes.\n    \"\"\"\n    category = 'food'\n    condition = 'are used by farmers'\n    words = get_words(category"}
{"cat": "food", "slot": "user", "value": "cook", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are used by cooks. \n        Output: ", "result": "\n        chocolate, flour, sugar, butter, eggs, vanilla, salt, baking powder, baking soda, cocoa powder \n    \"\"\"\n    food_words = [\"chocolate\", \"flour\", \"sugar\", \"butter\", \""}
{"cat": "food", "slot": "user", "value": "adult", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are used by adults. \n        Output: ", "result": "\n        chocolate, coffee, ice cream, pizza, soda, steak, wine, whiskey, yogurt, \n        Category: food. \n        Condition: are used by adults. \n        Output: \n        chocolate, coffee, ice"}
{"cat": "food", "slot": "user", "value": "wine grower", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are used by wine growers. \n        Output: ", "result": "\n        apple, barley, chardonnay, grapes, merlot, oak, pinot noir, riesling, sauvignon blanc, syrah\n\"\"\"\n\n# Define the category and condition\ncategory = \"food\"\ncondition = \"are used by wine grow"}
{"cat": "food", "slot": "user", "value": "somellier", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are used by somelliers. \n        Output: ", "result": "\n            Bread, Cheese, Eggs, Fish, Fruit, Meat, Pastry, Salad, Vegetables, Wine \n        \"\"\"\n        category = \"food\"\n        condition = \"are used by somelliers\"\n        words = []\n        for"}
{"cat": "food", "slot": "accessory", "value": "barrel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with barrel. \n        Output: ", "result": "\n        apple, cider, barrel, malt, hops, brew, distill, oak, whiskey, bourbon\n    \"\"\"\n    food_words = [\"apple\", \"cider\", \"barrel\", \"malt\", \"hops\", \"brew\", \""}
{"cat": "food", "slot": "accessory", "value": "cup", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with cup. \n        Output: ", "result": "\n        apple, cake, coffee, cookie, donut, drink, egg, fruit, juice, milk.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"cup\" in word:\n            if \"food\" in word:\n                words"}
{"cat": "food", "slot": "accessory", "value": "oven", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with oven. \n        Output: ", "result": "\n        chocolate, cake, cookie, muffin, bread, pizza, lasagna, quiche, roast, pie \n    \"\"\"\n    food_words = [\"chocolate\", \"cake\", \"cookie\", \"muffin\", \"bread\", \"pizza"}
{"cat": "food", "slot": "accessory", "value": "meat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with meat. \n        Output: ", "result": "\n        chicken, beef, pork, lamb, bacon, sausage, steak, ham, turkey, \n        brisket. \n        \"\"\"\n        category = 'food'\n        condition = 'may have to do with meat'\n        words = []"}
{"cat": "food", "slot": "accessory", "value": "barbecue", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with barbecue. \n        Output: ", "result": "\n        apple, barbecue, bbq, charcoal, grill, hamburger, hotdog, \n        kebab, ribs, steak. \n        \"\"\"\n        category = 'food'\n        condition = 'may have to do with barbecue"}
{"cat": "food", "slot": "accessory", "value": "sausage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with sausage. \n        Output: ", "result": "\n```\nsausage, link, casing, seasoning, smoking, grilling, boiling, frying, barbecue, bratwurst\n```\nExplanation: The word \"sausage\" satisfies the condition of \"may have to do with sausage\" and"}
{"cat": "food", "slot": "accessory", "value": "marmalade", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with marmalade. \n        Output: ", "result": "\n            apple, cake, jam, marmalade, orange, pie, \n            sandwich, scone, toast. \n        \"\"\"\n        category = 'food'\n        condition = 'may have to do with marmalade'\n        words = []\n        for"}
{"cat": "food", "slot": "accessory", "value": "macaroni", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with macaroni. \n        Output: ", "result": "\n        pasta, macaroni, noodles, lasagna, spaghetti, ravioli, fettuccine, penne, macaroni and cheese, macaroni salad \n    \"\"\"\n    category = 'food'\n    condition = 'may have"}
{"cat": "food", "slot": "accessory", "value": "cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with cheese. \n        Output: ", "result": "\n        cheddar, mozzarella, brie, gouda, parmesan, blue cheese, goat cheese, feta, ricotta, camembert.\n    \"\"\"\n    cheese_words = [\"cheddar\", \"mozzarella\", \"brie"}
{"cat": "food", "slot": "accessory", "value": "pizza", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with pizza. \n        Output: ", "result": "\n```\ncheese, pepperoni, margherita, pizza, dough, tomato sauce, mozzarella, toppings, crust\n```\nExplanation: \n        The category is food. \n        The condition may have to do with pizza."}
{"cat": "food", "slot": "accessory", "value": "extractor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with extractor. \n        Output: ", "result": "\n        chocolate, cake, cookie, ice cream, pizza, candy, donut, bread, pasta, sandwich\n    \"\"\"\n    food_words = [\"chocolate\", \"cake\", \"cookie\", \"ice cream\", \"pizza\", \"candy"}
{"cat": "food", "slot": "accessory", "value": "bean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with bean. \n        Output: ", "result": "\n        chickpea, garbanzo, hummus, falafel, bean, lentil, pea, soybean, tofu, edamame. \n        \"\"\"\n        category = 'food'\n        condition = 'may have to do with bean'\n       "}
{"cat": "food", "slot": "taste", "value": "sweet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be sweet. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, honey, ice cream, jam, jelly\n    \"\"\"\n    category = \"food\"\n    condition = \"can be sweet\"\n    words = get_words(category, condition)\n    return \","}
{"cat": "food", "slot": "taste", "value": "hot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be hot. \n        Output: ", "result": "\n            chili, curry, hot sauce, jalapeno, pepper, salsa, spicy, tabasco, wasabi, yuzu\n        \"\"\"\n        category = \"food\"\n        condition = \"can be hot\"\n        words = []\n       "}
{"cat": "food", "slot": "smell", "value": "hot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell hot. \n        Output: ", "result": "\n            chili, curry, garlic, hot sauce, jalapeno, onion, pepper, spice, steak, vanilla\n        \"\"\"\n        category = \"food\"\n        condition = \"can smell hot\"\n        words = []\n        for word"}
{"cat": "food", "slot": "smell", "value": "varietal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell varietal. \n        Output: ", "result": "\n        chocolate, vanilla, strawberry, raspberry, blueberry, lemon, orange, lime, grapefruit, pineapple. \n    \"\"\"\n    category = 'food'\n    condition = 'can smell varietal'\n    words ="}
{"cat": "food", "slot": "accessory", "value": "bottle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with bottle. \n        Output: ", "result": "\n        chardonnay, merlot, riesling, pinot noir, champagne, sauvignon blanc, zinfandel, cabernet sauvignon, pinot grigio, moscato\n    \"\"\"\n    category = 'food'\n    words = []\n"}
{"cat": "food", "slot": "accessory", "value": "butter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with butter. \n        Output: ", "result": "\n            \n        \"\"\"\n        butter_words = [\"butter\", \"butterfly\", \"buttercup\", \"butterball\", \"butterfly\", \"buttercup\", \"butterball\", \"butter\", \"butterfly\", \"buttercup\", \"butterball"}
{"cat": "food", "slot": "part", "value": "stalk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  stalk. \n        Output: ", "result": " carrot, radish, beet, turnip, potato, parsnip, rutabaga, celery, asparagus, artichoke \n    \"\"\"\n    food_words = [\"carrot\", \"radish\", \"beet\", \"turnip\", \"potato"}
{"cat": "food", "slot": "part", "value": "stem", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  stem. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, kiwi, mango, orange, pear\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"stem\" in word:\n            words.append(word)\n   "}
{"cat": "food", "slot": "part", "value": "pip", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  pip. \n        Output: ", "result": "\n        apple, banana, chocolate, coffee, donut, egg, ice cream, orange, pizza, sandwich\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"pip\" in word:\n            words.append(word)\n"}
{"cat": "food", "slot": "part", "value": "core", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  core. \n        Output: ", "result": "\n        apple, cake, chocolate, core, donut, egg, fruit, ice cream, pizza, sandwich\n    \"\"\"\n    words = []\n    for word in words:\n        if \"core\" in word:\n            words.append(word)\n    return"}
{"cat": "food", "slot": "part", "value": "flesh", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  flesh. \n        Output: ", "result": " apple, banana, cherry, date, fig, grape, melon, orange, peach, plum \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"flesh\" in word:\n            words.append(word)\n    return"}
{"cat": "food", "slot": "part", "value": "pulp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  pulp. \n        Output: ", "result": " apple, banana, orange, pear, mango, guava, papaya, kiwi, pineapple, pomegranate \n    \"\"\"\n    fruits = ['apple', 'banana', 'orange', 'pear', 'mango', 'guava', 'p"}
{"cat": "food", "slot": "part", "value": "leaf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  leaf. \n        Output: ", "result": " apple, banana, cherry, date, fig, grape, lemon, orange, peach, plum \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"leaf\" in word:\n            words.append(word)\n    return words"}
{"cat": "food", "slot": "part", "value": "husk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  husk. \n        Output: ", "result": " rice, corn, wheat, oats, barley, rye, millet, sorghum, maize, rice husk. \n    \"\"\"\n    food_words = [\"rice\", \"corn\", \"wheat\", \"oats\", \"barley\", \"rye\","}
{"cat": "food", "slot": "part", "value": "skin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  skin. \n        Output: ", "result": " apple, banana, cherry, grape, lemon, orange, peach, plum, strawberry, watermelon \n    \"\"\"\n    fruits = ['apple', 'banana', 'cherry', 'grape', 'lemon', 'orange', 'pe"}
{"cat": "food", "slot": "part", "value": "glucose", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  glucose. \n        Output: ", "result": " banana, bread, cake, cookie, donut, fruit, jelly, juice, pasta, rice. \n    \"\"\"\n    category = \"food\"\n    condition = \"can have glucose\"\n    words = get_words(category, condition)\n    return"}
{"cat": "food", "slot": "part", "value": "fructose", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  fructose. \n        Output: ", "result": " apple, banana, cherry, date, fig, grape, honey, pear, plum, raspberry. \n    \"\"\"\n    fruits = ['apple', 'banana', 'cherry', 'date', 'fig', 'grape', 'honey', 'pe"}
{"cat": "food", "slot": "part", "value": "orange peel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  orange peel. \n        Output: ", "result": " apple, banana, carrot, orange, orange peel, pear, peach, plum, raspberry, strawberry \n    \"\"\"\n    fruits = [\"apple\", \"banana\", \"carrot\", \"orange\", \"pear\", \"peach\", \"pl"}
{"cat": "food", "slot": "part", "value": "dough", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  dough. \n        Output: ", "result": " bread, cake, cookie, dough, pastry, pizza, roll, cookie, cake, bread\n    \"\"\"\n    category = Category.objects.get(name='food')\n    condition = Condition.objects.get(name='can have dough')\n    words ="}
{"cat": "food", "slot": "part", "value": "chou", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  chou. \n        Output: ", "result": "\n            chocolate, cake, cheese, chou, chicken, coffee, cookie, croissant, cream, cake.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"chou\" in word:\n            words.append("}
{"cat": "food", "slot": "part", "value": "sweet corn plant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  sweet corn plant. \n        Output: ", "result": "\n        sweet, corn, plant, sugar, syrup, cob, kernels, stalk, husk, silk\n    \"\"\"\n    category = \"food\"\n    condition = \"can have sweet corn plant\"\n    words = get_words(category, condition)\n   "}
{"cat": "food", "slot": "part", "value": "Zea mays rugosa", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  Zea mays rugosa. \n        Output: ", "result": " corn, maize, Zea mays rugosa. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"Zea mays rugosa\" in word:\n            words.append(word)\n    return \", \".join(words)\n\ndef get_"}
{"cat": "food", "slot": "part", "value": "isothiocyanate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  isothiocyanate. \n        Output: ", "result": "\n        asparagus, broccoli, Brussels sprouts, cauliflower, eggplant, garlic, onion, peppers, soy sauce, wasabi. \n    \"\"\"\n    food_words = [\"asparagus\", \"broccoli\", \""}
{"cat": "food", "slot": "part", "value": "staff of life", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  staff of life. \n        Output: ", "result": " bread, cake, cheese, chicken, coffee, egg, fish, fruit, milk, pizza \n    \"\"\"\n    category = \"food\"\n    condition = \"can have staff of life\"\n    words = get_words(category, condition)\n    print(\", \".join"}
{"cat": "food", "slot": "part", "value": "orange rind", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  orange rind. \n        Output: ", "result": " orange, rind, juice, zest, peel, pulp, segments, fruit, citrus."}
{"cat": "food", "slot": "part", "value": "tannin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  tannin. \n        Output: ", "result": " wine, tea, grape, berries, oak, chocolate, coffee, grapes, tea leaves, tannin. \n    \"\"\"\n    category = \"food\"\n    condition = \"can have tannin\"\n    words = get_words(category, condition"}
{"cat": "food", "slot": "part", "value": "cheese rind", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  cheese rind. \n        Output: ", "result": " pizza, cheese, rind, bread, tomato, sauce, mozzarella, dough, pepperoni, salami \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"cheese rind\" in word:\n           "}
{"cat": "food", "slot": "part", "value": "cucumber", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  cucumber. \n        Output: ", "result": " cucumber, tomato, lettuce, onion, carrot, potato, eggplant, bell pepper, broccoli, cauliflower. \n        \"\"\"\n        category = Category.objects.get(name='food')\n        words = Word.objects.filter("}
{"cat": "food", "slot": "part", "value": "cabbage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  cabbage. \n        Output: ", "result": " apple, banana, carrot, cucumber, eggplant, garlic, onion, potato, tomato, zucchini. \n        \"\"\"\n        category = 'food'\n        condition = 'can have cabbage'\n        words = get_words(category,"}
{"cat": "food", "slot": "part", "value": "sugar corn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  sugar corn. \n        Output: ", "result": " sugar, corn \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"sugar\" in word and \"corn\" in word:\n            words.append(word)\n    return words\n\ndef get_words_with_category(word_"}
{"cat": "food", "slot": "part", "value": "shell", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  shell. \n        Output: ", "result": "\n        apple, banana, cherry, coconut, date, fig, grape, olive, pecan, walnut. \n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"cherry\", \"coconut\", \"date\", \"fig\", \"gra"}
{"cat": "food", "slot": "part", "value": "breadstuff", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  breadstuff. \n        Output: ", "result": "\n            apple, bread, butter, cake, cheese, egg, fish, ham, milk, pizza \n        \"\"\"\n        category = 'food'\n        condition = 'can have breadstuff'\n        words = get_words(category, condition)\n        return ',"}
{"cat": "food", "slot": "part", "value": "cuke", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  cuke. \n        Output: ", "result": "\n            apple, banana, cherry, cupcake, donut, \n            eggplant, fig, grape, honeydew, kiwi, \n            lemon, mango, nectarine, orange, pear, \n            plum, strawberry"}
{"cat": "food", "slot": "part", "value": "spinach", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  spinach. \n        Output: ", "result": " spinach, broccoli, kale, lettuce, mustard, onion, pea, radish, spinach, turnip \n    \"\"\"\n    category = \"food\"\n    condition = \"can have spinach\"\n    words = get_words(category, condition)"}
{"cat": "food", "slot": "part", "value": "jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  jacket. \n        Output: ", "result": " apple, banana, cake, chicken, coffee, donut, egg, ice cream, jacket, pizza \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"jacket\" in word:\n            words.append(word)\n"}
{"cat": "food", "slot": "part", "value": "curd", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  curd. \n        Output: ", "result": " paneer, curd, yogurt, cheese, butter, ghee, cream, lassi, raita, doodh.\n    \"\"\"\n    category = Category.objects.get(name='food')\n    words = Word.objects.filter(category"}
{"cat": "food", "slot": "part", "value": "onion", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  onion. \n        Output: ", "result": "\n            apple, bread, cheese, chicken, coffee, cucumber, egg, fish, garlic, onion. \n        \"\"\"\n        category = \"food\"\n        condition = \"can have onion\"\n        words = get_words(category, condition)\n       "}
{"cat": "food", "slot": "part", "value": "tomato", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  tomato. \n        Output: ", "result": "\n            apple, banana, carrot, cucumber, eggplant, garlic, onion, pepper, potato, tomato. \n        \"\"\"\n        category = Category.objects.get(name='food')\n        words = Word.objects.filter(category=category"}
{"cat": "food", "slot": "part", "value": "Zea saccharata", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  Zea saccharata. \n        Output: ", "result": "\n```\nbread, cake, cookie, donut, muffin, pasta, pizza, rice, sugar, Zea saccharata\n```\n\nExplanation:\n```\n1. bread, cake, cookie, donut, muffin, pasta, p"}
{"cat": "food", "slot": "product", "value": "sauce", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from sauce. \n        Output: ", "result": "\n        pizza, marinara, pasta, tomato, spaghetti, Bolognese, lasagna, ravioli, meatball, minestrone \n    \"\"\"\n    category = 'food'\n    condition = 'make or are made from sauce'\n    words"}
{"cat": "food", "slot": "product", "value": "cake", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from cake. \n        Output: ", "result": "\n        chocolate, cake, frosting, icing, cupcake, muffin, pastry, cookie, cake mix, frosting mix \n    \"\"\"\n    category = \"food\"\n    condition = \"make or are made from cake\"\n   "}
{"cat": "food", "slot": "product", "value": "juice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from juice. \n        Output: ", "result": "1. Orange, 2. Grape, 3. Apple, 4. Pear, 5. Tomato, 6. Carrot, 7. Cucumber, 8. Watermelon, 9. Pineapple, 10. Grapefruit.\n"}
{"cat": "food", "slot": "product", "value": "syrup", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from syrup. \n        Output: ", "result": "\n        apple, cinnamon, honey, maple syrup, pancake, pancakes, syrup, waffle, waffles \n    \"\"\"\n    category = 'food'\n    condition = 'make or are made from syrup'\n    words ="}
{"cat": "food", "slot": "product", "value": "compote", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from compote. \n        Output: ", "result": "\n        apple, apricot, blackberry, cherry, currant, elderberry, grape, plum, raspberry, strawberry.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"compote\" in word:\n            words"}
{"cat": "food", "slot": "product", "value": "puree", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from puree. \n        Output: ", "result": "\n            apple, banana, carrot, butternut squash, pumpkin, sweet potato, pea, butter, cream, puree\n\"\"\"\n\n# Define the function\ndef get_food_words(category, condition):\n    # Create an empty list"}
{"cat": "food", "slot": "product", "value": "biofuel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from biofuel. \n        Output: ", "result": "\n        apple, beef, chicken, coffee, corn, ethanol, gasoline, soybean, sugar, wheat\n    \"\"\"\n    food_words = [\"apple\", \"beef\", \"chicken\", \"coffee\", \"corn\", \"ethanol\", \""}
{"cat": "food", "slot": "product", "value": "biodiesel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from biodiesel. \n        Output: ", "result": "\n```\nmargarine, shortening, cooking oil, mayonnaise, salad dressing, ice cream, yogurt, chips, french fries, potato chips\n```\nExplanation:\n\n1. Margarine, shortening, and cook"}
{"cat": "food", "slot": "product", "value": "bioethanol", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from bioethanol. \n        Output: ", "result": "\n            1. Bioethanol\n            2. Yeast\n            3. Corn\n            4. Alcohol\n            5. Fermentation\n            6. Distillation\n            7. Fuel\n            8. Green energy\n            9. Biofuel\n            10."}
{"cat": "food", "slot": "product", "value": "whiskey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from whiskey. \n        Output: ", "result": "\n        whiskey, whisky, scotch, bourbon, rye, whiskey barrel, whiskey glass, whiskey cake, whiskey chocolate, whiskey ice cream. \n        \"\"\"\n        category = 'food'\n        condition = 'make or"}
{"cat": "food", "slot": "product", "value": "cornflake", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from cornflake. \n        Output: ", "result": "\n        cornflake, cornflakes, cornflake, cornflakes, cornflake, cornflakes, \n        cornflake, cornflakes, cornflake, cornflakes, cornflake, cornflakes"}
{"cat": "food", "slot": "product", "value": "cob", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from cob. \n        Output: ", "result": "\n            apple, bread, cake, corn, grits, muffin, oatmeal, popcorn, rice, tortilla\n\"\"\"\n\n# Define the function\ndef get_words(category, condition):\n    # Create an empty list to store the words\n   "}
{"cat": "food", "slot": "product", "value": "wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from wine. \n        Output: ", "result": "\n        chocolate, merlot, sangria, cabernet, pinot noir, chianti, zinfandel, port, sherry, sauternes \n    \"\"\"\n    category = \"food\"\n    condition = \"make or are made from wine\"\n"}
{"cat": "food", "slot": "product", "value": "tortilla", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from tortilla. \n        Output: ", "result": "\n            apple, banana, cake, chips, enchilada, fajita, guacamole, quesadilla, taco \n    \"\"\"\n    food_words = [\n        \"apple\", \"banana\", \"cake\", \"chips\", \"en"}
{"cat": "food", "slot": "product", "value": "pie", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from pie. \n        Output: ", "result": "\n        apple pie, blueberry pie, cherry pie, chocolate pie, pecan pie, pumpkin pie, rhubarb pie, strawberry pie, tapioca pie, mincemeat pie \n    \"\"\"\n    category = 'food'\n    condition ="}
{"cat": "food", "slot": "product", "value": "pancake", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from pancake. \n        Output: ", "result": "\n          apple, banana, cake, cookie, doughnut, egg, pancake, pizza, \n          sandwich, syrup\n\"\"\"\n\n# Define the function\ndef get_words(category, condition):\n    # Create an empty list to store the words\n"}
{"cat": "food", "slot": "product", "value": "crumb", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from crumb. \n        Output: ", "result": "\n            apple, bread, cake, cookie, dough, muffin, pastry, pie, roll, scone \n        \"\"\"\n        category = 'food'\n        condition = 'make or are made from crumb'\n        words = get_words(category, condition"}
{"cat": "food", "slot": "product", "value": "chowder", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from chowder. \n        Output: ", "result": "\n            clam, chowder, potato, cream, bacon, onion, salt, pepper, garlic, broth \n\"\"\"\n\nword_list = [\"clam\", \"chowder\", \"potato\", \"cream\", \"bacon\", \"onion"}
{"cat": "food", "slot": "product", "value": "gluten", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from gluten. \n        Output: ", "result": "\n        apple, bread, cake, cookie, donut, pasta, pizza, roll, sandwich\n    \"\"\"\n    category = \"food\"\n    condition = \"make or are made from gluten\"\n    words = get_words(category, condition)\n    print(\","}
{"cat": "food", "slot": "colorPattern", "value": "yellow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be yellow. \n        Output: ", "result": "\n            apple, banana, corn, lemon, mango, orange, papaya, pineapple, yellow, zucchini \n\"\"\"\n\nword_list = [\"apple\", \"banana\", \"corn\", \"lemon\", \"mango\", \"orange\", \""}
{"cat": "food", "slot": "colorPattern", "value": "yellow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be yellow. \n        Output: ", "result": "\n            apple, banana, corn, lemon, mango, orange, papaya, pineapple, yellow, zucchini \n\"\"\"\n\nword_list = [\"apple\", \"banana\", \"corn\", \"lemon\", \"mango\", \"orange\", \""}
{"cat": "food", "slot": "colorPattern", "value": "red", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be red. \n        Output: ", "result": "\n            apple, banana, cherry, cranberry, dragon fruit, eggplant, fig, grape, kiwi, mango\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"red\" in word:\n            words.append(word"}
{"cat": "food", "slot": "colorPattern", "value": "yellowish", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be yellowish. \n        Output: ", "result": "\n            banana, butter, cheese, egg, lemon, mustard, papaya, pineapple, saffron, yolk \n\"\"\"\n\nword_list = [\"apple\", \"banana\", \"butter\", \"cheese\", \"egg\", \"lemon"}
{"cat": "food", "slot": "colorPattern", "value": "green", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be green. \n        Output: ", "result": "\n            apple, broccoli, celery, cucumber, eggplant, green beans, kale, lettuce, spinach, zucchini. \n        \"\"\"\n        category = \"food\"\n        condition = \"can be green\"\n        words = []\n       "}
{"cat": "food", "slot": "colorPattern", "value": "orange", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be orange. \n        Output: ", "result": "\n            apple, banana, cherry, orange, pear, plum, strawberry, tangerine, watermelon, grapefruit\n        \"\"\"\n        fruits = ['apple', 'banana', 'cherry', 'orange', 'pear', 'pl"}
{"cat": "food", "slot": "colorPattern", "value": "orange", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be orange. \n        Output: ", "result": "\n            apple, banana, cherry, orange, pear, plum, strawberry, tangerine, watermelon, grapefruit\n        \"\"\"\n        fruits = ['apple', 'banana', 'cherry', 'orange', 'pear', 'pl"}
{"cat": "food", "slot": "colorPattern", "value": "yellowish", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be yellowish. \n        Output: ", "result": "\n            banana, butter, cheese, egg, lemon, mustard, papaya, pineapple, saffron, yolk \n\"\"\"\n\nword_list = [\"apple\", \"banana\", \"butter\", \"cheese\", \"egg\", \"lemon"}
{"cat": "food", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be brown. \n        Output: ", "result": "\n            apple, banana, chocolate, cinnamon, coffee, eggplant, fig, grape, olive, pear\n    \"\"\"\n    brown_words = [\"apple\", \"banana\", \"chocolate\", \"cinnamon\", \"coffee\", \""}
{"cat": "food", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be brown. \n        Output: ", "result": "\n            apple, banana, chocolate, cinnamon, coffee, eggplant, fig, grape, olive, pear\n    \"\"\"\n    brown_words = [\"apple\", \"banana\", \"chocolate\", \"cinnamon\", \"coffee\", \""}
{"cat": "food", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be white. \n        Output: ", "result": "\n            apple, banana, cheese, chicken, cucumber, egg, grapes, ice cream, milk, yogurt\n    \"\"\"\n    category = \"food\"\n    condition = \"can be white\"\n    words = get_words(category, condition)"}
{"cat": "food", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be white. \n        Output: ", "result": "\n            apple, banana, cheese, chicken, cucumber, egg, grapes, ice cream, milk, yogurt\n    \"\"\"\n    category = \"food\"\n    condition = \"can be white\"\n    words = get_words(category, condition)"}
{"cat": "food", "slot": "colorPattern", "value": "green", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be green. \n        Output: ", "result": "\n            apple, broccoli, celery, cucumber, eggplant, green beans, kale, lettuce, spinach, zucchini. \n        \"\"\"\n        category = \"food\"\n        condition = \"can be green\"\n        words = []\n       "}
{"cat": "food", "slot": "colorPattern", "value": "red", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be red. \n        Output: ", "result": "\n            apple, banana, cherry, cranberry, dragon fruit, eggplant, fig, grape, kiwi, mango\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"red\" in word:\n            words.append(word"}
{"cat": "food", "slot": "colorPattern", "value": "rose", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be rose. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, honey, jam, orange, raspberry\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"rose\" in word:\n            words.append(word)\n    return"}
{"cat": "food", "slot": "colorPattern", "value": "pink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be pink. \n        Output: ", "result": "\n            apple, banana, cherry, grape, lemon, orange, pear, plum, raspberry, strawberry\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"cherry\", \"grape\", \"lemon\", \"orange\", \""}
{"cat": "food", "slot": "colorPattern", "value": "pink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be pink. \n        Output: ", "result": "\n            apple, banana, cherry, grape, lemon, orange, pear, plum, raspberry, strawberry\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"cherry\", \"grape\", \"lemon\", \"orange\", \""}
{"cat": "food", "slot": "colorPattern", "value": "glossy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be glossy. \n        Output: ", "result": "\n            chocolate, glaze, glossy, icing, luster, polish, shine, sheen, varnish, wax\n        Explanation: \n            chocolate, glaze, icing, luster, polish, shine, sheen"}
{"cat": "food", "slot": "colorPattern", "value": "shiny", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be shiny. \n        Output: ", "result": "\n          apple, banana, cherry, diamond, emerald, gold, jewel, pearl, ruby, sapphire\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"shiny\" in word:\n            words.append("}
{"cat": "food", "slot": "place", "value": "supermarket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in supermarkets. \n        Output: ", "result": "\n        apple, banana, bread, cheese, cereal, milk, orange, pasta, rice, sugar\n    \"\"\"\n    food_words = [\n        \"apple\", \"banana\", \"bread\", \"cheese\", \"cereal\", \"milk\", \"or"}
{"cat": "food", "slot": "place", "value": "underground", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in undergrounds. \n        Output: ", "result": "\n            1. Cave\n            2. Mine\n            3. Subway\n            4. Basement\n            5. Bunker\n            6. Tunnel\n            7. Sewer\n            8. Underground\n            9. Cellar\n            10. Catacomb\n        \"\"\""}
{"cat": "food", "slot": "place", "value": "Britain", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in Britains. \n        Output: ", "result": "\n        chocolate, cake, biscuit, cookie, bread, jam, jelly, pie, \n        candy, ice cream.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"Britain\" in word:\n           "}
{"cat": "food", "slot": "place", "value": "USA", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in USAs. \n        Output: ", "result": "\n        apple, bread, cheese, chicken, coffee, donut, egg, hamburger, ice cream, pizza \n    \"\"\"\n    category = \"food\"\n    words = [\n        \"apple\",\n        \"bread\",\n        \"cheese\",\n"}
{"cat": "food", "slot": "place", "value": "field", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in fields. \n        Output: ", "result": "\n        beef, chicken, corn, egg, field, grain, hay, rice, soybean, wheat\n    \"\"\"\n    category = \"food\"\n    condition = \"can be found or used in fields\"\n    words = get_words(category, condition)\n"}
{"cat": "food", "slot": "place", "value": "France", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in Frances. \n        Output: ", "result": "\n        chocolate, croissant, cr\u00e8me br\u00fbl\u00e9e, \u00e9clair, g\u00e2teau, macaroon, madeleine, muffin, pain au chocolat, tarte.\n    \"\"\"\n    category = 'food'\n    condition = 'can be found"}
{"cat": "food", "slot": "place", "value": "restaurant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in restaurants. \n        Output: ", "result": "\n        chips, salsa, guacamole, enchilada, burrito, taco, quesadilla, margarita, fajita, chimichanga.\n    \"\"\"\n    category = 'food'\n    condition = 'can be found or used in"}
{"cat": "food", "slot": "place", "value": "garden", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in gardens. \n        Output: ", "result": "\n        beet, carrot, cucumber, eggplant, lettuce, onion, pea, radish, tomato, zucchini.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n"}
{"cat": "food", "slot": "place", "value": "grocery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in groceries. \n        Output: ", "result": "\n        apple, bread, butter, cheese, milk, eggs, sugar, flour, cereal, juice \n    \"\"\"\n    food_words = [\n        \"apple\", \"bread\", \"butter\", \"cheese\", \"milk\", \"eggs\", \""}
{"cat": "food", "slot": "place", "value": "plantation", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in plantations. \n        Output: ", "result": "\n            1. Orange\n            2. Lemon\n            3. Grape\n            4. Apple\n            5. Banana\n            6. Pineapple\n            7. Mango\n            8. Papaya\n            9. Avocado\n            10. Cucumber\n       "}
{"cat": "food", "slot": "place", "value": "bar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in bars. \n        Output: ", "result": "\n        chocolate, martini, cocktail, liquor, bar, mixer, bartender, drink, drinks, alcohol.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "food", "slot": "place", "value": "vineyard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in vineyards. \n        Output: ", "result": "\n        wine, grape, vine, vineyard, harvest, crush, ferment, barrel, oak, tannins\n    \"\"\"\n    category = \"food\"\n    condition = \"can be found or used in vineyards\"\n    words = []"}
{"cat": "food", "slot": "place", "value": "tree", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in trees. \n        Output: ", "result": "\n        apples, bananas, cherries, dates, figs, grapes, lemons, oranges, pears, plums\n    \"\"\"\n    tree_words = [\n        \"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \"grape\","}
{"cat": "food", "slot": "place", "value": "store", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in stores. \n        Output: ", "result": "\n        chocolate, cookie, cake, ice cream, bread, pasta, pizza, candy, soda, juice.\n    \"\"\"\n    category = Category.objects.get(name='food')\n    words = Word.objects.filter(category=category,"}
{"cat": "food", "slot": "place", "value": "shop", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in shops. \n        Output: ", "result": "\n        chocolate, cookie, cake, ice cream, bread, pasta, pizza, candy, soda, juice\n```\n\n```"}
{"cat": "food", "slot": "place", "value": "bakery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in bakeries. \n        Output: ", "result": "\n            bread, cake, flour, sugar, butter, eggs, milk, yeast, vanilla, chocolate \n        \"\"\"\n        category = \"food\"\n        condition = \"can be found or used in bakeries\"\n        words = []\n        for word"}
{"cat": "food", "slot": "part", "value": "seed", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  seed. \n        Output: ", "result": "\n          apple, banana, cherry, date, fig, grape, melon, orange, pear, seedless\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"seed\" in word:\n            words.append(word)\n    return"}
{"cat": "food", "slot": "user", "value": "greengrocer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are used by greengrocers. \n        Output: ", "result": "\n            apple, banana, carrot, celery, grapes, lettuce, onion, peach, pear, plum\n\"\"\"\n\nword_list = ['apple', 'banana', 'carrot', 'celery', 'grapes', 'lettuce',"}
{"cat": "food", "slot": "user", "value": "fruiterer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are used by fruiterers. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, kiwi, melon, orange, pear\n    \"\"\"\n    fruits = ['apple', 'banana', 'cherry', 'date', 'fig', 'grape', 'kiwi', 'melon',"}
{"cat": "food", "slot": "part", "value": "root", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  root. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, orange, pear, plum, raspberry\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"root\" in word:\n            words.append(word)\n   "}
{"cat": "food", "slot": "product", "value": "cider", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from cider. \n        Output: ", "result": "\n            apple, cider, hard, sweet, fermented, alcoholic, drink, beverage, crisp, refreshing\n        \"\"\"\n        food_words = [\"apple\", \"cider\", \"hard\", \"sweet\", \"fermented\", \"alcoholic\","}
{"cat": "food", "slot": "material", "value": "flour", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be made of flour. \n        Output: ", "result": "\n        bread, cake, cookie, dough, flour, pancake, pastry, roll, scone, yeast \n    \"\"\"\n    food_words = [\"bread\", \"cake\", \"cookie\", \"dough\", \"flour\", \"pancake\","}
{"cat": "food", "slot": "material", "value": "fruit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be made of fruit. \n        Output: ", "result": "1. Apple, 2. Banana, 3. Orange, 4. Pear, 5. Grape, 6. Mango, 7. Papaya, 8. Pineapple, 9. Strawberry, 10. Watermelon\n    \"\"\"\n"}
{"cat": "food", "slot": "place", "value": "orchard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in orchards. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, orange, peach, plum, apricot\n        \"\"\"\n        category = 'food'\n        condition = 'can be found or used in orchards'\n        words = get_words(category, condition"}
{"cat": "food", "slot": "product", "value": "popcorn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from popcorn. \n        Output: ", "result": "\n        popcorn, popcorn kernel, popcorn fluff, popcorn seasoning, \n        popcorn butter, popcorn salt, popcorn sugar, popcorn oil, \n        popcorn ball\n    \"\"\"\n    popcorn_words"}
{"cat": "food", "slot": "accessory", "value": "rice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with rice. \n        Output: ", "result": "\n        chopsticks, rice, sushi, noodle, curry, stir-fry, tempura, udon, ramen, sushi roll.\n    \"\"\"\n    category = 'food'\n    condition = 'may have to do with rice'\n   "}
{"cat": "food", "slot": "accessory", "value": "bottle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with bottle. \n        Output: ", "result": "\n        chardonnay, merlot, riesling, pinot noir, champagne, sauvignon blanc, zinfandel, cabernet sauvignon, pinot grigio, moscato\n    \"\"\"\n    category = 'food'\n    words = []\n"}
{"cat": "food", "slot": "accessory", "value": "glass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with glass. \n        Output: ", "result": "\n        apple, cake, glass, ice, juice, milk, pizza, soda, water, wine\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"glass\" in word:\n            words.append(word)\n    return words\n"}
{"cat": "food", "slot": "accessory", "value": "cellar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with cellar. \n        Output: ", "result": "\n        apple, cider, barrel, cellar, ferment, malt, hops, yeast, brew, distill\n\"\"\"\n\nword_list = []\ncategory = \"food\"\ncondition = \"may have to do with cellar\"\n\nfor word in"}
{"cat": "food", "slot": "accessory", "value": "cooler", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with cooler. \n        Output: ", "result": "\n        chocolate, ice cream, popsicle, slushie, frozen yogurt, iced coffee, iced tea, lemonade, smoothie, milkshake.\n    \"\"\"\n    category = 'food'\n    condition = 'may have to do with"}
{"cat": "food", "slot": "accessory", "value": "burger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with burger. \n        Output: ", "result": "\n            bacon, cheese, ketchup, lettuce, meat, pickles, sauce, tomato, onion, burger\n        \"\"\"\n        category = 'food'\n        condition = 'may have to do with burger'\n        words = []\n        for word"}
{"cat": "food", "slot": "colorPattern", "value": "rose", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be rose. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, honey, jam, orange, raspberry\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"rose\" in word:\n            words.append(word)\n    return"}
{"cat": "food", "slot": "product", "value": "pastry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from pastry. \n        Output: ", "result": "\n            apple pie, baklava, croissant, empanada, \u00e9clair, gingerbread, muffin, pain au chocolat, scone, strudel \n        \"\"\"\n        category = 'food'\n        condition = 'make or are made"}
{"cat": "food", "slot": "product", "value": "sandwich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from sandwich. \n        Output: ", "result": "\n        apple, bread, cake, cookie, donut, egg, hamburger, ice cream, jelly, sandwich \n    \"\"\"\n    category = \"food\"\n    condition = \"make or are made from sandwich\"\n    words = []\n    for word in"}
{"cat": "food", "slot": "product", "value": "salad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from salad. \n        Output: ", "result": "\n```\nlettuce, tomato, cucumber, onion, carrot, bell pepper, avocado, broccoli, cauliflower, spinach\n```\nExplanation: The words that satisfy the condition are lettuce, tomato, cucumber, onion"}
{"cat": "food", "slot": "product", "value": "flour", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from flour. \n        Output: ", "result": "\n        bread, cake, cookie, dough, flour, muffin, pastry, pizza, roll, tortilla \n    \"\"\"\n    food_words = [\n        \"bread\", \"cake\", \"cookie\", \"dough\", \"flour\", \"muff"}
{"cat": "food", "slot": "product", "value": "soup", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from soup. \n        Output: ", "result": "\n```\nsoup, broth, stock, consomm\u00e9, bouillon, brodo, minestrone, minestrone, minestrone, minestrone, minestrone, minestrone, minestrone, minestrone, minestrone, minestrone, minestrone"}
{"cat": "food", "slot": "product", "value": "vinegar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from vinegar. \n        Output: ", "result": "\n        apple, cider, pickle, salad dressing, sauce, sourdough, \n        marinade, relish, vinaigrette\n    \"\"\"\n    vinegar_words = []\n    for word in words:\n        if \"vinegar\""}
{"cat": "food", "slot": "consistency", "value": "sweet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste sweet. \n        Output: ", "result": "\n            chocolate, cake, frosting, ice cream, candy, cookie, pie, pudding, \n            toffee, caramel\n        \"\"\"\n        category = 'food'\n        condition = 'can have a consistency or taste sweet'\n"}
{"cat": "food", "slot": "accessory", "value": "soup", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with soup. \n        Output: ", "result": "\n            carrot, celery, onion, potato, tomato, broth, noodle, spoon, bowl, ladle\n        \"\"\"\n        soup_words = [\"soup\", \"spoon\", \"bowl\", \"ladle\", \"broth\", \"nood"}
{"cat": "food", "slot": "accessory", "value": "dish", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with dish. \n        Output: ", "result": "\n        pizza, pasta, lasagna, spaghetti, garlic, tomato, cheese, bread, meatball, salad \n    \"\"\"\n    category = 'food'\n    condition = 'may have to do with dish'\n    words = []\n    for"}
{"cat": "food", "slot": "accessory", "value": "corn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with corn. \n        Output: ", "result": "\n        corn, popcorn, cornmeal, cornflakes, cornhusk, cornstarch, corn syrup, corn niblets, corn on the cob, cornbread\n    \"\"\"\n    category = \"food\"\n    condition = \"may have to do with"}
{"cat": "food", "slot": "accessory", "value": "bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with bread. \n        Output: ", "result": "\n        bread, roll, bun, loaf, slice, toast, biscuit, muffin, croissant, baguette\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "food", "slot": "accessory", "value": "pasta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with pasta. \n        Output: ", "result": "\n        spaghetti, ravioli, lasagna, fettuccine, macaroni, penne, pappardelle, gnocchi, rigatoni, tagliatelle.\n    \"\"\"\n    category = 'food'\n    condition = 'may have to do"}
{"cat": "food", "slot": "accessory", "value": "maize", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with maize. \n        Output: ", "result": "\n            1. Corn\n            2. Maize\n            3. Cornmeal\n            4. Cornstarch\n            5. Corn oil\n            6. Corn cob\n            7. Corn on the cob\n            8. Corn husk\n            9. Corn silk\n            1"}
{"cat": "food", "slot": "accessory", "value": "vinegar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with vinegar. \n        Output: ", "result": "\n        apple, cider, pickle, salad, vinegar, vinaigrette, marinade, \n        ketchup, mustard, horseradish\n    \"\"\"\n    food_words = [\n        \"apple\", \"cider\", \"pickle\","}
{"cat": "food", "slot": "accessory", "value": "grape", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with grape. \n        Output: ", "result": "\n            1. Grape\n            2. Grapefruit\n            3. Grapeseed\n            4. Grapesicle\n            5. Grapeseed oil\n            6. Grapeseed extract\n            7. Grapeseed flour\n            8. Grap"}
{"cat": "food", "slot": "howToUse", "value": "cut", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for cut. \n        Output: ", "result": "\n            apple, cake, cut, cutter, cutlery, dice, slice, slicer, sliceable, \n            chop, chopstick, chop, chop, chop, chop, chop, chop, chop, chop, chop"}
{"cat": "food", "slot": "howToUse", "value": "cook", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for cook. \n        Output: ", "result": "\n        apple, banana, bread, cheese, egg, fish, milk, onion, potato, rice\n    \"\"\"\n    food_words = [\n        \"apple\", \"banana\", \"bread\", \"cheese\", \"egg\", \"fish\", \"milk\", \""}
{"cat": "food", "slot": "howToUse", "value": "eat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for eat. \n        Output: ", "result": "\n        apple, bread, cake, cheese, egg, fish, fruit, milk, pizza, sandwich \n    \"\"\"\n    category = 'food'\n    condition = 'can be or be used for eat'\n    words = get_words(category, condition)\n   "}
{"cat": "food", "slot": "howToUse", "value": "stew", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for stew. \n        Output: ", "result": "\n            apple, carrot, onion, celery, potato, beef, chicken, pork, lamb, tomato \n\"\"\"\n\nword_list = ['apple', 'carrot', 'onion', 'celery', 'potato', 'beef', '"}
{"cat": "food", "slot": "howToUse", "value": "boil", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for boil. \n        Output: ", "result": "\n        beef, broccoli, chicken, couscous, eggplant, fish, lentils, pasta, rice, tomato \n\"\"\"\n\nword_list = [\"beef\", \"broccoli\", \"chicken\", \"couscous\", \"eg"}
{"cat": "food", "slot": "howToUse", "value": "harvest", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for harvest. \n        Output: ", "result": "\n            1. Apple\n            2. Banana\n            3. Carrot\n            4. Cucumber\n            5. Grape\n            6. Lemon\n            7. Melon\n            8. Orange\n            9. Peach\n            10. Pear\n        \"\"\"\n       "}
{"cat": "food", "slot": "howToUse", "value": "slice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for slice. \n        Output: ", "result": "\n        apple, bread, cheese, cake, egg, ham, pizza, salad, steak, tomato \n    \"\"\"\n    food_words = [\n        \"apple\", \"bread\", \"cheese\", \"cake\", \"egg\", \"ham\", \"p"}
{"cat": "food", "slot": "howToUse", "value": "dry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for dry. \n        Output: ", "result": "\n            apple, bread, cake, cookie, cracker, dry, flour, pancake, rice, toast \n        \"\"\"\n        category = \"food\"\n        condition = \"can be or be used for dry\"\n        words = []\n        for word in text."}
{"cat": "food", "slot": "howToUse", "value": "pick", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for pick. \n        Output: ", "result": "\n        apple, bread, cheese, egg, fish, fruit, meat, pickle, salad, vegetable\n    \"\"\"\n    food_words = [\n        \"apple\", \"bread\", \"cheese\", \"egg\", \"fish\", \"fruit\", \"meat\", \""}
{"cat": "food", "slot": "howToUse", "value": "harvest", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for harvest. \n        Output: ", "result": "\n            1. Apple\n            2. Banana\n            3. Carrot\n            4. Cucumber\n            5. Grape\n            6. Lemon\n            7. Melon\n            8. Orange\n            9. Peach\n            10. Pear\n        \"\"\"\n       "}
{"cat": "food", "slot": "howToUse", "value": "bake", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for bake. \n        Output: ", "result": "\n            apple, cake, flour, sugar, butter, eggs, vanilla, baking powder, baking soda, oven\n\"\"\"\nprint(\"Comma separated list of 10 words that belong to the category food and satisfy the condition can be or be used for b"}
{"cat": "food", "slot": "howToUse", "value": "grow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for grow. \n        Output: ", "result": "\n            apple, banana, carrot, cucumber, eggplant, grape, lettuce, onion, pea, tomato. \n        \"\"\"\n        category = 'food'\n        condition = 'can be or be used for grow'\n        words = []\n       "}
{"cat": "food", "slot": "howToUse", "value": "roast", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for roast. \n        Output: ", "result": "\n          apple, beef, chicken, coffee, egg, garlic, onion, potato, roast, turkey\n    \"\"\"\n    category = \"food\"\n    condition = \"can be or be used for roast\"\n    words = get_words(category, condition"}
{"cat": "food", "slot": "howToUse", "value": "wash", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for wash. \n        Output: ", "result": "\n            apple, bread, butter, cheese, milk, onion, potato, salt, sugar, water\n    \"\"\"\n    food_words = [\"apple\", \"bread\", \"butter\", \"cheese\", \"milk\", \"onion\", \"potato\", \"salt"}
{"cat": "food", "slot": "howToUse", "value": "press", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for press. \n        Output: ", "result": "\n            apple, bread, cheese, egg, ham, juice, milk, onion, pizza \n        \"\"\"\n        category = 'food'\n        condition = 'can be or be used for press'\n        words = get_words(category, condition)\n        return ',"}
{"cat": "food", "slot": "howToUse", "value": "peel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for peel. \n        Output: ", "result": "\n            apple, banana, orange, lemon, peel, skin, rind, pulp, juice, seed\n\"\"\"\nprint(fruits_with_peel(food_category='food', condition='can be or be used for peel'))\n```\n\n"}
{"cat": "food", "slot": "howToUse", "value": "fry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for fry. \n        Output: ", "result": "\n            french fries, potato chips, onion rings, frying pan, frying oil, frying basket, frying spatula, frying thermometer, fryer.\n    \"\"\"\n    category = 'food'\n    condition = '"}
{"cat": "food", "slot": "howToUse", "value": "spiced", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for spiced. \n        Output: ", "result": "\n            apple, cinnamon, ginger, nutmeg, cloves, cardamom, curry, paprika, chili powder, garam masala \n        \"\"\"\n        category = 'food'\n        condition = 'can be or be used for spiced"}
{"cat": "food", "slot": "howToUse", "value": "steam", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for steam. \n        Output: ", "result": "\n            \n        \"\"\"\n        food_words = [\n            \"steak\",\n            \"sausage\",\n            \"pork\",\n            \"chicken\",\n            \"fish\",\n            \"vegetable\",\n            \"rice\",\n            \"potato\",\n            \"b"}
{"cat": "food", "slot": "howToUse", "value": "grind", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for grind. \n        Output: ", "result": "\n          apple, bread, cheese, coffee, egg, flour, garlic, meat, nutmeg, salt. \n    \"\"\"\n    food_words = [\n        \"apple\", \"bread\", \"cheese\", \"coffee\", \"egg\", \"flour\","}
{"cat": "food", "slot": "howToUse", "value": "caramelize", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for caramelize. \n        Output: ", "result": "\n        caramel, caramelize, caramelized, caramelization, caramelized, caramelizing, caramelized, caramelizing, caramelized, caramelized. \n        \"\"\"\n        category = 'food'\n"}
{"cat": "food", "slot": "howToUse", "value": "knead", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for knead. \n        Output: ", "result": "\n            bread, knead, flour, dough, mix, pizza, pastry, roll, bake, kneaded \n        \"\"\"\n        category = 'food'\n        condition = 'can be or be used for knead'\n        words = []\n        for word in"}
{"cat": "food", "slot": "howToUse", "value": "braise", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for braise. \n        Output: ", "result": "\n```\nbeef, chicken, pork, lamb, veal, shrimp, scallops, lobster, crab\n```"}
{"cat": "food", "slot": "howToUse", "value": "cultivate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for cultivate. \n        Output: ", "result": "\n          apple, banana, carrot, cucumber, eggplant, grape, lettuce, onion, pea, tomato\n    \"\"\"\n    category = \"food\"\n    condition = \"can be or be used for cultivate\"\n    words = []\n    for"}
{"cat": "food", "slot": "howToUse", "value": "cream", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for cream. \n        Output: ", "result": "\n            chocolate, whipped cream, ice cream, sour cream, cream cheese, heavy cream, half and half, crema, cr\u00e8me fra\u00eeche, cr\u00e8me anglaise\n        \"\"\"\n        food_words = [\n            \"chocolate\","}
{"cat": "food", "slot": "howToUse", "value": "glaze", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for glaze. \n        Output: ", "result": "\n            apple, cinnamon, glaze, sugar, honey, syrup, marmalade, jams, jelly, preserves \n        \"\"\"\n        category = 'food'\n        condition = 'can be or be used for glaze'\n        words = []\n"}
{"cat": "food", "slot": "howToUse", "value": "dip", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for dip. \n        Output: ", "result": "\n          - salsa \n          - guacamole \n          - hummus \n          - ranch \n          - blue cheese \n          - honey mustard \n          - tzatziki \n          - chutney \n          - aioli \n"}
{"cat": "food", "slot": "howToUse", "value": "break", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for break. \n        Output: ", "result": "\n            apple, bread, cake, cookie, cracker, donut, muffin, pastry, pizza, sandwich \n        \"\"\"\n        category = \"food\"\n        condition = \"can be or be used for break\"\n        words = []\n        for word in"}
{"cat": "food", "slot": "howToUse", "value": "sprout", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for sprout. \n        Output: ", "result": "\n            1. Broccoli\n            2. Carrots\n            3. Lettuce\n            4. Onions\n            5. Peas\n            6. Radishes\n            7. Spinach\n            8. Tomatoes\n            9. Zucchini\n            10."}
{"cat": "food", "slot": "howToUse", "value": "melt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for melt. \n        Output: ", "result": "\n        chocolate, ice cream, butter, cheese, caramel, candy, whipped cream, marshmallow, hot chocolate, melted chocolate.\n    \"\"\"\n    category = \"food\"\n    words = []\n    for"}
{"cat": "food", "slot": "howToUse", "value": "chop", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for chop. \n        Output: ", "result": "\n            apple, bread, chop, cut, egg, food, knife, onion, potato, slice\n\"\"\"\n\n# Define the function\ndef get_words(category, condition):\n    # Create an empty list to store the words\n    words = []\n    \n   "}
{"cat": "food", "slot": "howToUse", "value": "dice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for dice. \n        Output: ", "result": "\n            apple, cake, cookie, donut, egg, fruit, ice cream, pizza, sandwich, yogurt \n        \"\"\"\n        category = \"food\"\n        words = []\n        for word in df.values:\n            if \"dice\" in word"}
{"cat": "food", "slot": "howToUse", "value": "dip", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for dip. \n        Output: ", "result": "\n          - salsa \n          - guacamole \n          - hummus \n          - ranch \n          - blue cheese \n          - honey mustard \n          - tzatziki \n          - chutney \n          - aioli \n"}
{"cat": "food", "slot": "howToUse", "value": "taste", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for taste. \n        Output: ", "result": "\n        apple, cinnamon, vanilla, chocolate, honey, sugar, salt, pepper, basil, oregano \n    \"\"\"\n    category = 'food'\n    condition = 'can be or be used for taste'\n    words = []\n   "}
{"cat": "food", "slot": "howToUse", "value": "grate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for grate. \n        Output: ", "result": "\n          apple, bread, grater, great, grain, grate, \n          grated, gratitude, gratefully, gratedly. \n    \"\"\"\n    category = 'food'\n    condition = 'can be or be used for grate'\n    words ="}
{"cat": "food", "slot": "howToUse", "value": "toast", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for toast. \n        Output: ", "result": "\n          apple, bread, butter, cheese, egg, ham, jam, milk, toast, yogurt \n    \"\"\"\n    category = \"food\"\n    condition = \"can be or be used for toast\"\n    words = get_words(category, condition)"}
{"cat": "food", "slot": "howToUse", "value": "steam", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for steam. \n        Output: ", "result": "\n            \n        \"\"\"\n        food_words = [\n            \"steak\",\n            \"sausage\",\n            \"pork\",\n            \"chicken\",\n            \"fish\",\n            \"vegetable\",\n            \"rice\",\n            \"potato\",\n            \"b"}
{"cat": "food", "slot": "howToUse", "value": "taste", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for taste. \n        Output: ", "result": "\n        apple, cinnamon, vanilla, chocolate, honey, sugar, salt, pepper, basil, oregano \n    \"\"\"\n    category = 'food'\n    condition = 'can be or be used for taste'\n    words = []\n   "}
{"cat": "food", "slot": "howToUse", "value": "crumble", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for crumble. \n        Output: ", "result": "\n            apple, cake, crumble, dessert, fruit, muffin, pie, \n            topping, pastry, sweet. \n        \"\"\"\n        category = 'food'\n        condition = 'can be or be used for crumble'\n        words = get_"}
{"cat": "food", "slot": "howToUse", "value": "wilt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for wilt. \n        Output: ", "result": "\n        beef, chicken, fish, lamb, pasta, rice, salad, soup, steak, vegetable\n    \"\"\"\n    food_words = [\"beef\", \"chicken\", \"fish\", \"lamb\", \"pasta\", \"rice\", \"salad\", \""}
{"cat": "food", "slot": "howToUse", "value": "leaven", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for leaven. \n        Output: ", "result": "\n            bread, flour, yeast, raise, leaven, dough, knead, bake, rise, leavened\n    \"\"\"\n    category = \"food\"\n    condition = \"can be or be used for leaven\"\n    words = []\n    for word in"}
{"cat": "food", "slot": "howToUse", "value": "soak", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for soak. \n        Output: ", "result": "\n            1. Rice \n            2. Beans \n            3. Lentils \n            4. Chickpeas \n            5. Quinoa \n            6. Oats \n            7. Barley \n            8. Buckwheat \n            "}
{"cat": "food", "slot": "howToUse", "value": "slice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for slice. \n        Output: ", "result": "\n        apple, bread, cheese, cake, egg, ham, pizza, salad, steak, tomato \n    \"\"\"\n    food_words = [\n        \"apple\", \"bread\", \"cheese\", \"cake\", \"egg\", \"ham\", \"p"}
{"cat": "food", "slot": "howToUse", "value": "pickle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for pickle. \n        Output: ", "result": "\n        - pickle\n        - brine\n        - cucumber\n        - vinegar\n        - dill\n        - mustard\n        - garlic\n        - onion\n        - jalapeno\n        - pepper\n        \"\"\"\n    words = []\n   "}
{"cat": "food", "slot": "part", "value": "shuck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  shuck. \n        Output: ", "result": "\n          apple, banana, cherry, cucumber, eggplant, fig, grape, honeydew, mango, nectarine, orange, peach, pear, plum, raspberry, strawberry, watermelon, blueberry, blackberry"}
{"cat": "food", "slot": "part", "value": "green corn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  green corn. \n        Output: ", "result": " avocado, cucumber, green bean, green pea, green salad, green apple, green tea, green smoothie, green juice, green salad dressing. \n        \"\"\"\n        category = \"food\"\n        condition = \"can have green corn\"\n        words"}
{"cat": "food", "slot": "part", "value": "sweet corn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  sweet corn. \n        Output: ", "result": "\n        sweet, corn, corn, corn, corn, corn, corn, corn, corn, corn. \n        \"\"\"\n        category = Category.objects.get(name='food')\n        words = Word.objects.filter(category=category)\n        words = [word.name for"}
{"cat": "food", "slot": "product", "value": "yield", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from yield. \n        Output: ", "result": "\n        chocolate, cake, ice cream, pudding, candy, bread, cookie, muffin, pasta, pizza \n    \"\"\"\n    food_words = [\n        \"chocolate\", \"cake\", \"ice cream\", \"pudding"}
{"cat": "food", "slot": "product", "value": "loaf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from loaf. \n        Output: ", "result": "\n```\nbread, roll, loaf, slice, bake, knead, dough, toast, hearth, oven\n```"}
{"cat": "food", "slot": "product", "value": "yield", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from yield. \n        Output: ", "result": "\n        chocolate, cake, ice cream, pudding, candy, bread, cookie, muffin, pasta, pizza \n    \"\"\"\n    food_words = [\n        \"chocolate\", \"cake\", \"ice cream\", \"pudding"}
{"cat": "food", "slot": "smell", "value": "sweet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can smell sweet. \n        Output: ", "result": "\n            chocolate, vanilla, strawberry, raspberry, blueberry, banana, pineapple, orange, lemon, lime\n        \"\"\"\n        category = 'food'\n        condition = 'can smell sweet'\n        words = []\n        for word"}
{"cat": "food", "slot": "place", "value": "fruiterer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in fruiterers. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, kiwi, melon, orange, pear\n    \"\"\"\n    fruits = ['apple', 'banana', 'cherry', 'date', 'fig', 'grape', 'kiwi', 'melon',"}
{"cat": "food", "slot": "place", "value": "greengrocer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in greengrocers. \n        Output: ", "result": "\n        apple, banana, carrot, celery, grapes, lettuce, onion, peach, pear, tomato. \n    \"\"\"\n    food_words = [\n        \"apple\", \"banana\", \"carrot\", \"celery\", \"grapes"}
{"cat": "food", "slot": "place", "value": "bottle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in bottles. \n        Output: ", "result": "\n        chardonnay, merlot, pinot noir, riesling, sauvignon blanc, champagne, port, sherry, vermouth, sangria\n\"\"\"\n\n# Define the function\ndef find_words(category, condition):\n    # Create an empty list to"}
{"cat": "food", "slot": "place", "value": "cellar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in cellars. \n        Output: ", "result": "\n```\nwine, cheese, bread, olive oil, honey, chocolate, salt, spices, vinegar, mustard\n```\n\n### Example 2:\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "food", "slot": "place", "value": "glass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in glasses. \n        Output: ", "result": "\n            1. Lemon\n            2. Lime\n            3. Orange\n            4. Grapefruit\n            5. Pineapple\n            6. Apple\n            7. Grapes\n            8. Grape juice\n            9. Cranberry juice\n            1"}
{"cat": "food", "slot": "generalization", "value": "nutrient", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are nutrient. \n        Output: ", "result": "\n        apples, bananas, carrots, eggs, fish, milk, oranges, peanuts, spinach, yogurt\n    \"\"\"\n    food_words = [\"apples\", \"bananas\", \"carrots\", \"eggs\", \"fish\", \"milk\","}
{"cat": "food", "slot": "generalization", "value": "drink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are drink. \n        Output: ", "result": "\n        coffee, tea, milk, juice, soda, water, beer, wine, cocktail, smoothie\n    \"\"\"\n    category = \"food\"\n    condition = \"are drink\"\n    words = get_words(category, condition)\n    return \", \".join"}
{"cat": "food", "slot": "generalization", "value": "food", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are food. \n        Output: ", "result": "\n        chocolate, cookie, cake, ice cream, pizza, sandwich, sushi, burger, french fries, donut\n    \"\"\"\n    food_words = [\"chocolate\", \"cookie\", \"cake\", \"ice cream\", \"pizza"}
{"cat": "food", "slot": "generalization", "value": "vegetable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are vegetable. \n        Output: ", "result": "\n            asparagus, broccoli, carrot, cucumber, eggplant, green beans, \n            lettuce, pea, spinach, zucchini. \n        \"\"\"\n        category = 'food'\n        condition = 'are vegetable'\n"}
{"cat": "food", "slot": "generalization", "value": "food product", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are food product. \n        Output: ", "result": "\n        chocolate, cookie, cake, ice cream, pizza, bread, fruit, vegetable, soup, sandwich \n    \"\"\"\n    food_words = [\"chocolate\", \"cookie\", \"cake\", \"ice cream\", \"pizza\", \"bread\","}
{"cat": "food", "slot": "generalization", "value": "foodstuff", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are foodstuff. \n        Output: ", "result": "\n        chocolate, cookie, cake, ice cream, pizza, sandwich, sushi, burger, french fries, donut.\n    \"\"\"\n    category = 'food'\n    condition = 'are foodstuff'\n    words = get_words"}
{"cat": "food", "slot": "generalization", "value": "substance", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are substance. \n        Output: ", "result": "\n        apple, bread, cheese, chicken, coffee, cucumber, egg, fish, milk, pizza \n    \"\"\"\n    food_words = [\n        \"apple\", \"bread\", \"cheese\", \"chicken\", \"coffee\", \"cucumber\","}
{"cat": "food", "slot": "generalization", "value": "green groceries", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are green groceries. \n        Output: ", "result": "\n            apple, banana, celery, cucumber, green beans, kale, lettuce, spinach, tomato, zucchini. \n        \"\"\"\n        category = 'food'\n        condition = 'are green groceries'\n        words = get_"}
{"cat": "food", "slot": "generalization", "value": "green goods", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are green goods. \n        Output: ", "result": "\n```\napple, broccoli, celery, cucumber, eggplant, kale, lettuce, pea, spinach, zucchini\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "food", "slot": "generalization", "value": "produce", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are produce. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, kiwi, melon, orange, pear\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \"grape\", \"kiwi\", \"melon"}
{"cat": "food", "slot": "generalization", "value": "staple food", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are staple food. \n        Output: ", "result": "\n        rice, bread, potato, corn, soybean, wheat, rice, bread, potato, corn\n    \"\"\"\n    food_category = Category.objects.get(name='food')\n    staple_food = food_category.staple_fo"}
{"cat": "food", "slot": "generalization", "value": "garden truck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are garden truck. \n        Output: ", "result": "\n        carrot, cucumber, eggplant, pea, pumpkin, radish, squash, tomato, zucchini.\n    \"\"\"\n    food_words = [\"carrot\", \"cucumber\", \"eggplant\", \"pea\", \"pumpkin"}
{"cat": "food", "slot": "generalization", "value": "herb", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are herb. \n        Output: ", "result": "\n        asparagus, basil, cilantro, dill, fennel, mint, oregano, rosemary, thyme, tarragon\n    \"\"\"\n    herb_words = [\"basil\", \"cilantro\", \"dill\", \"mint"}
{"cat": "food", "slot": "generalization", "value": "reproductive structure", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are reproductive structure. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, melon, orange, pear, pomegranate\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \"grape\", \"melon\", \""}
{"cat": "food", "slot": "generalization", "value": "herbaceous plant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are herbaceous plant. \n        Output: ", "result": "\n            asparagus, broccoli, cauliflower, celery, cilantro, dill, fennel, parsley, sage, thyme\n        \"\"\"\n        category = \"food\"\n        condition = \"are herbaceous plant\"\n"}
{"cat": "food", "slot": "generalization", "value": "vascular plant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are vascular plant. \n        Output: ", "result": "\n```\napple, banana, carrot, celery, cucumber, eggplant, lettuce, onion, pea, potato\n```"}
{"cat": "food", "slot": "generalization", "value": "tracheophyte", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are tracheophyte. \n        Output: ", "result": "\n        apple, banana, carrot, celery, cucumber, eggplant, lettuce, onion, pea, potato \n    \"\"\"\n    category = \"food\"\n    condition = \"are tracheophyte\"\n    words = get_words(category"}
{"cat": "food", "slot": "generalization", "value": "tuber", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are tuber. \n        Output: ", "result": "\n            carrot, potato, sweet potato, yam, parsnip, turnip, rutabaga, \n            beet, garlic, onion. \n        \"\"\"\n        category = 'food'\n        condition = 'are tuber'\n        words ="}
{"cat": "food", "slot": "generalization", "value": "liquid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are liquid. \n        Output: ", "result": "\n        milk, water, juice, soup, broth, tea, coffee, ice, soda, lemonade\n```\n\nExample 2:\n```\nInput: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "food", "slot": "generalization", "value": "starches", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are starches. \n        Output: ", "result": "\n        rice, bread, pasta, potato, corn, cassava, yam, sweet potato, tapioca, flour \n    \"\"\"\n    category = \"food\"\n    condition = \"are starches\"\n    words = get_words(category, condition"}
{"cat": "food", "slot": "generalization", "value": "fluid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are fluid. \n        Output: ", "result": "\n        milk, water, juice, soup, broth, tea, coffee, ice cream, yogurt, gelato\n```\n\nExample 2: \nInput: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n"}
{"cat": "food", "slot": "generalization", "value": "plant life", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are plant life. \n        Output: ", "result": "\n        apple, banana, carrot, celery, cucumber, eggplant, lettuce, onion, pea, potato \n    \"\"\"\n    plant_life_words = [\"apple\", \"banana\", \"carrot\", \"celery\", \"cucumber\", \""}
{"cat": "food", "slot": "generalization", "value": "nourishment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are nourishment. \n        Output: ", "result": "\n        apple, banana, carrot, egg, fish, grape, honey, milk, oatmeal, pear\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"carrot\", \"egg\", \"fish\", \"grape\", \"honey\","}
{"cat": "food", "slot": "generalization", "value": "plant organ", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are plant organ. \n        Output: ", "result": "\n        carrot, cucumber, eggplant, lettuce, pea, pumpkin, radish, spinach, tomato, zucchini.\n    \"\"\"\n    plant_words = [\"carrot\", \"cucumber\", \"eggplant\", \"lettuce\", \""}
{"cat": "food", "slot": "generalization", "value": "street drug", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are street drug. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in word_list:\n            if word.is_street_drug():\n                words.append(word)\n        return words\n\n    def is_street_drug(self):\n        \"\"\"\n        Check if the word is"}
{"cat": "food", "slot": "generalization", "value": "sustenance", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are sustenance. \n        Output: ", "result": "\n        bread, cheese, eggs, fruit, grains, meat, milk, potatoes, rice, vegetables \n    \"\"\"\n    category = \"food\"\n    condition = \"are sustenance\"\n    words = get_words(category, condition)\n    print(\", \"."}
{"cat": "food", "slot": "generalization", "value": "alimentation", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are alimentation. \n        Output: ", "result": "\n        chocolate, cake, cookie, ice cream, pizza, sandwich, sushi, burger, french fries, pasta\n    \"\"\"\n    food_words = [\"chocolate\", \"cake\", \"cookie\", \"ice cream\", \"pizza"}
{"cat": "food", "slot": "generalization", "value": "drug of abuse", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are drug of abuse. \n        Output: ", "result": "\n        chocolate, cocaine, crack, ecstasy, heroin, marijuana, methamphetamine, morphine, oxycodone, peyote\n    \"\"\"\n    category = \"food\"\n    condition = \"are drug of abuse\""}
{"cat": "food", "slot": "generalization", "value": "plant structure", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are plant structure. \n        Output: ", "result": "\n        apple, banana, carrot, celery, cucumber, eggplant, lettuce, onion, pea, potato\n    \"\"\"\n    plant_words = [\"apple\", \"banana\", \"carrot\", \"celery\", \"cucumber\", \"eggplant"}
{"cat": "food", "slot": "generalization", "value": "victuals", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are victuals. \n        Output: ", "result": "\n            apple, bread, cheese, chicken, coffee, cucumber, egg, fish, fruit, \n            ham, ice cream, jam, juice, kebab, lemon, milk, muffin, noodle, \n            oatmeal, on"}
{"cat": "food", "slot": "generalization", "value": "matter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are matter. \n        Output: ", "result": "\n        apple, bread, cheese, coffee, dog, egg, fish, ham, ice cream, milk\n    \"\"\"\n    food_words = [\n        \"apple\", \"bread\", \"cheese\", \"coffee\", \"dog\", \"egg\", \"fish\", \"ham"}
{"cat": "food", "slot": "generalization", "value": "grain", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are grain. \n        Output: ", "result": "\n        bread, rice, pasta, corn, wheat, oats, barley, rye, millet, sorghum\n    \"\"\"\n    food_words = [\"bread\", \"rice\", \"pasta\", \"corn\", \"wheat\", \"oats\", \"bar"}
{"cat": "food", "slot": "generalization", "value": "flora", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are flora. \n        Output: ", "result": "\n```\napple, banana, cherry, date, fig, grape, kiwi, melon, orange, pear\n```"}
{"cat": "food", "slot": "generalization", "value": "plant part", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are plant part. \n        Output: ", "result": "\n        carrot, celery, cucumber, eggplant, lettuce, onion, pea, potato, tomato, zucchini.\n    \"\"\"\n    plant_words = [\"carrot\", \"celery\", \"cucumber\", \"eggplant\", \"lett"}
{"cat": "food", "slot": "generalization", "value": "nutrition", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are nutrition. \n        Output: ", "result": "\n            apple, banana, carrot, egg, fish, milk, oatmeal, orange, peach, spinach\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"carrot\", \"egg\", \"fish\", \"milk\", \"oatmeal"}
{"cat": "food", "slot": "generalization", "value": "plant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are plant. \n        Output: ", "result": "\n```\napple, banana, carrot, celery, cucumber, eggplant, lettuce, pea, potato, tomato\n```"}
{"cat": "food", "slot": "generalization", "value": "food grain", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are food grain. \n        Output: ", "result": "\n        rice, wheat, corn, barley, oats, rye, millet, sorghum, maize, rice, wheat, corn, barley, oats, rye, millet, sorghum, maize.\n    \"\"\"\n    category = 'food"}
{"cat": "food", "slot": "generalization", "value": "aliment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are aliment. \n        Output: ", "result": "\n        apple, bread, chicken, coffee, donut, egg, hamburger, ice cream, pizza, sandwich\n    \"\"\"\n    category = \"food\"\n    condition = \"are aliment\"\n    words = get_words(category, condition)\n    print(\","}
{"cat": "food", "slot": "generalization", "value": "solid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are solid. \n        Output: ", "result": "\n        apple, bread, cake, cheese, chocolate, cookie, crackers, donut, egg, pizza \n    \"\"\"\n    food_words = [\n        \"apple\", \"bread\", \"cake\", \"cheese\", \"chocolate\", \"cookie\","}
{"cat": "food", "slot": "generalization", "value": "nutriment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are nutriment. \n        Output: ", "result": "\n        apples, bananas, carrots, eggs, fish, grapes, lettuce, milk, oranges, pears\n    \"\"\"\n    food_words = [\"apples\", \"bananas\", \"carrots\", \"eggs\", \"fish\", \"grapes\","}
{"cat": "food", "slot": "generalization", "value": "citrous fruit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are citrous fruit. \n        Output: ", "result": "\n        orange, lemon, lime, \n        grapefruit, tangerine, \n        clementine, mandarin, \n        pomelo, bergamot, \n        kumquat, clementine, \n        orange, lemon, lime"}
{"cat": "food", "slot": "generalization", "value": "snack food", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are snack food. \n        Output: ", "result": "\n            chips, crackers, popcorn, pretzels, candy, cookies, ice cream, cake, donuts, pizza \n        \"\"\"\n        category = Category.objects.get(name='food')\n        snack_food = SnackFood"}
{"cat": "food", "slot": "generalization", "value": "brewage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are brewage. \n        Output: ", "result": "\n```\nbeer, ale, lager, porter, stout, IPA, pilsner, wheat, Belgian, craft\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "food", "slot": "generalization", "value": "root vegetable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are root vegetable. \n        Output: ", "result": "\n```\ncarrot, potato, beet, turnip, parsnip, rutabaga, yam, sweet potato, taro, cassava\n```\nExplanation:\n```\n1. carrot\n2. potato\n3. beet\n4."}
{"cat": "food", "slot": "generalization", "value": "melon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are melon. \n        Output: ", "result": "1. Watermelon, 2. Cantaloupe, 3. Honeydew, 4. Persimmon, 5. Muskmelon, 6. Crenshaw, 7. Casaba, 8. Galia, 9. Charentais,"}
{"cat": "food", "slot": "generalization", "value": "vine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are vine. \n        Output: ", "result": "\n```\napple, banana, cherry, grape, kiwi, lemon, orange, peach, pear, plum\n```"}
{"cat": "food", "slot": "generalization", "value": "citrus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are citrus. \n        Output: ", "result": "\n        orange, lemon, lime, \n        grapefruit, tangerine, \n        clementine, mandarin, \n        blood orange, pomelo, \n        grapefruit, tangerine, \n        clementine, mandarin, "}
{"cat": "food", "slot": "generalization", "value": "gramineous plant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are gramineous plant. \n        Output: ", "result": "\n        rice, wheat, corn, barley, oats, rye, sorghum, millet,\n```"}
{"cat": "food", "slot": "generalization", "value": "legume", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are legume. \n        Output: ", "result": "\n        pea, bean, lentil, chickpea, soybean, kidney bean,\n```"}
{"cat": "food", "slot": "generalization", "value": "liliaceous plant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are liliaceous plant. \n        Output: ", "result": "\n            asparagus, broccoli, cauliflower, celery, lettuce, onion, pea, radish, spinach, zucchini \n        \"\"\"\n        category = \"food\"\n        condition = \"are liliaceous plant\"\n       "}
{"cat": "food", "slot": "generalization", "value": "citrus fruit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are citrus fruit. \n        Output: ", "result": "\n        orange, lemon, lime, \n        grapefruit, tangerine, \n        clementine, mandarin, \n        blood orange, pomelo, \n        grapefruit, tangerine, \n        clementine, mandarin, "}
{"cat": "food", "slot": "generalization", "value": "crucifer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are crucifer. \n        Output: ", "result": "\n        arugula, broccoli, brussels sprouts, cabbage, cauliflower, kale, mustard greens, radish, wasabi, watercress\n    \"\"\"\n    category = \"food\"\n    condition = \"are crucifer\"\n   "}
{"cat": "food", "slot": "generalization", "value": "bulbous plant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are bulbous plant. \n        Output: ", "result": "\n        asparagus, broccoli, cauliflower, brussels sprouts, artichoke, bok choy, eggplant, bell pepper, zucchini, cucumber\n    \"\"\"\n    category = \"food\"\n    condition = \"are bul"}
{"cat": "food", "slot": "generalization", "value": "baked goods", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are baked goods. \n        Output: ", "result": "\n```\nbread, cake, cookie, muffin, pastry, pizza, roll, biscuit, scone\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition \"are baked goods\" are: bread, cake"}
{"cat": "food", "slot": "generalization", "value": "alliaceous plant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are alliaceous plant. \n        Output: ", "result": "\n```\ngarlic, onion, leek, chives, shallot, scallion, radish, wasabi, horseradish, mustard\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "food", "slot": "generalization", "value": "brew", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are brew. \n        Output: ", "result": "\n    \"\"\"\n    food_words = [\"beer\", \"brew\", \"ale\", \"lager\", \"stout\", \"pilsner\", \"porter\", \"IPA\", \"ales\", \"malt\", \"hops\"]\n    food_words = [word for word in food_"}
{"cat": "food", "slot": "generalization", "value": "dairy product", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are dairy product. \n        Output: ", "result": "\n        milk, cheese, yogurt, butter, cream, ice cream, sour cream, cream cheese, buttermilk, cottage cheese.\n    \"\"\"\n    category = 'food'\n    condition = 'are dairy product'\n"}
{"cat": "food", "slot": "generalization", "value": "gourd vine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are gourd vine. \n        Output: ", "result": "\n        pumpkin, zucchini, cucumber, squash, gourd, melon, watermelon, cantaloupe, pumpkin, butternut \n    \"\"\"\n    category = \"food\"\n    condition = \"are gourd vine\"\n"}
{"cat": "food", "slot": "generalization", "value": "graminaceous plant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are graminaceous plant. \n        Output: ", "result": "\n        rice, wheat, corn, oats, barley, rye, sorghum, millet, triticale, spelt\n    \"\"\"\n    category = \"food\"\n    condition = \"are graminaceous plant\"\n    words = get_words(category,"}
{"cat": "food", "slot": "generalization", "value": "drug", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are drug. \n        Output: ", "result": "\n```\ncaffeine, aspirin, paracetamol, ibuprofen, codeine, morphine, atenolol, metoprolol, propranolol, amlodipine, lisinopril, losartan, furosemide"}
{"cat": "food", "slot": "generalization", "value": "solanaceous vegetable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are solanaceous vegetable. \n        Output: ", "result": "\n        tomato, eggplant, pepper, potato,\n```"}
{"cat": "food", "slot": "generalization", "value": "melon vine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are melon vine. \n        Output: ", "result": "\n        apple, banana, cantaloupe, honeydew, kiwi, melon, pear, watermelon, zucchini\n    \"\"\"\n    melon_words = [\"melon\", \"cantaloupe\", \"honeydew\", \"kiwi\", \""}
{"cat": "food", "slot": "generalization", "value": "grass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are grass. \n        Output: ", "result": "\n```\nlettuce, spinach, wheat, barley, oats, rye, corn, rice, millet, sorghum\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "food", "slot": "generalization", "value": "cruciferous plant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cruciferous plant. \n        Output: ", "result": "\n        arugula, broccoli, brussels sprouts, cabbage, cauliflower, kale, mustard greens, radish, wasabi, watercress\n    \"\"\"\n    category = \"food\"\n    condition = \"are cruciferous plant\""}
{"cat": "food", "slot": "howToUse", "value": "dry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be used when dry. \n        Output: ", "result": "\n        apple, bread, cheese, coffee, cereal, crackers, eggs, fruit, milk, toast \n    \"\"\"\n    category = \"food\"\n    condition = \"can be used when dry\"\n    words = get_words(category, condition)\n    print"}
{"cat": "food", "slot": "accessory", "value": "sandwich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with sandwich. \n        Output: ", "result": "\n        bread, cheese, meat, lettuce, tomato, onion, pickle, mustard, ketchup, mayonnaise \n    \"\"\"\n    category = Category.objects.get(name='food')\n    condition = 'may have to do with sandwich'\n"}
{"cat": "food", "slot": "accessory", "value": "milk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with milk. \n        Output: ", "result": "\n        chocolate, ice cream, milkshake, yogurt, cheese, butter, sour cream, whipped cream, buttermilk, pudding.\n    \"\"\"\n    food_words = [\n        \"chocolate\", \"ice cream"}
{"cat": "food", "slot": "generalization", "value": "fruit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are fruit. \n        Output: ", "result": "1. Apple, 2. Banana, 3. Orange, 4. Pear, 5. Grape, 6. Mango, 7. Papaya, 8. Pineapple, 9. Strawberry, 10. Watermelon\n    \"\"\"\n"}
{"cat": "food", "slot": "generalization", "value": "pome", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are pome. \n        Output: ", "result": "\n        apple, cherry, pear, plum, quince, apricot, peach, nectarine, prune, cherry plum\n\"\"\"\n\nword_list = [\"apple\", \"cherry\", \"pear\", \"plum\", \"quince\", \""}
{"cat": "food", "slot": "consistency", "value": "dry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have a consistency or taste dry. \n        Output: ", "result": "\n            apple, bread, cake, cookie, cracker, dry, flour, fruit, muffin, pancake \n        \"\"\"\n        category = 'food'\n        condition = 'can have a consistency or taste dry'\n        words = []\n        for word in"}
{"cat": "food", "slot": "generalization", "value": "edible fruit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are edible fruit. \n        Output: ", "result": " apple, banana, cherry, date, fig, grape, kiwi, mango, orange, peach\n    \"\"\"\n    fruits = []\n    for word in words:\n        if \"edible\" in word and \"fruit\" in word:\n            fruits.append"}
{"cat": "food", "slot": "part", "value": "peel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  peel. \n        Output: ", "result": " apple, banana, orange, lemon, grape, pear, mango, papaya, kiwi, avocado \n    \"\"\"\n    fruits = ['apple', 'banana', 'orange', 'lemon', 'grape', 'pear', 'mango',"}
{"cat": "food", "slot": "part", "value": "wheat berry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  wheat berry. \n        Output: ", "result": "\n        bread, cake, cookie, crackers, muffin, pasta, pizza, roll, sandwich, wheat berry\n    \"\"\"\n    food_words = [\"bread\", \"cake\", \"cookie\", \"crackers\", \"muffin\", \"pasta"}
{"cat": "food", "slot": "part", "value": "bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  bread. \n        Output: ", "result": " bread, butter, toast, roll, bun, loaf, baguette, croissant, brioche, muffin. \n        \"\"\"\n        category = Category.objects.get(name='food')\n        condition = Condition.objects.get(name='can"}
{"cat": "food", "slot": "part", "value": "pasta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  pasta. \n        Output: ", "result": "\n        pasta, lasagna, spaghetti, macaroni, ravioli, penne, fettuccine, linguine, rigatoni, pappardelle \n    \"\"\"\n    food_words = [\"pasta\", \"lasagna\", \"spaghetti\", \""}
{"cat": "food", "slot": "product", "value": "pasta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from pasta. \n        Output: ", "result": "\n        spaghetti, macaroni, lasagna, fettuccine, penne, ravioli, tortellini, gnocchi, rigatoni, pappardelle \n    \"\"\"\n    category = \"food\"\n    condition = \"make or are made from"}
{"cat": "food", "slot": "product", "value": "crop", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from crop. \n        Output: ", "result": "\n        apple, banana, carrot, cucumber, eggplant, grape, lettuce, onion, pea, potato\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"carrot\", \"cucumber\", \"eggplant\", \"grape"}
{"cat": "food", "slot": "product", "value": "bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from bread. \n        Output: ", "result": "\n        apple, banana, bread, cake, cookie, donut, loaf, muffin, roll, toast \n    \"\"\"\n    food_words = [\n        \"apple\", \"banana\", \"bread\", \"cake\", \"cookie\", \"donut\", \""}
{"cat": "food", "slot": "generalization", "value": "cereal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cereal. \n        Output: ", "result": "\n```\ncereal, oats, wheat, rice, corn, barley, rye, millet, sorghum, maize\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "food", "slot": "place", "value": "grape", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in grapes. \n        Output: ", "result": "1. grape, 2. seed, 3. skin, 4. juice, 5. pulp, 6. flavor, 7. aroma, 8. tartness, 9. sweetness, 10. vitamin C.\n    \"\"\"\n"}
{"cat": "food", "slot": "generalization", "value": "inebriant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are inebriant. \n        Output: ", "result": " beer, wine, whiskey, vodka, gin, rum, champagne, brandy, sake, tequila. \n        \"\"\"\n        category = 'food'\n        condition = 'inebriant'\n        result = []\n        for word in words:\n"}
{"cat": "food", "slot": "generalization", "value": "alcoholic drink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are alcoholic drink. \n        Output: ", "result": "1. Beer, 2. Wine, 3. Vodka, 4. Gin, 5. Rum, 6. Whiskey, 7. Brandy, 8. Cider, 9. Mead, 10. Absinthe\n```\n"}
{"cat": "food", "slot": "generalization", "value": "crop", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are crop. \n        Output: ", "result": "\n        apple, banana, carrot, corn, cucumber, eggplant, lettuce, onion, pea, potato\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"carrot\", \"corn\", \"cucumber\", \"eggplant\","}
{"cat": "food", "slot": "generalization", "value": "alcoholic beverage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are alcoholic beverage. \n        Output: ", "result": "1. Beer, 2. Wine, 3. Vodka, 4. Gin, 5. Rum, 6. Whiskey, 7. Brandy, 8. Cider, 9. Mead, 10. Absinthe\n```\n"}
{"cat": "food", "slot": "generalization", "value": "alcohol", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are alcohol. \n        Output: ", "result": "\n```\nwine, beer, whiskey, vodka, gin, rum, brandy, champagne, sake, tequila\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "food", "slot": "generalization", "value": "dish", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are dish. \n        Output: ", "result": "\n        chicken, pasta, pizza, lasagna, risotto, ravioli, spaghetti, fettuccine, gnocchi, tortellini. \n        \"\"\"\n        category = 'food'\n        condition = 'are dish'\n        words ="}
{"cat": "food", "slot": "generalization", "value": "maize", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are maize. \n        Output: ", "result": "\n        corn,maize,cornmeal,cornflour,cornstarch,cornhusk,cornsilk,corncob,corn,maize,cornmeal,cornflour,cornstarch,cornhusk,c"}
{"cat": "food", "slot": "generalization", "value": "intoxicant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are intoxicant. \n        Output: ", "result": "\n        beer, wine, whiskey, vodka, gin, rum, tequila, brandy, liqueur, champagne\n\"\"\"\n\n# Define the function\ndef get_intoxicant_words(category: str, condition: str) -> list:\n   "}
{"cat": "food", "slot": "accessory", "value": "salad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with salad. \n        Output: ", "result": "\n```\nlettuce, tomato, onion, cucumber, carrot, bell pepper, avocado, ranch, vinaigrette, dressing\n```\nExplanation: The words that belong to the category \"food\" and may have to do with salad"}
{"cat": "food", "slot": "specialization", "value": "buckwheat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are buckwheat. \n        Output: ", "result": "\n        beechnut, buckwheat, buckwheat honey, buckwheat groats, \n        buckwheat flour, buckwheat noodles, buckwheat cake, \n        buckwhe"}
{"cat": "food", "slot": "specialization", "value": "groats", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are groats. \n        Output: ", "result": "\n        */\n        public List<string> GetWords(string category, string condition)\n        {\n            List<string> words = new List<string>();\n\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                connection.Open();\n\n               "}
{"cat": "food", "slot": "specialization", "value": "millet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are millet. \n        Output: ", "result": "1. Ragi, 2. Jowar, 3. Bajra, 4. Little millet, 5. Barnyard millet, 6. Kodo millet, 7. Proso millet, 8. Foxtail millet, 9. Pear"}
{"cat": "food", "slot": "specialization", "value": "wild rice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are wild rice. \n        Output: ", "result": "\n        wild,rice,wild,rice,wild,rice,wild,rice,wild,rice,wild,rice,wild,rice,wild,rice,wild,rice,wild,rice,wild,rice,wild,rice,wild,"}
{"cat": "food", "slot": "specialization", "value": "edible corn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are edible corn. \n        Output: ", "result": "\n        corn, popcorn, maize, sweet corn, cornmeal, cornstarch, corn oil, corn syrup, corn flakes, corn nuts\n    \"\"\"\n    food_category = Category.objects.get(name='food')\n    edible_corn_"}
{"cat": "food", "slot": "specialization", "value": "Indian rice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Indian rice. \n        Output: ", "result": "\n```\nbasmati, biryani, idli, dosa, naan, roti, chapati, paratha, pulao\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition \"are Indian rice\" are: basm"}
{"cat": "food", "slot": "specialization", "value": "ciabatta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are ciabatta. \n        Output: ", "result": "\n```\nbread, ciabatta, dough, flour, knead, olive oil, salt, water, yeast\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition \"are ciabatta\" are bread, ciabatta,"}
{"cat": "food", "slot": "specialization", "value": "brown bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are brown bread. \n        Output: ", "result": "\n```\nbrown, bread, whole, grain, rye, wheat, oat, sourdough, ciabatta, pumpernickel\n```\n\n### Example 2:\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "food", "slot": "specialization", "value": "barleycorn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are barleycorn. \n        Output: ", "result": "\n        apple, bread, cheese, corn, egg, fish, milk, oat, rice, wheat. \n    \"\"\"\n    food_words = [\"apple\", \"bread\", \"cheese\", \"corn\", \"egg\", \"fish\", \"milk\", \"oat"}
{"cat": "food", "slot": "specialization", "value": "grist", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are grist. \n        Output: ", "result": "\n```\nbread, cheese, flour, grist, mill, oats, pasta, rice, wheat\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "food", "slot": "specialization", "value": "oat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are oat. \n        Output: ", "result": "\n        oatmeal, oat bran, oat cereal, oat flour, oat groats, oatmeal cookie, oatmeal cake, oatmeal bread, oatmeal porridge, oatmeal pudding \n    \"\"\""}
{"cat": "food", "slot": "specialization", "value": "malt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are malt. \n        Output: ", "result": "\n        chocolate, cereal, cookie, cracker, malt, milk, oatmeal, popcorn, pretzel, rice.\n    \"\"\"\n    food_words = [\"chocolate\", \"cereal\", \"cookie\", \"cracker\", \"malt\","}
{"cat": "food", "slot": "specialization", "value": "breadstick", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are breadstick. \n        Output: ", "result": "\n        pizza, breadstick, garlic bread, calzone, stromboli, focaccia, ciabatta, baguette, crostini, bruschetta.\n    \"\"\"\n    category = \"food\"\n    condition = \"are breadstick\"\n   "}
{"cat": "food", "slot": "specialization", "value": "baguette", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are baguette. \n        Output: ", "result": "\n```\nbaguette, croissant, pain, brioche, pain au chocolat, pain de mie, baguette, brioche, croissant, pain au chocolat\n```\nExplanation: The words that belong to the category \"food\" and satisfy"}
{"cat": "food", "slot": "specialization", "value": "barley", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are barley. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, oat, pear, plum, raisin \n        \"\"\"\n        category = \"food\"\n        condition = \"are barley\"\n        words = get_words(category, condition)\n       "}
{"cat": "food", "slot": "specialization", "value": "baked potato", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are baked potato. \n        Output: ", "result": "\n```\nbaked, potato, spud, tater, roast, oven, bake, mash, chip, skin\n```"}
{"cat": "food", "slot": "specialization", "value": "dessert apple", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are dessert apple. \n        Output: ", "result": "\n            Granny Smith, Red Delicious, Gala, Pink Lady, Golden Delicious, Cox's Orange Pippin, Bramley's Seedling, Spartan, Discovery, Jonagold\n        \"\"\"\n        category = \"food\"\n        condition = \""}
{"cat": "food", "slot": "specialization", "value": "Cotes de Provence", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Cotes de Provence. \n        Output: ", "result": "\n        apple, bread, cheese, citrus, eggplant, fish, garlic, olive, pear, tomato \n    \"\"\"\n    category = \"food\"\n    condition = \"are Cotes de Provence\"\n    words = get_words(category, condition)"}
{"cat": "food", "slot": "specialization", "value": "cheddar cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cheddar cheese. \n        Output: ", "result": "\n        cheddar,cheese,cheddar cheese,cheddar cheese,cheddar cheese,cheddar cheese,cheddar cheese,cheddar cheese,cheddar cheese,cheddar cheese. \n        \"\"\"\n        category = 'food'\n        che"}
{"cat": "food", "slot": "specialization", "value": "white wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are white wine. \n        Output: ", "result": "\n            Chardonnay, Sauvignon Blanc, Pinot Grigio, Riesling, Vermentino, Viognier, Moscato, Sauvignon Blanc, Pinot Grigio, Riesling, \n        \"\"\"\n        words = []\n        for word"}
{"cat": "food", "slot": "specialization", "value": "carrot juice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are carrot juice. \n        Output: ", "result": "\n        carrot, juice, carrot, juice, carrot, juice, carrot, juice, \n        carrot, juice, carrot, juice. \n        \"\"\"\n        category = 'food'\n        condition = 'are carrot juice'"}
{"cat": "food", "slot": "specialization", "value": "hero sandwich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hero sandwich. \n        Output: ", "result": "\n        ham, cheese, lettuce, tomato, onion, pickle, mustard, mayonnaise, ketchup, avocado \n    \"\"\"\n    category = Category.objects.get(name='food')\n    condition = Condition.objects.get(name"}
{"cat": "food", "slot": "specialization", "value": "naan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are naan. \n        Output: ", "result": "\n        bread, naan, roti, chapati, paratha, kulcha, puri, naan bread, naan roti, naan chapati, naan paratha, naan kulcha, naan puri, naan bread, naan roti,"}
{"cat": "food", "slot": "specialization", "value": "seedpod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are seedpod. \n        Output: ", "result": "\n            alfalfa, clover, lentil, pea, radish, safflower, soybean, sunflower, \n            tamarind, teff\n    \"\"\"\n    category = \"food\"\n    condition = \"are seedpod\"\n    words"}
{"cat": "food", "slot": "specialization", "value": "home-fried potatoes", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are home-fried potatoes. \n        Output: ", "result": "\n        french fries, mashed potatoes, home fries, potato chips, roasted potatoes, baked potatoes, potato pancakes, potato gnocchi, potato salad, potato soup.\n    \"\"\"\n    potato_words = []\n"}
{"cat": "food", "slot": "specialization", "value": "gyro", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are gyro. \n        Output: ", "result": "\n        pita, meat, cheese, tomato, cucumber, onion, tzatziki, yogurt, fries, garlic.\n    \"\"\"\n    category = \"food\"\n    condition = \"are gyro\"\n    words = get_words(category"}
{"cat": "food", "slot": "specialization", "value": "Triticum turgidum", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Triticum turgidum. \n        Output: ", "result": "\n```\nwheat, flour, bread, pasta, cereal, durum, semolina, spaghetti, pizza, crackers\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition \"are Triticum turg"}
{"cat": "food", "slot": "specialization", "value": "pasta salad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are pasta salad. \n        Output: ", "result": "\n        spaghetti, macaroni, ravioli, lasagna, fettuccine, penne, rigatoni, tortellini, gnocchi, pappardelle \n    \"\"\"\n    category = \"food\"\n    condition = \"are pasta salad"}
{"cat": "food", "slot": "specialization", "value": "tomato juice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are tomato juice. \n        Output: ", "result": "\n        tomato, juice, ketchup, pasta, salad, sauce, salsa, soup, spaghetti, vinaigrette. \n        \"\"\"\n        category = \"food\"\n        condition = \"are tomato juice\"\n        words ="}
{"cat": "food", "slot": "specialization", "value": "cambric tea", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cambric tea. \n        Output: ", "result": "\n        apple, bread, butter, cheese, egg, ham, milk, orange, sugar, tea.\n    \"\"\"\n    category = \"food\"\n    condition = \"are cambric tea\"\n    words = get_words(category, condition)\n    return \", \".join("}
{"cat": "food", "slot": "specialization", "value": "Cripps Pink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Cripps Pink. \n        Output: ", "result": "\n        strawberry, raspberry, blackberry, blueberry, cherry, plum, apricot, peach, orange, lemon.\n    \"\"\"\n    words = []\n    for word in words:\n        if word.category == \"food\" and word.color"}
{"cat": "food", "slot": "specialization", "value": "ice tea", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are ice tea. \n        Output: ", "result": "iced tea, icedtea, icedtea, icedtea, icedtea, icedtea, icedtea, icedtea, icedtea. \n        \"\"\"\n        category = Category.objects.get(name='food')\n       "}
{"cat": "food", "slot": "specialization", "value": "crab apple", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are crab apple. \n        Output: ", "result": "\n            apple, crab, juicy, tart, crunchy, sweet, aromatic, healthy, low-calorie, high-antioxidants\n        \"\"\"\n        crab_apple_words = [\n            \"apple\", \"crab\", \"juicy\", \""}
{"cat": "food", "slot": "specialization", "value": "fries", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are fries. \n        Output: ", "result": "\n        fries,chips,crisps,french fries,potato chips,chips,crisps,chips,chips,chips. \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n   "}
{"cat": "food", "slot": "specialization", "value": "wild wheat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are wild wheat. \n        Output: ", "result": "\n        bread, flour, dough, wheat, wheatgrass, spelt, kamut, durum, semolina, farro\n    \"\"\"\n    food_words = [\"bread\", \"flour\", \"dough\", \"wheat\", \"wheatgr"}
{"cat": "food", "slot": "specialization", "value": "buffalo nut", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are buffalo nut. \n        Output: ", "result": "\n```\nbuffalo, nut, buffalo nut, buffalo nuts, buffalo nutrient, buffalo nutrients, buffalo nutrient, buffalo nutrients, buffalo nutrient, buffalo nutrients, buffalo nutrient, buffalo nutrients"}
{"cat": "food", "slot": "specialization", "value": "Fragaria ananassa", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Fragaria ananassa. \n        Output: ", "result": "\n        strawberry \n        raspberry \n        blackberry \n        blueberry \n        redcurrant \n        gooseberry \n        blackcurrant \n        loganberry \n        boysenberry \n        currant \n    \"\"\"\n    words ="}
{"cat": "food", "slot": "specialization", "value": "club sandwich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are club sandwich. \n        Output: ", "result": "\n        ham, bacon, lettuce, tomato, mayonnaise, bread, cheese, pickles, onions, ketchup\n\"\"\"\n\n# Define the function\ndef get_club_sandwich_words(category: str, condition: str) -> list:\n"}
{"cat": "food", "slot": "specialization", "value": "Gala", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Gala. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, gala, honeydew, kiwi, melon, nectarine \n    \"\"\"\n    fruits = [\"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \"gala\", \"h"}
{"cat": "food", "slot": "specialization", "value": "brioche", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are brioche. \n        Output: ", "result": "\n            brioche, croissant, pain au chocolat, muffin, scone, baguette, brioche, croissant, pain au chocolat, muffin, \n            scone, baguette, croissant, pain au choc"}
{"cat": "food", "slot": "specialization", "value": "hallah", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hallah. \n        Output: ", "result": "\u05d7\u05dc\u05d1, \u05d7\u05dc\u05d1, \u05d7\u05dc\u05d1, \u05d7\u05dc\u05d1, \u05d7\u05dc\u05d1, \u05d7\u05dc\u05d1, \u05d7\u05dc\u05d1, \u05d7\u05dc\u05d1, \u05d7\u05dc\u05d1, \u05d7\u05dc\u05d1, \u05d7\u05dc\u05d1, \u05d7\u05dc\u05d1, \u05d7\u05dc\u05d1,"}
{"cat": "food", "slot": "specialization", "value": "Rhone wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Rhone wine. \n        Output: ", "result": "\n            Chateauneuf-du-Pape, Cotes-du-Rhone, Gigondas, Tavel,\n            Vacqueyras, Beaumes-de-Venise, Crozes-Hermitage,\n            Hermitage, Saint-Joseph"}
{"cat": "food", "slot": "specialization", "value": "poor boy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are poor boy. \n        Output: ", "result": "\n        bread, butter, cheese, eggs, ham, hot sauce, ketchup, onions, oysters, po-boy \n    \"\"\"\n    food_words = [\"bread\", \"butter\", \"cheese\", \"eggs\", \"ham\", \"hot sau"}
{"cat": "food", "slot": "specialization", "value": "western sandwich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are western sandwich. \n        Output: ", "result": "\n        ham, cheese, bread, lettuce, tomato, onion, pickle, mustard, mayonnaise, ketchup \n    \"\"\"\n    category = \"food\"\n    words = [\"ham\", \"cheese\", \"bread\", \"lettuce\", \"tom"}
{"cat": "food", "slot": "specialization", "value": "Cabernet Sauvignon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Cabernet Sauvignon. \n        Output: ", "result": "\n```\ncabernet, sauvignon, merlot, pinot, noir, zinfandel, syrah, grenache, moscato, sangiovese\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the"}
{"cat": "food", "slot": "specialization", "value": "blush wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are blush wine. \n        Output: ", "result": "\n            apple, berry, cherry, currant, grape, plum, raspberry, strawberry, wine\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"blush wine\" in word:\n            words.append(word)"}
{"cat": "food", "slot": "specialization", "value": "California wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are California wine. \n        Output: ", "result": "\n```\nChardonnay, Cabernet Sauvignon, Merlot, Pinot Noir, Zinfandel, Sauvignon Blanc, Syrah, Pinot Grigio, Sangiovese, Riesling\n```\n```"}
{"cat": "food", "slot": "specialization", "value": "submarine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are submarine. \n        Output: ", "result": "\n        bread, cheese, ham, salami, tuna, turkey, chicken, salmon, shrimp, sardines \n    \"\"\"\n    category = \"food\"\n    submarine_words = [\"bread\", \"cheese\", \"ham\", \"salami"}
{"cat": "food", "slot": "specialization", "value": "molded salad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are molded salad. \n        Output: ", "result": "\n```\nlettuce, tomato, cucumber, onion, carrot, bell pepper, mushroom, broccoli, cauliflower, spinach\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition \"are mold"}
{"cat": "food", "slot": "specialization", "value": "coleslaw", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are coleslaw. \n        Output: ", "result": "\n            coleslaw, cabbage, slaw, dressing, mayonnaise, vinegar, shredded, salad, vegetable, creamy \n        \"\"\"\n        coleslaw = [\"coleslaw\", \"cabbage\", \"slaw\", \"dressing\","}
{"cat": "food", "slot": "specialization", "value": "Cuban sandwich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Cuban sandwich. \n        Output: ", "result": "\n        ham, pork, Swiss cheese, pickles, mustard, bread, butter, dill pickle, roast pork, Swiss cheese\n    \"\"\"\n    cuban_sandwich_words = [\n        \"ham\", \"pork\", \"Swiss cheese"}
{"cat": "food", "slot": "specialization", "value": "wild strawberry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are wild strawberry. \n        Output: ", "result": "\n        wild,strawberry,berry,fruit,wild,strawberry,berry,fruit,wild,strawberry,berry,fruit,wild,strawberry,berry,fruit,wild,strawberry,berry,fruit,wild,"}
{"cat": "food", "slot": "specialization", "value": "unleavened bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are unleavened bread. \n        Output: ", "result": "\n        pita, matzo, cracker, flatbread, unleavened, bread, biscuit, wafer, tortilla, blini \n    \"\"\"\n    food_words = [\"pita\", \"matzo\", \"cracker\", \"flatbread\", \"un"}
{"cat": "food", "slot": "specialization", "value": "false fruit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are false fruit. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, kiwi, mango, orange, pear\n    \"\"\"\n    fruits = [\"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \"grape\", \"kiwi\", \"mango\","}
{"cat": "food", "slot": "specialization", "value": "tea-like drink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are tea-like drink. \n        Output: ", "result": "\n        chai, \n        tea, \n        tisane, \n        herbal tea, \n        mate, \n        yerba, \n        rooibos, \n        pu-erh, \n        oolong.\n    \"\"\"\n   "}
{"cat": "food", "slot": "specialization", "value": "beach strawberry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are beach strawberry. \n        Output: ", "result": "\n            apple, banana, cherry, coconut, grape, honey, ice cream, pineapple, strawberry, watermelon. \n        \"\"\"\n        category = 'food'\n        condition = 'are beach strawberry'\n        words ="}
{"cat": "food", "slot": "specialization", "value": "fruitlet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are fruitlet. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, kiwi, mango, orange, peach\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"fruitlet\" in word:\n            words.append(word)\n"}
{"cat": "food", "slot": "specialization", "value": "decaf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are decaf. \n        Output: ", "result": "\n        chocolate, coffee, decaf, espresso, latte, mocha, cappuccino, tea, vanilla, hazelnut\n    \"\"\"\n    category = \"food\"\n    condition = \"are decaf\"\n    words = get_"}
{"cat": "food", "slot": "specialization", "value": "wild cherry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are wild cherry. \n        Output: ", "result": " cherry, pie, cherrystone, cherryoak, cherryblossom, cherrycake, cherrycola, cherryjuice, cherrytea, cherrychocolate\n    \"\"\"\n    category = \"food\"\n    condition = \"are wild cherry"}
{"cat": "food", "slot": "specialization", "value": "wood strawberry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are wood strawberry. \n        Output: ", "result": "\n        apple, banana, cherry, date, elderberry, fig, grape, honeydew, kiwi, mango, nectarine, orange, peach, pear, plum, raspberry, strawberry, watermelon, blueberry, black"}
{"cat": "food", "slot": "specialization", "value": "papaya juice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are papaya juice. \n        Output: ", "result": "1. papaya, 2. juice, 3. papaya, 4. juice, 5. papaya, 6. juice, 7. papaya, 8. juice, 9. papaya, 10. juice.\n    \"\"\"\n"}
{"cat": "food", "slot": "specialization", "value": "Granny Smith", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Granny Smith. \n        Output: ", "result": "\n        apple, cake, cookie, donut, granola, ice cream, muffin, pie, scone, yogurt\n\"\"\"\n\nword_list = [\"apple\", \"cake\", \"cookie\", \"donut\", \"granola\", \"ice cream"}
{"cat": "food", "slot": "specialization", "value": "herb tea", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are herb tea. \n        Output: ", "result": "\n        chai, green tea, herbal tea, matcha, oolong tea, peppermint tea, rooibos tea, yerba mate, yakult, yogurt. \n        \"\"\"\n        category = 'food'\n        condition = 'are herb"}
{"cat": "food", "slot": "specialization", "value": "Fragaria vesca", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Fragaria vesca. \n        Output: ", "result": "1. Strawberry, 2. Fragaria, 3. Vesca, 4. Red, 5. Fruit, 6. Edible, 7. Berry, 8. Rosaceae, 9. Perennial, 10. Herb.\n"}
{"cat": "food", "slot": "specialization", "value": "cappuccino", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cappuccino. \n        Output: ", "result": "\n        coffee, milk, foam, espresso, cappuccino, latte, mocha, macchiato, caffe, barista \n    \"\"\"\n    category = 'food'\n    condition = 'are cappuccino'\n    words = get"}
{"cat": "food", "slot": "specialization", "value": "iced coffee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are iced coffee. \n        Output: ", "result": "iced, coffee, frappuccino, mocha, latte, cappuccino, espresso, iced-coffee, iced-frappuccino, iced-mocha \n        \"\"\"\n        category = 'food'\n        condition ="}
{"cat": "food", "slot": "specialization", "value": "Limburger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Limburger. \n        Output: ", "result": "1. Limburger, 2. Brie, 3. Blue, 4. Camembert, 5. Gorgonzola, 6. Roquefort, 7. Stilton, 8. Gouda, 9. Cheddar, 10."}
{"cat": "food", "slot": "specialization", "value": "bosc", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are bosc. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, honeydew, kiwi, mango, nectarine, orange, peach, plum, raspberry, strawberry, watermelon, blueberry, blackberry, cranberry,"}
{"cat": "food", "slot": "specialization", "value": "sun tea", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are sun tea. \n        Output: ", "result": "iced tea, lemonade, iced coffee, iced green tea, iced chai, iced hibiscus tea, iced ginger tea, iced mint tea, iced raspberry tea, iced black tea.\n    \"\"\"\n    words = []\n    for word"}
{"cat": "food", "slot": "specialization", "value": "drinking chocolate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are drinking chocolate. \n        Output: ", "result": "\n        chocolate,cake,dessert,drink,sweet,hot,chocolate drink,chocolate cake,chocolate dessert,chocolate drinks. \n        \"\"\"\n        category = 'food'\n        condition = 'are drinking ch"}
{"cat": "food", "slot": "specialization", "value": "starch wheat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are starch wheat. \n        Output: ", "result": "\n        bread, rice, pasta, potato, cereal, flour, noodle, corn, pastries, crackers\n    \"\"\"\n    food_words = [\"bread\", \"rice\", \"pasta\", \"potato\", \"cereal\", \"flour\", \""}
{"cat": "food", "slot": "specialization", "value": "grated cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are grated cheese. \n        Output: ", "result": "\n        cheddar, mozzarella, parmesan, gouda, gruyere, fontina, provolone, \n        emmental, asiago, romano. \n        \"\"\"\n        category = 'food'\n        condition = 'are grated"}
{"cat": "food", "slot": "specialization", "value": "Liederkranz", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Liederkranz. \n        Output: ", "result": "\n        apple, cake, chocolate, cookie, donut, bread, pizza, ice cream, milkshake. \n    \"\"\"\n    category = \"food\"\n    condition = \"are Liederkranz\"\n    words = get_words(category, condition"}
{"cat": "food", "slot": "specialization", "value": "aggregate fruit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are aggregate fruit. \n        Output: ", "result": " apple, banana, cherry, date, fig, grape, orange, peach, plum, apricot.\n    \"\"\"\n    fruits = ['apple', 'banana', 'cherry', 'date', 'fig', 'grape', 'orange', 'peach',"}
{"cat": "food", "slot": "specialization", "value": "common wheat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are common wheat. \n        Output: ", "result": "\n        bread, flour, dough, wheat, wheat flour, wheat bread, wheat dough, wheat flour bread, wheat flour dough, wheat flour bread dough.\n    \"\"\"\n    wheat_words = []\n    for word in"}
{"cat": "food", "slot": "specialization", "value": "multiple fruit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are multiple fruit. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, melon, orange, peach, plum\n    \"\"\"\n    fruits = ['apple', 'banana', 'cherry', 'date', 'fig', 'grape', 'melon', 'orange',"}
{"cat": "food", "slot": "specialization", "value": "cuppa", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cuppa. \n        Output: ", "result": "\n        chai, coffee, tea, latte, cappuccino, espresso, mocha, hot chocolate, \n        tea bag, coffee beans.\n    \"\"\"\n    category = 'food'\n    condition = 'are cuppa'\n    words ="}
{"cat": "food", "slot": "specialization", "value": "pan gravy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are pan gravy. \n        Output: ", "result": "\n            chicken, sausage, rice, cream, onion, garlic, thyme, bay leaf, paprika, red pepper\n        \"\"\"\n        food_words = [\"chicken\", \"sausage\", \"rice\", \"cream\", \"onion\", \"garlic"}
{"cat": "food", "slot": "specialization", "value": "temple orange", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are temple orange. \n        Output: ", "result": "\n            1. Orange\n            2. Temple\n            3. Orange\n            4. Temple\n            5. Orange\n            6. Temple\n            7. Orange\n            8. Temple\n            9. Orange\n            10. Temple\n        \"\"\"\n        words = []\n        for word in"}
{"cat": "food", "slot": "specialization", "value": "fruit salad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are fruit salad. \n        Output: ", "result": " apple, banana, cherry, date, fig, grape, kiwi, mango, orange, pineapple \n    \"\"\"\n    words = []\n    for word in word_list:\n        if word.is_fruit_salad():\n            words.append(word"}
{"cat": "food", "slot": "specialization", "value": "gravy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are gravy. \n        Output: ", "result": "\n            chicken, gravy, mashed, potatoes, biscuit, sausage, steak, roast, gravy boat, sauce \n        \"\"\"\n        category = \"food\"\n        condition = \"are gravy\"\n        words = []\n        for word in"}
{"cat": "food", "slot": "specialization", "value": "challah", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are challah. \n        Output: ", "result": "\n          apple, bread, cake, challah, cookie, donut, loaf, muffin, pastry, roll\n    \"\"\"\n    category = \"food\"\n    condition = \"are challah\"\n    words = get_words(category, condition)\n   "}
{"cat": "food", "slot": "specialization", "value": "quark", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are quark. \n        Output: ", "result": "\n        cheese, curd, cottage cheese, quark, ricotta, yogurt, sour cream, cream cheese, paneer, mozzarella \n    \"\"\"\n    category = 'food'\n    condition = 'are quark'"}
{"cat": "food", "slot": "specialization", "value": "varietal wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are varietal wine. \n        Output: ", "result": "\n```\nChardonnay, Pinot Noir, Merlot, Cabernet Sauvignon, Syrah, Zinfandel, Sauvignon Blanc, Pinot Grigio, Riesling, Sangiovese\n```\n```"}
{"cat": "food", "slot": "specialization", "value": "altar wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are altar wine. \n        Output: ", "result": "\n```\nChardonnay, Merlot, Cabernet Sauvignon, Pinot Noir, Sauvignon Blanc, Zinfandel, Syrah, Riesling, Pinot Grigio, Sangiovese\n```\n```"}
{"cat": "food", "slot": "specialization", "value": "loaf of bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are loaf of bread. \n        Output: ", "result": "\n        bread, roll, bun, loaf, slice, baguette, brioche, ciabatta, pita, naan \n    \"\"\"\n    food_words = [\"bread\", \"roll\", \"bun\", \"loaf\", \"slice\", \"baguette\","}
{"cat": "food", "slot": "specialization", "value": "beefburger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are beefburger. \n        Output: ", "result": "\n        beefburger, hamburger, steak, burger, meatloaf, roast, chili, t-bone, sirloin, filet mignon \n    \"\"\"\n    category = \"food\"\n    condition = \"are beefburger\"\n    words ="}
{"cat": "food", "slot": "specialization", "value": "herbal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are herbal. \n        Output: ", "result": "\n```\napple, basil, chamomile, cinnamon, fennel, ginger, lavender, mint, rosemary, thyme\n```"}
{"cat": "food", "slot": "specialization", "value": "accessory fruit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are accessory fruit. \n        Output: ", "result": "\n```\napple, banana, cherry, date, fig, grape, kiwi, mango, orange, pear\n```\nExplanation:\nThe words that belong to the category \"food\" and satisfy the condition \"are accessory fruit\" are: apple, banana,"}
{"cat": "food", "slot": "specialization", "value": "ricotta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are ricotta. \n        Output: ", "result": "\n```\ncheese, ricotta, cream, cottage, whey, mozzarella, mascarpone, gorgonzola, burrata, fontina\n```\nExplanation:\n\n1. The category is food.\n2. The condition is"}
{"cat": "food", "slot": "specialization", "value": "Sloppy Joe", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Sloppy Joe. \n        Output: ", "result": "\n```\nsloppy,joe,hamburger,bun,meat,onion,ketchup,mustard,lettuce,tomato\n```"}
{"cat": "food", "slot": "specialization", "value": "bacon-lettuce-tomato sandwich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are bacon-lettuce-tomato sandwich. \n        Output: ", "result": "\n        bacon,lettuce,tomato,sandwich,bacon-lettuce-tomato,bacon-lettuce,bacon-tomato,bacon-lettuce-tomato-sandwich,lettuce-tomato-sandwich,tomato-sand"}
{"cat": "food", "slot": "specialization", "value": "cream cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cream cheese. \n        Output: ", "result": "\n```\ncheese, sour cream, whipped cream, cream cheese frosting, cream cheese danish, cream cheese bagel, cream cheese dip, cream cheese frosting recipe, cream cheese pound cake\n```"}
{"cat": "food", "slot": "specialization", "value": "oenomel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are oenomel. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, honeydew, kiwi, melon, nectarine, orange, peach, pear, plum, prune, raspberry, strawberry, watermelon\n    \"\"\"\n   "}
{"cat": "food", "slot": "specialization", "value": "flatbread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are flatbread. \n        Output: ", "result": "\n        pizza, naan, tortilla, crepe, flatbread, pancake, arepas, chapati, roti, paratha\n    \"\"\"\n    food_words = [\"pizza\", \"naan\", \"tortilla\", \"crepe\", \"flatbread"}
{"cat": "food", "slot": "specialization", "value": "Burgundy wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Burgundy wine. \n        Output: ", "result": "\n            Chateauneuf-du-Pape, Pinot Noir, Syrah, Merlot, Cabernet Sauvignon, Cabernet Franc, Grenache, Mourv\u00e8dre, C\u00f4te-R\u00f4tie, Hermitage \n        \"\"\"\n        category ="}
{"cat": "food", "slot": "specialization", "value": "buckthorn berry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are buckthorn berry. \n        Output: ", "result": "1. Buckthorn, 2. Berry, 3. Buckthorn, 4. Berry, 5. Buckthorn, 6. Berry, 7. Buckthorn, 8. Berry, 9. Buckthorn, 10. Berry"}
{"cat": "food", "slot": "specialization", "value": "open-face sandwich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are open-face sandwich. \n        Output: ", "result": "\n        ham, cheese, bread, lettuce, tomato, onion, mustard, mayonnaise, ketchup, pickle \n    \"\"\"\n    category = \"food\"\n    condition = \"are open-face sandwich\"\n    words = []\n    for word"}
{"cat": "food", "slot": "specialization", "value": "salad nicoise", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are salad nicoise. \n        Output: ", "result": "\n```\nlettuce, tomato, onion, bell pepper, cucumber, hard-boiled egg, canned tuna, black olives, anchovy filet, vinaigrette\n```\n\n### Example 2:\n```\nProvide a list of"}
{"cat": "food", "slot": "specialization", "value": "matzoh", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are matzoh. \n        Output: ", "result": "\n          matzoh, bread, cracker, unleavened, Passover, matzoh ball, matzoh brei, matzoh meal, matzoh pizza, matzoh brie\n    \"\"\"\n    category = \"food\"\n    condition = \"are"}
{"cat": "food", "slot": "specialization", "value": "bleu", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are bleu. \n        Output: ", "result": "\n        chocolate, cheese, blueberry, ice cream, salmon, blueberry pie, blueberry muffin, blueberry yogurt, blueberry smoothie, blueberry cake \n    \"\"\"\n    category = \"food\"\n    condition = \"are bleu"}
{"cat": "food", "slot": "specialization", "value": "mocha coffee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are mocha coffee. \n        Output: ", "result": "\n        chocolate, cocoa, mocha, coffee, espresso, latte, cappuccino, hot chocolate, mocha frappuccino, mocha cappuccino \n    \"\"\"\n    category = 'food'\n    condition = '"}
{"cat": "food", "slot": "specialization", "value": "Triticum durum", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Triticum durum. \n        Output: ", "result": "\n        wheat, durum, semolina, spelt, kamut, durum wheat, durum semolina, durum flour, durum pasta, durum bread \n    \"\"\"\n    category = \"food\"\n    condition = \"are Triticum dur"}
{"cat": "food", "slot": "specialization", "value": "wish-wash", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are wish-wash. \n        Output: ", "result": "\n        chocolate, cake, ice cream, cookie, pizza, candy, donut, sandwich, soda, fruit.\n    \"\"\"\n    words = []\n    for word in words:\n        if \"wish-wash\" in word:\n            words."}
{"cat": "food", "slot": "specialization", "value": "ale", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are ale. \n        Output: ", "result": "\n        beer, ale, lager, malt, hops, yeast, barley, malted barley, malted wheat, malted rye \n    \"\"\"\n    food_words = [\"beer\", \"ale\", \"lager\", \"malt\","}
{"cat": "food", "slot": "specialization", "value": "wrap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are wrap. \n        Output: ", "result": "\n        chips, taco, burrito, enchilada, salsa, guacamole, quesadilla, nacho, fajita, chimichanga.\n    \"\"\"\n    category = \"food\"\n    condition = \"are wrap\"\n    words ="}
{"cat": "food", "slot": "specialization", "value": "hard wheat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hard wheat. \n        Output: ", "result": "\n        bread, roll, bun, cracker, cookie, cake, pastry, muffin, biscuit, croissant\n    \"\"\"\n    food_words = [\"bread\", \"roll\", \"bun\", \"cracker\", \"cookie\", \"cake\", \"pastry"}
{"cat": "food", "slot": "specialization", "value": "elk nut", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are elk nut. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, kiwi, melon, orange, pear\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \"grape\", \"kiwi\", \"melon"}
{"cat": "food", "slot": "specialization", "value": "ade", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are ade. \n        Output: ", "result": "\n    \"\"\"\n    food_words = [\"ade\", \"apple\", \"banana\", \"chocolate\", \"cookie\", \"donut\", \"icecream\", \"orange\", \"peach\", \"pizza\"]\n    food_words = [word for word in food_words if word"}
{"cat": "food", "slot": "specialization", "value": "garden strawberry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are garden strawberry. \n        Output: ", "result": "\n        strawberry,strawberry jam,strawberry shortcake,strawberry ice cream,strawberry cake,strawberry pie,strawberry yogurt,strawberry smoothie,strawberry milkshake,strawberry sorbet\n```\n"}
{"cat": "food", "slot": "specialization", "value": "Triticum spelta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Triticum spelta. \n        Output: ", "result": "\n        Wheat, Spelt, Barley, Rye, Triticale, Emmer, Khorasan Wheat, Kamut, Durum, Semolina\n    \"\"\"\n    category = \"food\"\n    condition = \"are Triticum spelta\"\n    words ="}
{"cat": "food", "slot": "specialization", "value": "butty", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are butty. \n        Output: ", "result": "\n    \"\"\"\n    food_words = [\n        \"bacon\",\n        \"sausage\",\n        \"toast\",\n        \"butter\",\n        \"jam\",\n        \"eggs\",\n        \"sandwich\",\n        \"tea\",\n        \"co"}
{"cat": "food", "slot": "specialization", "value": "marasca", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are marasca. \n        Output: ", "result": "\n    \"\"\"\n    marasca_words = [\"Maraschino\", \"Maraschino\", \"Maraschino\", \"Maraschino\", \"Maraschino\", \"Maraschino\", \"Maraschino\", \"Maraschino\", \"Maraschino"}
{"cat": "food", "slot": "specialization", "value": "lager", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are lager. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, honeydew, kiwi, mango, nectarine, orange, peach, pear, plum, prune, raspberry, strawberry, watermelon, blueberry, black"}
{"cat": "food", "slot": "specialization", "value": "coffee cappuccino", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are coffee cappuccino. \n        Output: ", "result": "\n        coffee, cappuccino, espresso, latte, mocha, caffe, macchiato, Americano, Mocha Frappuccino, Caffe Mocha.\n    \"\"\"\n    category = 'food'\n    condition = 'are"}
{"cat": "food", "slot": "specialization", "value": "whole wheat bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are whole wheat bread. \n        Output: ", "result": "\n        whole, wheat, bread, flour, grain, healthy, fiber, wholemeal, wholewheat, wheatbread\n```\n\n```\nDescribe a scenario where the input is a list of strings, where each string is a word belonging to a specific category"}
{"cat": "food", "slot": "specialization", "value": "sour bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are sour bread. \n        Output: ", "result": "\n        bread, vinegar, sourdough, sour dough, sourdough bread, sour rye, sour rye bread, sourdough starter, sourdough starter bread, sour rye starter, sour rye starter bread\n    \"\"\"\n"}
{"cat": "food", "slot": "specialization", "value": "Turkish coffee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Turkish coffee. \n        Output: ", "result": "\u00e7ay, kahve, espresso, cappuccino, latte, macchiato, mocha, caf\u00e9, espresso, Turkish.\n    \"\"\"\n    category = Category.objects.get(name='food')\n    condition = Condition.objects.get"}
{"cat": "food", "slot": "specialization", "value": "tabooli", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are tabooli. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, honeydew, kiwi, mango, nectarine, orange, peach, pear, plum, raspberry, strawberry, watermelon, blueberry, blackberry, c"}
{"cat": "food", "slot": "specialization", "value": "draught beer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are draught beer. \n        Output: ", "result": "\n```\nbeer, lager, ale, stout, pilsner, porter, wheat, beer, malt, hops\n```\nExplanation:\nThe words that belong to the category \"food\" and satisfy the condition \"are draught beer\" are"}
{"cat": "food", "slot": "specialization", "value": "fortified wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are fortified wine. \n        Output: ", "result": "\n            Chianti, Sherry, Port, Madeira, Marsala, Vermouth, Claret, Tokay, Sherry, Sauternes\n    \"\"\"\n    fortified_wine_words = [\"Chianti\", \"Sherry\", \"Port\", \"Madeira\", \""}
{"cat": "food", "slot": "specialization", "value": "spelt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are spelt. \n        Output: ", "result": "\n        apple, bread, cheese, egg, fish, fruit, ham, milk, pizza, salad \n    \"\"\"\n    food_words = [\"apple\", \"bread\", \"cheese\", \"egg\", \"fish\", \"fruit\", \"ham\", \"milk\", \""}
{"cat": "food", "slot": "specialization", "value": "smoothie", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are smoothie. \n        Output: ", "result": "1. Berry, 2. Orange, 3. Yogurt, 4. Mango, 5. Banana, 6. Strawberry, 7. Pineapple, 8. Ice, 9. Milk, 10. Spinach.\n   "}
{"cat": "food", "slot": "specialization", "value": "generic wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are generic wine. \n        Output: ", "result": "\n        chardonnay, merlot, pinot grigio, riesling, sangiovese, sauvignon blanc, zinfandel, cabernet sauvignon, pinot noir, syrah/shiraz\n    \"\"\"\n    category = \"food\"\n"}
{"cat": "food", "slot": "specialization", "value": "mozzarella", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are mozzarella. \n        Output: ", "result": "\n        pizza, cheese, mozzarella, lasagna, burrata, mozzarella, mozzarella, mozzarella, mozzarella, mozzarella. \n        \"\"\"\n        category = 'food'\n"}
{"cat": "food", "slot": "specialization", "value": "cafe au lait", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cafe au lait. \n        Output: ", "result": "\n```\ncafe, au, lait, espresso, latte, mocha, cappuccino, macchiato, coffee, drink\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition \"are cafe au lait\""}
{"cat": "food", "slot": "specialization", "value": "hoagie", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hoagie. \n        Output: ", "result": "\n        bread, cheese, ham, turkey, lettuce, tomato, onion, pickle, mayonnaise, ketchup \n    \"\"\"\n    food_words = [\"bread\", \"cheese\", \"ham\", \"turkey\", \"lettuce\", \"tomato"}
{"cat": "food", "slot": "specialization", "value": "soya bean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are soya bean. \n        Output: ", "result": "\n        chickpea, lentil, soybean, tofu, edamame, tempeh, miso, soy milk, soy yogurt, soy cheese. \n        \"\"\"\n        category = 'food'\n        condition = 'are soya"}
{"cat": "food", "slot": "specialization", "value": "iced tea", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are iced tea. \n        Output: ", "result": "iced tea, lemonade, iced coffee, iced cocoa, iced tea latte, iced tea frappuccino, iced tea mocha, iced tea latte macchiato, iced tea frappuccino ice, iced tea latte ice, "}
{"cat": "food", "slot": "specialization", "value": "whole meal bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are whole meal bread. \n        Output: ", "result": "\n        bread, roll, bun, loaf, baguette, ciabatta, pita, naan, focaccia, croissant \n    \"\"\"\n    food_words = [\"bread\", \"roll\", \"bun\", \"loaf\", \"baguette\", \"ci"}
{"cat": "food", "slot": "specialization", "value": "Swiss cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Swiss cheese. \n        Output: ", "result": "\n        chocolate, cheese, fondue, raclette, gruyere, emmental, swiss, muenster, gouda, brie \n    \"\"\"\n    category = \"food\"\n    condition = \"are Swiss cheese\"\n    words = get_"}
{"cat": "food", "slot": "specialization", "value": "gluten bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are gluten bread. \n        Output: ", "result": "\n        bread, roll, bun, loaf, muffin, biscuit, croissant, baguette, bagel, English muffin \n    \"\"\"\n    gluten_bread_words = [\n        \"bread\",\n        \"roll\",\n        \"b"}
{"cat": "food", "slot": "specialization", "value": "coffee royal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are coffee royal. \n        Output: ", "result": "\n```\ncoffee, espresso, cappuccino, latte, mocha, macchiato, Americano, flat white, cortado, affogato\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition \"are coffee"}
{"cat": "food", "slot": "specialization", "value": "pot cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are pot cheese. \n        Output: ", "result": "\n```\ncheddar, gouda, brie, mozzarella, provolone, gruyere, parmesan, blue cheese, goat cheese, feta\n```\nExplanation:\n\n1. The category is food.\n2. The condition is"}
{"cat": "food", "slot": "specialization", "value": "Chilean strawberry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Chilean strawberry. \n        Output: ", "result": "\n        chilean, strawberry, fruit, berry, red, juicy, sweet, fragrant, succulent, delicious \n    \"\"\"\n    chilean_strawberry_words = [\"chilean\", \"strawberry\", \"fruit\", \"berry"}
{"cat": "food", "slot": "specialization", "value": "roll", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are roll. \n        Output: ", "result": "\n        apple, bread, cake, cookie, donut, pizza, roll, sandwich, sushi, \n        Category: food. \n        Condition: are sweet. \n        Output: \n        apple, bread, cake, cookie, donut, pizza"}
{"cat": "food", "slot": "specialization", "value": "Triticum dicoccum", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Triticum dicoccum. \n        Output: ", "result": "\n        wheat, barley, rye, oats, spelt, kamut, triticale, durum, emmer, einkorn\n    \"\"\"\n    category = \"food\"\n    condition = \"are Triticum dicoccum\"\n    words = get_words"}
{"cat": "food", "slot": "specialization", "value": "tea", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are tea. \n        Output: ", "result": "\n        chai, milk, sugar, tea, tea bag, tea leaves, tea pot, tea cup, tea infuser, tea strainer \n    \"\"\"\n    category = \"food\"\n    condition = \"are tea\"\n    words = get_words(category, condition)\n   "}
{"cat": "food", "slot": "specialization", "value": "wedge", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are wedge. \n        Output: ", "result": "\n        apple, banana, cake, donut, pizza, sandwich, slice, tart, wedges, wedge. \n    \"\"\"\n    food_words = [\n        \"apple\", \"banana\", \"cake\", \"donut\", \"pizza\", \"sand"}
{"cat": "food", "slot": "specialization", "value": "cottage cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cottage cheese. \n        Output: ", "result": "\n        cottage cheese, cream cheese, sour cream, yogurt, paneer, queso fresco, fromage blanc, ricotta, mascarpone, greek yogurt\n    \"\"\"\n    category = \"food\"\n    condition = \""}
{"cat": "food", "slot": "specialization", "value": "pink wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are pink wine. \n        Output: ", "result": "\n            champagne, merlot, pinot noir, ros\u00e9, sangria, sparkling wine, syrah, tempranillo, viognier, zinfandel\n    \"\"\"\n    category = \"food\"\n    condition = \"are pink wine\"\n    words ="}
{"cat": "food", "slot": "specialization", "value": "V-8 juice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are V-8 juice. \n        Output: ", "result": "\n        orange, juice, blend, vegetable, vitamin, concentrate, drink, beverage, healthy, antioxidant \n    \"\"\"\n    food_words = [\"orange\", \"juice\", \"blend\", \"vegetable\", \"vitamin\","}
{"cat": "food", "slot": "specialization", "value": "simnel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are simnel. \n        Output: ", "result": "\n    \"\"\"\n    words = [\"simnel cake\", \"simnel pudding\", \"simnel beer\", \"simnel ale\",\n             \"simnel loaf\", \"simnel bread\", \"simnel biscuit\", \"simnel cookie\",\n             \"simnel tart\", \""}
{"cat": "food", "slot": "specialization", "value": "Golden Delicious", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Golden Delicious. \n        Output: ", "result": "\n        apple, cinnamon, delicious, golden, harvest, juicy, nutritious, sweet, tart, varieties\n```\n\n```\nDescribe a scenario where you need to find a list of words that belong to a category and satisfy a condition. \n        Provide"}
{"cat": "food", "slot": "specialization", "value": "grinder", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are grinder. \n        Output: ", "result": "\n        bread, cheese, grinder, meat, pizza, salad, sandwich, steak, tomato, vegetable.\n    \"\"\"\n    food_words = [\"bread\", \"cheese\", \"grinder\", \"meat\", \"pizza\", \"salad\", \""}
{"cat": "food", "slot": "specialization", "value": "Camembert", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Camembert. \n        Output: ", "result": "\n        brie, camembert, cheddar, gouda, gruyere, \n        mozzarella, parmesan, provolone, swiss, \n        brie, camembert, cheddar, gouda, gruyere, "}
{"cat": "food", "slot": "specialization", "value": "May apple", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are May apple. \n        Output: ", "result": "\n            apple, crabapple, quince, pear, plum, cherry, apricot, blackberry, raspberry, strawberry\n        \"\"\"\n        category = \"food\"\n        condition = \"are May apple\"\n        words = get_words(category,"}
{"cat": "food", "slot": "specialization", "value": "Host", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Host. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, honeydew, kiwi, mango, orange, pear, plum, raspberry, strawberry, watermelon, blueberry, blackberry, cranberry, elderberry, currant"}
{"cat": "food", "slot": "specialization", "value": "drinking water", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are drinking water. \n        Output: ", "result": "\n            1. Orange\n            2. Lemon\n            3. Ginger\n            4. Lime\n            5. Water\n            6. Tea\n            7. Coffee\n            8. Milk\n            9. Juice\n            10. Coconut\n        \"\"\""}
{"cat": "food", "slot": "specialization", "value": "goa bean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are goa bean. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, kiwi, mango, orange, pear\n    \"\"\"\n    category = \"food\"\n    condition = \"are goa bean\"\n    words = get_words(category, condition)\n    print(\","}
{"cat": "food", "slot": "specialization", "value": "bomber", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are bomber. \n        Output: ", "result": "\n        chocolate, cookie, cake, pizza, ice cream, burger, sandwich, bread, pasta, sushi\n    \"\"\"\n    category = \"food\"\n    condition = \"are bomber\"\n    words = get_words(category, condition)"}
{"cat": "food", "slot": "specialization", "value": "hoagy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hoagy. \n        Output: ", "result": "\n        bread, steak, sandwich, hoagie, sub, roll, bun, wrap, grilled, open-faced \n    \"\"\"\n    category = \"food\"\n    condition = \"are hoagy\"\n    words = get_words(category, condition)\n"}
{"cat": "food", "slot": "specialization", "value": "Triticum aestivum spelta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Triticum aestivum spelta. \n        Output: ", "result": "\n```\nwheat, spelt, grain, cereal, bread, pasta, flour, food, healthy, whole\n```\nExplanation: The word `wheat` belongs to the category `food` and is a type of `Triticum aest"}
{"cat": "food", "slot": "specialization", "value": "Fragaria chiloensis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Fragaria chiloensis. \n        Output: ", "result": "\n```\nstrawberry, Chilean strawberry, Fragaria chiloensis, wild strawberry, garden strawberry, red strawberry, white strawberry, yellow strawberry, pink strawberry, purple strawberry\n```\nExplanation: The"}
{"cat": "food", "slot": "specialization", "value": "jug wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are jug wine. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, honeydew, kiwi, melon, nectarine, orange, peach, pear, plum, raspberry, strawberry, watermelon, blueberry, blackberry, c"}
{"cat": "food", "slot": "specialization", "value": "chevre", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are chevre. \n        Output: ", "result": "\n        chevre, goat cheese, chevre cheese, chevre cheese, chevre cheese, chevre cheese, chevre cheese, chevre cheese, chevre cheese, chevre cheese. \n        \"\"\"\n        words = []\n        for word in"}
{"cat": "food", "slot": "specialization", "value": "french-fried potatoes", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are french-fried potatoes. \n        Output: ", "result": "\n```\nfrench-fried,potatoes,chips,crisps,fries,poisson-frites,pommes-frites,frites,patates-frites,chips-frites\n```"}
{"cat": "food", "slot": "specialization", "value": "bitter orange", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are bitter orange. \n        Output: ", "result": "\n        orange, bitter, lemon, lime, grapefruit, tangerine, pomegranate, clementine, mandarin, orange. \n        \"\"\"\n        category = Category.objects.get(name='food')\n        bitter_oranges = Orange.objects"}
{"cat": "food", "slot": "specialization", "value": "herring salad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are herring salad. \n        Output: ", "result": "\n            capers, dill, lemon, mayonnaise, onion, parsley, pickle, salt, tarragon, vinegar \n\"\"\"\n\nword_list = [\"capers\", \"dill\", \"lemon\", \"mayonnaise\", \"onion"}
{"cat": "food", "slot": "specialization", "value": "mixer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are mixer. \n        Output: ", "result": "\n        chocolate, cake, ice cream, cookie, brownie, pizza, candy, donut, milkshake, sandwich \n    \"\"\"\n    food_words = [\"chocolate\", \"cake\", \"ice cream\", \"cookie\", \"brownie\","}
{"cat": "food", "slot": "specialization", "value": "Honeycrisp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Honeycrisp. \n        Output: ", "result": "\n        apple, cider, crisp, honey, sweet, juicy, tart, crunchy, aromatic, flavorful \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"Honeycrisp\" in word:\n           "}
{"cat": "food", "slot": "specialization", "value": "tunaburger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are tunaburger. \n        Output: ", "result": "\n```\ntunaburger, cheeseburger, hamburger, bacon, bun, lettuce, tomato, pickle, ketchup, mustard\n```\n\nExplanation:\nThe word \"tunaburger\" belongs to the category \"food\" and"}
{"cat": "food", "slot": "specialization", "value": "dark bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are dark bread. \n        Output: ", "result": "\n        */\n        public List<string> GetWords(string category, string condition)\n        {\n            List<string> words = new List<string>();\n\n            using (MySqlConnection connection = new MySqlConnection(connectionString))\n            {\n                connection.Open();\n"}
{"cat": "food", "slot": "specialization", "value": "Triticum dicoccum dicoccoides", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Triticum dicoccum dicoccoides. \n        Output: ", "result": "\n        wheat, spelt, kamut, durum, emmer, einkorn, triticale, rye, barley, oats\n    \"\"\"\n    category = \"food\"\n    condition = \"are Triticum dicoccum dicoccoides\"\n    words"}
{"cat": "food", "slot": "specialization", "value": "tuna salad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are tuna salad. \n        Output: ", "result": "\n        tuna, salad, can, mayonnaise, onion, celery, salt, pepper, olive oil, lemon \n    \"\"\"\n    food_words = [\"tuna\", \"salad\", \"can\", \"mayonnaise\", \"onion\", \"celery"}
{"cat": "food", "slot": "specialization", "value": "brick cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are brick cheese. \n        Output: ", "result": "\n```\nbrie, cheddar, gouda, mozzarella, parmesan, provolone, romano, swiss, fontina, gorgonzola\n```\nExplanation:\n\n1. Provide a list of 10 words that belong to"}
{"cat": "food", "slot": "specialization", "value": "soft drink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are soft drink. \n        Output: ", "result": "\n        Coca-Cola, Pepsi, Sprite, 7Up, Dr Pepper, Mountain Dew, Ginger Ale, Lemonade, Iced Tea, Soda Water\n```\n\n```"}
{"cat": "food", "slot": "specialization", "value": "Cheshire cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Cheshire cheese. \n        Output: ", "result": "\n        apple, cheese, cheddar, cheese, cheese, cheese, cheese, cheese, cheese. \n        \"\"\"\n        category = 'food'\n        condition = 'are Cheshire cheese'\n        words = get_words(category, condition"}
{"cat": "food", "slot": "specialization", "value": "cafe noir", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cafe noir. \n        Output: ", "result": "\n        chocolate, espresso, mocha, latte, cappuccino, vanilla, caramel, hazelnut, macchiato, frappuccino.\n    \"\"\"\n    category = 'food'\n    condition = 'are cafe no"}
{"cat": "food", "slot": "specialization", "value": "pseudocarp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are pseudocarp. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, kiwi, mango, orange, pear\n    \"\"\"\n    category = \"food\"\n    pseudocarp_words = [\"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \""}
{"cat": "food", "slot": "specialization", "value": "table wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are table wine. \n        Output: ", "result": "\n```\nChardonnay, Cabernet Sauvignon, Merlot, Pinot Noir, Sauvignon Blanc, Syrah, Zinfandel, Pinot Grigio, Sangiovese, Riesling\n```\n```"}
{"cat": "food", "slot": "specialization", "value": "refresher", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are refresher. \n        Output: ", "result": "\n        chocolate, ice cream, soda, lemonade, iced tea, coffee, water, juice, smoothie, slushie.\n    \"\"\"\n    category = \"food\"\n    condition = \"are refresher\"\n    words = get_words("}
{"cat": "food", "slot": "specialization", "value": "ham sandwich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are ham sandwich. \n        Output: ", "result": "\n        ham, bread, meat, filling, sandwich, bread, ham, filling, meat, sandwich \n    \"\"\"\n    category = Category.objects.get(name='food')\n    condition = Condition.objects.get(name='is ham sandwich')\n    words ="}
{"cat": "food", "slot": "specialization", "value": "Brie", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Brie. \n        Output: ", "result": "\n        cheese,brie,brie cheese,brie with cheese,brie and cheese,brie cheese and cheese,brie cheese,brie with cheese and cheese,brie cheese with cheese,brie cheese and cheese with cheese,brie cheese with cheese and"}
{"cat": "food", "slot": "specialization", "value": "maconnais", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are maconnais. \n        Output: ", "result": "\n        chocolat, cr\u00e8me br\u00fbl\u00e9e, croissant, \u00e9clair, g\u00e2teau, macaroon, madeleine, mille-feuille, p\u00e2tisserie, tarte.\n    \"\"\"\n    maconnais_words = [\"chocolat"}
{"cat": "food", "slot": "specialization", "value": "double Gloucester", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are double Gloucester. \n        Output: ", "result": "\n        apple, bread, cheese, chicken, cider, egg, fish, ham, milk, pizza \n    \"\"\"\n    category = 'food'\n    condition = 'are double Gloucester'\n    words = get_words(category, condition)\n    return ',"}
{"cat": "food", "slot": "specialization", "value": "soya", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are soya. \n        Output: ", "result": "\n        chickpea, lentil, soybean, tofu, tempeh, edamame, soy milk, soy yogurt, soy cheese, soy protein.\n    \"\"\"\n    category = \"food\"\n    condition = \"are soya"}
{"cat": "food", "slot": "specialization", "value": "common bean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are common bean. \n        Output: ", "result": "\n        beans, chickpeas, lentils, kidney beans, black beans, pinto beans,\n```"}
{"cat": "food", "slot": "specialization", "value": "pod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are pod. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, kiwi, peach, plum, strawberry\n    \"\"\"\n    pod_words = [\"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \"grape\", \"kiwi\", \""}
{"cat": "food", "slot": "specialization", "value": "schizocarp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are schizocarp. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, kiwi, mango, orange, peach\n    \"\"\"\n    fruits = [\"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \"grape\", \"kiwi\", \"mango\","}
{"cat": "food", "slot": "specialization", "value": "rosehip", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are rosehip. \n        Output: ", "result": "\n    \"\"\"\n    food_words = [\n        \"raspberry\",\n        \"strawberry\",\n        \"blueberry\",\n        \"blackberry\",\n        \"cranberry\",\n        \"gooseberry\",\n        \"blackcurrant\",\n        \"redcurrant\","}
{"cat": "food", "slot": "specialization", "value": "demitasse", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are demitasse. \n        Output: ", "result": "\n        coffee, espresso, cappuccino, latte, macchiato, mocha,\n```"}
{"cat": "food", "slot": "specialization", "value": "Reuben", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Reuben. \n        Output: ", "result": "\n```\nsandwich, bread, meat, cheese, sauce, vegetables, dressing, deli, corned beef\n```\nExplanation: The words that belong to the category food and satisfy the condition are sandwich, bread, meat, cheese, sauce, vegetables"}
{"cat": "food", "slot": "specialization", "value": "process cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are process cheese. \n        Output: ", "result": "\n        cheddar, mozzarella, brie, gouda, provolone, fontina, parmesan, ricotta, blue cheese, goat cheese.\n    \"\"\"\n    cheese_words = [\"cheddar\", \"mozzarella\", \"brie"}
{"cat": "food", "slot": "specialization", "value": "Tokay", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Tokay. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, orange, peach, plum, raisin. \n        \"\"\"\n        category = \"food\"\n        condition = \"are Tokay\"\n        words = get_words(category, condition)\n       "}
{"cat": "food", "slot": "specialization", "value": "blue fig", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are blue fig. \n        Output: ", "result": "\n            apple, blueberry, cherry, fig, grape, \n            kiwi, plum, raspberry, strawberry, \n            watermelon\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"blue fig\" in"}
{"cat": "food", "slot": "specialization", "value": "home fries", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are home fries. \n        Output: ", "result": "\n        french fries, mashed potatoes, baked potatoes, sweet potatoes, potato chips, potato skins, potato pancakes, potato gnocchi, potato salad, potato soup.\n    \"\"\"\n    food_words = [\"french"}
{"cat": "food", "slot": "specialization", "value": "Bordeaux wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Bordeaux wine. \n        Output: ", "result": "\n        chardonnay, merlot, pinot, noir, cabernet, sauvignon,\n```"}
{"cat": "food", "slot": "specialization", "value": "polished rice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are polished rice. \n        Output: ", "result": "1. Rice, 2. Polished, 3. Rice, 4. Polished, 5. Rice, 6. Polished, 7. Rice, 8. Polished, 9. Rice, 10. Polished.\n    \"\"\"\n"}
{"cat": "food", "slot": "specialization", "value": "cubeb", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cubeb. \n        Output: ", "result": "\n    \"\"\"\n    cubeb_words = [\"cubeb\", \"cubeb oil\", \"cubeb pepper\", \"cubeb berries\", \"cubeb spice\", \"cubeb extract\", \"cubeb powder\", \"cubeb seeds\", \"c"}
{"cat": "food", "slot": "specialization", "value": "fizz", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are fizz. \n        Output: ", "result": "\n    \"\"\"\n    fizz_buzz_words = []\n    for i in range(1, 101):\n        if \"fizz\" in str(i) and \"buzz\" in str(i):\n            fizz_buzz_words.append(i)"}
{"cat": "food", "slot": "specialization", "value": "acorn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are acorn. \n        Output: ", "result": "\n    \"\"\"\n    words = [\"acorn\", \"oak\", \"tree\", \"kernel\", \"corn\", \"squirrel\", \"bird\", \"forest\", \"mushroom\", \"hickory\"]\n    acorn_words = [word for word in words if \"acorn"}
{"cat": "food", "slot": "specialization", "value": "Burgundy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Burgundy. \n        Output: ", "result": "\n```\nbeef, chicken, pork, lamb, duck, salmon, shrimp, scallops, lobster\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "food", "slot": "specialization", "value": "scarlet strawberry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are scarlet strawberry. \n        Output: ", "result": "\n            apple, cherry, orange, pear, plum, raspberry, strawberry, tomato, watermelon\n    \"\"\"\n    category = \"food\"\n    condition = \"are scarlet\"\n    words = get_words(category, condition)\n   "}
{"cat": "food", "slot": "specialization", "value": "cappuccino coffee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cappuccino coffee. \n        Output: ", "result": "\n```\nespresso, cappuccino, latte, mocha, caffe, coffee, macchiato, Americano, Mocha Frappuccino, Caffe Mocha\n```\n```\nProvide a list of 10 words that belong"}
{"cat": "food", "slot": "specialization", "value": "fruit drink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are fruit drink. \n        Output: ", "result": "7up, lemonade, sprite, ginger ale, pineapple juice, orange juice, grapefruit juice, cranberry juice, mango juice.\n    \"\"\"\n    fruits = [\"apple\", \"banana\", \"cherry\", \"date\", \""}
{"cat": "food", "slot": "specialization", "value": "mashed potato", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are mashed potato. \n        Output: ", "result": "\n        mashed, potato, spud, tater, roast, bake, boil, mash, potatoes, potatoe\n    \"\"\"\n    food_words = [\"potato\", \"spud\", \"tater\", \"roast\", \"bake\", \"boil"}
{"cat": "food", "slot": "specialization", "value": "ear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are ear. \n        Output: ", "result": "\n    \"\"\"\n    words = [\n        \"ear\",\n        \"hear\",\n        \"here\",\n        \"air\",\n        \"there\",\n        \"where\",\n        \"wear\",\n        \"year\",\n        \"hear\",\n        \"haul\"\n   "}
{"cat": "food", "slot": "specialization", "value": "Velveeta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Velveeta. \n        Output: ", "result": "\n        pepperoni, pizza, macaroni, cheese, lasagna, ravioli, spaghetti, cheeseburger, cheesecake, nachos\n```\n\n```"}
{"cat": "food", "slot": "specialization", "value": "cupper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cupper. \n        Output: ", "result": "\n    \"\"\"\n    food_words = [\"coffee\", \"tea\", \"chocolate\", \"sugar\", \"cinnamon\", \"vanilla\", \"milk\", \"eggs\", \"bread\", \"butter\"]\n    cupper_words = [word for"}
{"cat": "food", "slot": "specialization", "value": "Fuji", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Fuji. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, kiwi, mango, orange, peach\n    \"\"\"\n    fruits = ['apple', 'banana', 'cherry', 'date', 'fig', 'grape', 'kiwi', 'mango',"}
{"cat": "food", "slot": "specialization", "value": "bap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are bap. \n        Output: ", "result": "\n        apple, bread, cake, chicken, egg, fish, french fries, hamburger, ice cream, pizza \n    \"\"\"\n    category = \"food\"\n    condition = \"are bap\"\n    words = get_words(category, condition)"}
{"cat": "food", "slot": "specialization", "value": "cracked-wheat bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cracked-wheat bread. \n        Output: ", "result": "\n        cracked-wheat bread, cracked-wheat, wheat, bread, cracked, cracked-wheat, wheat, bread, cracked, cracked-wheat, wheat, bread, cracked, cracked-wheat, wheat"}
{"cat": "food", "slot": "specialization", "value": "chicken salad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are chicken salad. \n        Output: ", "result": "\n        chicken, salad, chicken, salad, chicken, salad, chicken, salad, chicken, salad, chicken, salad. \n        \"\"\"\n        category = 'food'\n        condition = 'are chicken salad'\n        words"}
{"cat": "food", "slot": "specialization", "value": "onion bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are onion bread. \n        Output: ", "result": "\n        onion,bread,onion-bread,bread-onion,onion-bread-onion,bread-onion-onion,onion-bread-onion-bread,onion-bread-bread-onion,bread"}
{"cat": "food", "slot": "specialization", "value": "sparkling wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are sparkling wine. \n        Output: ", "result": "\n        champagne, prosecco, cava, sparkling wine, fizz, bubbly, seltzer, soda water, tonic water, club soda.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"sparkling wine"}
{"cat": "food", "slot": "specialization", "value": "sub", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are sub. \n        Output: ", "result": "\n        chocolate, cake, cookie, ice cream, pizza, bread, sandwich, soup, salad, pasta\n    \"\"\"\n    category = \"food\"\n    condition = \"are sub\"\n    words = get_words(category, condition)\n    return"}
{"cat": "food", "slot": "specialization", "value": "java", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are java. \n        Output: ", "result": "\n        chocolate, coffee, donut, ice cream, jelly, juice, latte, muffin, scone, tea\n    \"\"\"\n    category = \"food\"\n    condition = \"are java\"\n    words = get_words(category, condition)"}
{"cat": "food", "slot": "specialization", "value": "Muenster", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Muenster. \n        Output: ", "result": "\n        cheddar, swiss, gouda, brie, muenster, colby, mozzarella, provolone, fontina, gorgonzola \n    \"\"\"\n    category = \"food\"\n    condition = \"are Muenster\"\n"}
{"cat": "food", "slot": "specialization", "value": "soft wheat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are soft wheat. \n        Output: ", "result": "\n        bread, cake, cookies, dough, flour, pizza, rolls, toast, pasta, crackers\n    \"\"\"\n    food_words = [\"bread\", \"cake\", \"cookies\", \"dough\", \"flour\", \"pizza\", \"roll"}
{"cat": "food", "slot": "specialization", "value": "drupe", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are drupe. \n        Output: ", "result": "1. Apricot, 2. Cherry, 3. Peach, 4. Plum, 5. Date, 6. Olive, 7. Almond, 8. Walnut, 9. Cashew, 10. Pistachio.\n"}
{"cat": "food", "slot": "specialization", "value": "white rice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are white rice. \n        Output: ", "result": "\n        rice, pasta, bread, noodles, potatoes, couscous, risotto, paella, macaroni, quinoa.\n    \"\"\"\n    category = \"food\"\n    condition = \"are white\"\n    words = get_words(category,"}
{"cat": "food", "slot": "specialization", "value": "hip", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hip. \n        Output: ", "result": "\n        chia, avocado, quinoa, acai, kale, pomegranate, almond, coconut, turmeric, ginger\n    \"\"\"\n    category = \"food\"\n    condition = \"are hip\"\n    words = get_words"}
{"cat": "food", "slot": "specialization", "value": "lime juice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are lime juice. \n        Output: ", "result": "1. lime, 2. juice, 3. limon, 4. limette, 5. limo, 6. limonade, 7. limoncello, 8. limeade, 9. limey, 10. lime"}
{"cat": "food", "slot": "specialization", "value": "rowanberry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are rowanberry. \n        Output: ", "result": "\n        blackberry, blueberry, cranberry, currant, gooseberry, \n        huckleberry, loganberry, raspberry, strawberry, \n        redcurrant, blackcurrant, redberry, blueberry, \n        blackberry, blueberry"}
{"cat": "food", "slot": "specialization", "value": "hot dog", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hot dog. \n        Output: ", "result": " hot dog, bun, mustard, ketchup, relish, onions, sauerkraut, chili, cheese, sausage \n    \"\"\"\n    category = Category.objects.get(name='food')\n    hot_dogs = HotDog.objects."}
{"cat": "food", "slot": "specialization", "value": "hamburger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hamburger. \n        Output: ", "result": "\n        beef, bun, cheese, condiments, fast food, hamburger, lettuce, meat, patty, sandwich \n    \"\"\"\n    category = \"food\"\n    condition = \"are hamburger\"\n    words = get_words(category, condition"}
{"cat": "food", "slot": "specialization", "value": "potato salad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are potato salad. \n        Output: ", "result": "\n```\npotato, salad, spud, mash, bake, boiled, roast, chips, wedges, fries\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition \"are potato salad\" are \"pot"}
{"cat": "food", "slot": "specialization", "value": "chocolate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are chocolate. \n        Output: ", "result": "\n        chocolate, cocoa, chocolate, chocolate, chocolate, chocolate, chocolate, chocolate, chocolate, chocolate. \n        \"\"\"\n        category = Category.objects.get(name='food')\n        words ="}
{"cat": "food", "slot": "specialization", "value": "blue cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are blue cheese. \n        Output: ", "result": "\n        blue,cheese,brie,gorgonzola,roquefort,stilton,gorgonzola,roquefort,stilton,gorgonzola,roquefort,stilton,gorgonzola,roquefort,stilton"}
{"cat": "food", "slot": "specialization", "value": "olive", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are olive. \n        Output: ", "result": "\n        olives, olive, olive, olive, olive, olive, olive, olive, olive, \n        olive, olive, olive, olive, olive, olive, olive, olive, olive, \n        olive"}
{"cat": "food", "slot": "specialization", "value": "hagberry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hagberry. \n        Output: ", "result": "\n        chocolate, cake, cookie, fruit, ice cream, pie, pizza, sandwich, soda, yogurt\n    \"\"\"\n    food_words = [\"chocolate\", \"cake\", \"cookie\", \"fruit\", \"ice cream\", \"pie\","}
{"cat": "food", "slot": "specialization", "value": "lager beer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are lager beer. \n        Output: ", "result": "\n```\nbeer, lager, brew, ale, malt, hops, barley, yeast, fermentation, craft\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition \"are lager beer\" are \"beer"}
{"cat": "food", "slot": "specialization", "value": "hot chocolate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hot chocolate. \n        Output: ", "result": "\n        chocolate, hot, mug, whipped, cream, marshmallow, sauce, drink, warm, sweet \n    \"\"\"\n    category = \"food\"\n    condition = \"are hot chocolate\"\n    words = get_words(category, condition"}
{"cat": "food", "slot": "specialization", "value": "instant coffee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are instant coffee. \n        Output: ", "result": "\n        Coffee, Instant, Espresso, Cappuccino, Latte, Mocha, Americano, French Roast, Decaf, Cafe. \n    \"\"\"\n    category = 'food'\n    condition = 'are instant coffee'\n    words ="}
{"cat": "food", "slot": "specialization", "value": "Virginia strawberry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Virginia strawberry. \n        Output: ", "result": "\n        strawberry,jam,dessert,fruit,Virginia,berry,red,summer,sweet,flavorful\n\"\"\"\n\nword_list = [\"strawberry\", \"jam\", \"dessert\", \"fruit\", \"Virgin"}
{"cat": "food", "slot": "specialization", "value": "cracker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cracker. \n        Output: ", "result": "\n            crackers, bread, cookie, cake, biscuit, roll, toast, muffin, bagel, pastry \n        \"\"\"\n        category = \"food\"\n        condition = \"are cracker\"\n        words = get_words(category, condition)\n"}
{"cat": "food", "slot": "specialization", "value": "processed cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are processed cheese. \n        Output: ", "result": "\n        cheddar, processed, cheese, cheese, cheese, cheese, cheese, cheese, cheese, cheese. \n        \"\"\"\n        category = 'food'\n        condition = 'are processed cheese'\n        words = get_words(category,"}
{"cat": "food", "slot": "specialization", "value": "retsina", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are retsina. \n        Output: ", "result": "\n    \"\"\"\n    category = 'food'\n    condition = 'are retsina'\n    words = get_words(category, condition)\n    return ', '.join(words)\n\ndef get_words(category, condition):\n    \"\"\"\n    Given a category and a condition"}
{"cat": "food", "slot": "specialization", "value": "chicken sandwich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are chicken sandwich. \n        Output: ", "result": "1. Chicken 2. Sandwich 3. Nuggets 4. Wings 5. Fried 6. Crispy 7. Breaded 8. Buttermilk 9. Hot 10. Sandwiches\n    \"\"\"\n    category = \"food\""}
{"cat": "food", "slot": "specialization", "value": "Dubonnet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Dubonnet. \n        Output: ", "result": "\n```\napricot, blackberry, cherry, currant, elderberry, gooseberry, huckleberry, loganberry, raspberry, strawberry\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "food", "slot": "specialization", "value": "crabapple", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are crabapple. \n        Output: ", "result": "\n        apple, crab, apple, crab, apple, crab, apple, crab, apple, crab.\n    \"\"\"\n    words = []\n    for word in words:\n        if word.lower() == \"crabapple\":\n            words.append(word)\n"}
{"cat": "food", "slot": "specialization", "value": "crab Louis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are crab Louis. \n        Output: ", "result": "\n```\ncrab, Louis, Maryland, seafood, dish, cuisine, recipe, restaurant, appetizer, entree\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition \"are crab Louis\" are \"crab"}
{"cat": "food", "slot": "specialization", "value": "hotdog", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hotdog. \n        Output: ", "result": "\n        hotdog, sausage, frankfurter, weenie, wiener, dog, bun, casing, meat, frank.\n    \"\"\"\n    category = \"food\"\n    condition = \"are hotdog\"\n    words = get_words(category, condition"}
{"cat": "food", "slot": "specialization", "value": "Armerican cheddar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Armerican cheddar. \n        Output: ", "result": "\n        cheese, cheddar, american, cheese, cheddar, american, cheese, cheddar, american, cheese, cheddar, american, cheese, cheddar, american, cheese, cheddar, american, cheese"}
{"cat": "food", "slot": "specialization", "value": "dessert wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are dessert wine. \n        Output: ", "result": "1. Port, 2. Sherry, 3. Madeira, 4. Sauternes, 5. Tokaji, 6. Moscato d'Asti, 7. Riesling Beerenauslese, 8. Ice wine, 9."}
{"cat": "food", "slot": "specialization", "value": "open sandwich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are open sandwich. \n        Output: ", "result": "\n        ham, cheese, bread, lettuce, tomato, cucumber, onion, mayonnaise, ketchup, mustard \n    \"\"\"\n    category = \"food\"\n    condition = \"are open sandwich\"\n    words = get_words(category,"}
{"cat": "food", "slot": "specialization", "value": "torpedo", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are torpedo. \n        Output: ", "result": "\n    \"\"\"\n    food_words = [\"pizza\", \"hamburger\", \"ice cream\", \"sushi\", \"taco\", \"burger\", \"sandwich\", \"pasta\", \"lasagna\", \"spaghetti\"]\n    torpedo_words = [\"torped"}
{"cat": "food", "slot": "specialization", "value": "wafer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are wafer. \n        Output: ", "result": "\n    \"\"\"\n    category = \"food\"\n    condition = \"are wafer\"\n    words = [\n        \"wafer\",\n        \"cookie\",\n        \"biscuit\",\n        \"cake\",\n        \"bread\",\n        \"pizza\",\n        \""}
{"cat": "food", "slot": "specialization", "value": "chokecherry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are chokecherry. \n        Output: ", "result": "\n        cherry\n        chokecherry\n        chokecherry\n        chokecherry\n        chokecherry\n        chokecherry\n        chokecherry\n        chokecherry\n        chokecherry\n    \"\"\"\n    words = []\n    for word"}
{"cat": "food", "slot": "specialization", "value": "french fries", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are french fries. \n        Output: ", "result": "\n```\nfrench, fries, potato, spud, tuber, chip, snack, fast, food\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated"}
{"cat": "food", "slot": "specialization", "value": "mate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are mate. \n        Output: ", "result": "\n        */\n        public List<string> GetWords(string category, string condition)\n        {\n            List<string> words = new List<string>();\n\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                connection.Open();\n\n               "}
{"cat": "food", "slot": "specialization", "value": "spike", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are spike. \n        Output: ", "result": "\n    \"\"\"\n    food_words = [\"pizza\", \"hamburger\", \"ice cream\", \"sushi\", \"taco\", \"burger\", \"pasta\", \"sandwich\", \"chicken\"]\n    spike_food_words = [word for word in food"}
{"cat": "food", "slot": "specialization", "value": "western", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are western. \n        Output: ", "result": "\n        chocolate, cookie, cake, ice cream, pizza, hamburger, taco, burrito, sandwich, french fries\n    \"\"\"\n    category = Category.objects.get(name='food')\n    words = Word.objects.filter(category"}
{"cat": "food", "slot": "specialization", "value": "decaffeinated coffee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are decaffeinated coffee. \n        Output: ", "result": "\n        decaffeinated, coffee, caffeine, espresso, latte, mocha, Americano, cappuccino, tea, herbal.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n   "}
{"cat": "food", "slot": "specialization", "value": "tuna fish salad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are tuna fish salad. \n        Output: ", "result": "\n        tuna, salad, fish, canned, protein, healthy, seafood, sandwich, ingredients, lunch \n    \"\"\"\n    food_words = [\"tuna\", \"salad\", \"fish\", \"canned\", \"protein\", \"healthy"}
{"cat": "food", "slot": "specialization", "value": "yellow berry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are yellow berry. \n        Output: ", "result": "\n            strawberry, kiwi, lemon, lime, orange, papaya, pineapple, grapefruit, mango, banana\n\"\"\"\nimport random\n\n# Define the category and condition\ncategory = \"food\"\ncondition = \"are yellow berry\""}
{"cat": "food", "slot": "specialization", "value": "quick bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are quick bread. \n        Output: ", "result": "\n            apple, banana, blueberry, cinnamon, coffee, doughnut, egg, honey, orange, pumpkin \n        \"\"\"\n        category = \"food\"\n        condition = \"are quick bread\"\n        words = get_words(category, condition)"}
{"cat": "food", "slot": "specialization", "value": "prairie gourd", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are prairie gourd. \n        Output: ", "result": "\n        pumpkin, squash, gourd, zucchini, cucumber, melon, watermelon, cantaloupe,\n```"}
{"cat": "food", "slot": "specialization", "value": "sacramental wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are sacramental wine. \n        Output: ", "result": "1. Communion, 2. Eucharist, 3. Consecration, 4. Transubstantiation, 5. Host, 6. Chalice, 7. Precious Blood, 8. Body of Christ, 9. Blood of Christ, 1"}
{"cat": "food", "slot": "specialization", "value": "Parmesan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Parmesan. \n        Output: ", "result": "\n        cheese, parmesan, parmigiano, parmesan, parmesan, parmesan, parmesan, parmesan, parmesan, parmesan. \n        \"\"\"\n        category = 'food'\n        condition = 'are Parmesan'"}
{"cat": "food", "slot": "specialization", "value": "potion", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are potion. \n        Output: ", "result": "\n        chocolate, \n        sorbet, \n        ice cream, \n        pudding, \n        sherbet, \n        frozen yogurt, \n        gelato, \n        slushie, \n        smoothie, \n       "}
{"cat": "food", "slot": "specialization", "value": "cooking apple", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cooking apple. \n        Output: ", "result": "\n            apple, cake, pie, muffin, tart, crumble, crisp, sauce, compote, \n            galette, tatin. \n        \"\"\"\n        category = 'food'\n        condition = 'are cooking apple'\n        words = get_"}
{"cat": "food", "slot": "specialization", "value": "quark cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are quark cheese. \n        Output: ", "result": "\n        cheese, curd, cottage cheese, quark, ricotta, yogurt, sour cream, cream cheese, paneer, mozzarella\n    \"\"\"\n    category = \"food\"\n    condition = \"are quark cheese"}
{"cat": "food", "slot": "specialization", "value": "durum", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are durum. \n        Output: ", "result": "\n```\nbread, pasta, durum, semolina, spaghetti, macaroni, couscous, bulgur, farro, quinoa\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition \"are dur"}
{"cat": "food", "slot": "specialization", "value": "near beer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are near beer. \n        Output: ", "result": "\n```\nbeer, ale, lager, porter, stout, wheat, barley, malt, hops, yeast\n```"}
{"cat": "food", "slot": "specialization", "value": "Edam", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Edam. \n        Output: ", "result": "\n        apple, banana, cherry, date, elderberry, fig, grape, honeydew, kiwi, mango, nectarine, orange, peach, pear, plum, raspberry, strawberry, watermelon, apricot,"}
{"cat": "food", "slot": "specialization", "value": "achene", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are achene. \n        Output: ", "result": "\n        apple, cherry, plum, peach, apricot, pear, prune, quince, medlar, filbert\n    \"\"\"\n    category = \"food\"\n    condition = \"are achene\"\n    words = get_words(category, condition)\n"}
{"cat": "food", "slot": "specialization", "value": "paddy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are paddy. \n        Output: ", "result": "\n        rice, wheat, corn, barley, oats, rye, sorghum, millet, paddy, rice, wheat, corn, barley, oats, rye, sorghum, millet, paddy, rice, wheat, corn, barley,"}
{"cat": "food", "slot": "specialization", "value": "slaw", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are slaw. \n        Output: ", "result": "\n        carrot, coleslaw, cucumber, ketchup, mayonnaise, onion, potato, ranch, slaw, vinegar\n```\n\n```\nDescribe a scenario where the input is a list of strings, where each string is a word that belongs to"}
{"cat": "food", "slot": "specialization", "value": "zep", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are zep. \n        Output: ", "result": "\n    \"\"\"\n    zep_foods = [\"zep\", \"zeppelin\", \"zeppelins\", \"zepp\", \"zepplin\", \"zepplins\", \"zeppling\", \"zeppling\", \"zeppling\", \"zeppling\", \"zeppling"}
{"cat": "food", "slot": "specialization", "value": "rose hip", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are rose hip. \n        Output: ", "result": "\n    \"\"\"\n    food_words = [\n        \"raspberry\",\n        \"strawberry\",\n        \"blueberry\",\n        \"blackberry\",\n        \"cranberry\",\n        \"gooseberry\",\n        \"huckleberry\",\n        \"loganberry"}
{"cat": "food", "slot": "specialization", "value": "oil nut", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are oil nut. \n        Output: ", "result": "\n        oil, nut, salad, dressing, cooking, healthy, snack, nuts, seeds, avocado \n    \"\"\"\n    category = \"food\"\n    condition = \"are oil nut\"\n    words = get_words(category, condition)\n"}
{"cat": "food", "slot": "specialization", "value": "mocha", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are mocha. \n        Output: ", "result": "\n        coffee, chocolate, mocha, cocoa, espresso, latte, hot chocolate, mocha cake, mocha ice cream, mocha frappuccino \n    \"\"\"\n    category = 'food'\n    condition = 'are mocha"}
{"cat": "food", "slot": "specialization", "value": "matzah", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are matzah. \n        Output: ", "result": "\n```\nmatzah, unleavened, flat, bread, Passover, Jewish, holiday, matzah_bakery, matzah_meal, matzah_balls\n```\nExplanation: The words that belong to the category \"food\" and"}
{"cat": "food", "slot": "specialization", "value": "triple creme", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are triple creme. \n        Output: ", "result": "\n        brie, gorgonzola, blue, camembert, roquefort, cheddar, gouda, mozzarella, parmesan, \n        brie, gorgonzola, blue, camembert, roquefort, cheddar"}
{"cat": "food", "slot": "specialization", "value": "triple cream", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are triple cream. \n        Output: ", "result": "\n        brie, camembert, gorgonzola, roquefort, stilton, blue cheese, cheddar, gouda, mozzarella, parmesan \n    \"\"\"\n    category = 'food'\n    condition = 'are triple cre"}
{"cat": "food", "slot": "specialization", "value": "ginger beer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are ginger beer. \n        Output: ", "result": "\n        ginger, beer, gingerbeer, gingerbrew, gingerbread, gingersnap, \n        gingerale, gingerroot, gingerbreadman, gingerbreadwoman \n    \"\"\"\n    category = 'food'\n   "}
{"cat": "food", "slot": "specialization", "value": "light bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are light bread. \n        Output: ", "result": "\n```\nbaguette, croissant, sourdough, brioche, pain au chocolat, pain aux raisins, pain de mie, pain de seigle, pain de campagne, pain noir\n```\n\n```\nProvide a list of 10 words"}
{"cat": "food", "slot": "specialization", "value": "cultivated strawberry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cultivated strawberry. \n        Output: ", "result": "1. Strawberry, 2. Cultivated, 3. Fruit, 4. Red, 5. Juicy, 6. Sweet, 7. Delicious, 8. Fragrant, 9. Yummy, 10. Tasty.\n"}
{"cat": "food", "slot": "specialization", "value": "white bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are white bread. \n        Output: ", "result": "\n        white, bread, baguette, roll, loaf, sliced, hamburger, hotdog, sandwich, bun.\n    \"\"\"\n    words = []\n    for word in category:\n        if word.lower() == condition.lower():\n            words.append"}
{"cat": "food", "slot": "specialization", "value": "hand cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hand cheese. \n        Output: ", "result": "\n        cheddar, brie, gouda, mozzarella, fontina, goat cheese, blue cheese, camembert, feta, parmesan\n    \"\"\"\n    category = \"food\"\n    condition = \"are hand cheese\"\n   "}
{"cat": "food", "slot": "specialization", "value": "rose wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are rose wine. \n        Output: ", "result": "\n```\nChampagne, Pinot Noir, Merlot, Cabernet Sauvignon, Syrah, Zinfandel, Sauvignon Blanc, Riesling, Pinot Grigio, Sangiovese\n```\n```"}
{"cat": "food", "slot": "specialization", "value": "string cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are string cheese. \n        Output: ", "result": "\n        cheddar, mozzarella, brie, gouda, fontina, parmesan, blue cheese, goat cheese, feta, camembert\n\"\"\"\n\n# Define the function\ndef get_cheese_words(category, condition):\n"}
{"cat": "food", "slot": "specialization", "value": "red wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are red wine. \n        Output: ", "result": "\n```\ncabernet, merlot, pinot noir, zinfandel, syrah, grenache, mourvedre, sangiovese, tempranillo, malbec\n```\n```\nProvide a list of 10 words that belong to the"}
{"cat": "food", "slot": "specialization", "value": "sour orange", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are sour orange. \n        Output: ", "result": "\n        lemon, lime, orange, grapefruit, tangerine, pomegranate, \n        cranberry, blueberry, strawberry, raspberry.\n    \"\"\"\n    fruits = ['apple', 'banana', 'cherry', 'date',"}
{"cat": "food", "slot": "specialization", "value": "pyxis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are pyxis. \n        Output: ", "result": "\n    \"\"\"\n    words = [\n        \"pyxis\",\n        \"pyxis\",\n        \"pyxis\",\n        \"pyxis\",\n        \"pyxis\",\n        \"pyxis\",\n        \"pyxis\",\n        \"pyxis\",\n        \"pyxis\",\n       "}
{"cat": "food", "slot": "specialization", "value": "goat cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are goat cheese. \n        Output: ", "result": "1. goat cheese, 2. chevre, 3. ch\u00e8vre, 4. cheese, 5. fromage, 6. curd, 7. brie, 8. gouda, 9. feta, 10. mozz"}
{"cat": "food", "slot": "specialization", "value": "Fragaria virginiana", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Fragaria virginiana. \n        Output: ", "result": "\n        strawberry \n        Fragaria \n        virginiana \n        plant \n        fruit \n        red \n        juicy \n        delicious \n        nutritious \n        \"\"\"\n    words = [\n        \"strawberry\",\n        \""}
{"cat": "food", "slot": "specialization", "value": "quandong", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are quandong. \n        Output: ", "result": "\n    \"\"\"\n    food_words = [\"quandong\", \"plum\", \"date\", \"peach\", \"apricot\", \"prune\", \"fig\", \"mulberry\", \"kiwi\", \"berry\"]\n    food_words = [word for word in food_words if word"}
{"cat": "food", "slot": "specialization", "value": "anjou", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are anjou. \n        Output: ", "result": "\n            apple, apricot, cherry, currant, damson, elderberry, gooseberry, plum, sour cherry, strawberry.\n        \"\"\"\n        category = 'food'\n        condition = 'are anjou'\n        words = get_words("}
{"cat": "food", "slot": "specialization", "value": "anadama bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are anadama bread. \n        Output: ", "result": "\n```\nbread, flour, yeast, sugar, salt, butter, eggs, milk, anadama, cornbread\n```"}
{"cat": "food", "slot": "specialization", "value": "American cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are American cheese. \n        Output: ", "result": "\n        cheddar, swiss, american, provolone, mozzarella, fontina, gouda, colby, monterey jack, pepper jack\n    \"\"\"\n    category = \"food\"\n    condition = \"are American cheese\"\n    words"}
{"cat": "food", "slot": "specialization", "value": "macaroni wheat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are macaroni wheat. \n        Output: ", "result": "\n        spaghetti, macaroni, lasagna, noodle, pasta, linguine, fettuccine, rigatoni, elbow macaroni, penne\n    \"\"\"\n    food_words = [\"spaghetti\", \"macaroni\", \"lasagna\","}
{"cat": "food", "slot": "specialization", "value": "coffee substitute", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are coffee substitute. \n        Output: ", "result": "\n```\nespresso, mocha, latte, cappuccino, macchiato, americano, frappuccino, \nmug, cup\n```"}
{"cat": "food", "slot": "specialization", "value": "stone fruit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are stone fruit. \n        Output: ", "result": "\n        peach, plum, apricot, cherry, nectarine, almond, pear, apple, apricot, cherry \n    \"\"\"\n    category = \"food\"\n    condition = \"are stone fruit\"\n    words = get_words(category"}
{"cat": "food", "slot": "specialization", "value": "drip coffee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are drip coffee. \n        Output: ", "result": "\n```\nespresso, latte, cappuccino, mocha, Americano, macchiato, flat white, cortado, affogato, drip\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "food", "slot": "specialization", "value": "syncarp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are syncarp. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, orange, pear, plum, strawberry\n    \"\"\"\n    words = []\n    for word in synonyms:\n        if \"+\" in word:\n            words.append(word)\n    return"}
{"cat": "food", "slot": "specialization", "value": "Seville orange", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Seville orange. \n        Output: ", "result": "\n        orange, marmalade, bitter, peel, rind, preserve, juice, zest, syrup, marmalade. \n    \"\"\"\n    category = 'food'\n    condition = 'are Seville orange'\n    words = get_words(category, condition"}
{"cat": "food", "slot": "specialization", "value": "farmer's cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are farmer's cheese. \n        Output: ", "result": "\n            brie, cheddar, gouda, mozzarella, parmesan, provolone, ricotta, feta, blue cheese, goat cheese.\n        \"\"\"\n        category = \"food\"\n        condition = \"are farmer's che"}
{"cat": "food", "slot": "specialization", "value": "emmer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are emmer. \n        Output: ", "result": "\n        */\n        public List<string> GetWords(string category, string condition)\n        {\n            List<string> words = new List<string>();\n\n            using (MySqlConnection connection = new MySqlConnection(connectionString))\n            {\n                connection.Open();\n"}
{"cat": "food", "slot": "specialization", "value": "Boston brown bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Boston brown bread. \n        Output: ", "result": "\n        bread,cake,cookie,donut,muffin,pasta,pizza,sandwich,soup,vegetable\n\"\"\"\n\nword_list = [\"bread\", \"cake\", \"cookie\", \"donut\", \"muffin\", \"pasta"}
{"cat": "food", "slot": "specialization", "value": "fruit juice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are fruit juice. \n        Output: ", "result": "1. Apple, 2. Orange, 3. Grapefruit, 4. Pineapple, 5. Mango, 6. Peach, 7. Pomegranate, 8. Cranberry, 9. Tangerine, 10. Lemon"}
{"cat": "food", "slot": "specialization", "value": "two-grain spelt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are two-grain spelt. \n        Output: ", "result": "\n        */\n        public List<string> GetWords(string category, string condition)\n        {\n            List<string> words = new List<string>();\n\n            using (MySqlConnection connection = new MySqlConnection(connectionString))\n            {\n                connection.Open();\n"}
{"cat": "food", "slot": "specialization", "value": "espresso", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are espresso. \n        Output: ", "result": "\n```\nespresso, cappuccino, latte, macchiato, mocha, Americano, caffe, coffee, espresso shot, espresso machine\n```\n```\nDesired output: comma separated list of words.\nCategory: animals.\nCondition:"}
{"cat": "food", "slot": "specialization", "value": "Uruguay potato", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Uruguay potato. \n        Output: ", "result": "\n        */\n        public List<string> GetWords(string category, string condition)\n        {\n            List<string> words = new List<string>();\n\n            using (MySqlConnection connection = new MySqlConnection(connectionString))\n            {\n                connection.Open();\n"}
{"cat": "food", "slot": "specialization", "value": "soybean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are soybean. \n        Output: ", "result": "\n        chickpea, edamame, tofu, tempeh, soy milk, soy yogurt, soy protein, soy lecithin, soy sauce, soybean oil.\n    \"\"\"\n    category = \"food\"\n    soy"}
{"cat": "food", "slot": "specialization", "value": "ice coffee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are ice coffee. \n        Output: ", "result": "iced, coffee, frappuccino, cappuccino, mocha, latte, espresso, iced-coffee, iced-frappuccino, iced-cappuccino\n```\n\n```"}
{"cat": "food", "slot": "specialization", "value": "cinnamon bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cinnamon bread. \n        Output: ", "result": "\n        cinnamon,bread,cinnamon,bread,cinnamon,bread,cinnamon,bread,cinnamon,bread,cinnamon,bread. \n        \"\"\"\n        category = 'food'\n       "}
{"cat": "food", "slot": "specialization", "value": "bartlett", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are bartlett. \n        Output: ", "result": "\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"orange\", \"pear\", \"grape\", \"kiwi\", \"strawberry\", \"blueberry\", \"raspberry\", \"plum\"]\n    bartlett_words = [\"bartlett\", \""}
{"cat": "food", "slot": "specialization", "value": "generic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are generic. \n        Output: ", "result": "\n        chocolate, cookie, cake, ice cream, pizza, bread, water, juice, milk, soda \n    \"\"\"\n    category = \"food\"\n    condition = \"are generic\"\n    words = get_words(category, condition)\n    return"}
{"cat": "food", "slot": "specialization", "value": "cheddar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cheddar. \n        Output: ", "result": "\n        cheddar,cheddar,cheddar,cheddar,cheddar,cheddar,cheddar,cheddar,cheddar. \n        \"\"\"\n        category = \"food\"\n        condition = \"are cheddar\"\n        words = get_words(category, condition)"}
{"cat": "food", "slot": "specialization", "value": "Merlot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Merlot. \n        Output: ", "result": "\n```\nmerlot,cabernet,syrah,pinot,grigio,chardonnay,zinfandel,malbec,burgundy,shiraz\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition"}
{"cat": "food", "slot": "specialization", "value": "cafe royale", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cafe royale. \n        Output: ", "result": "\n        chocolate, mocha, latte, cappuccino, espresso, macchiato, frappuccino, \n        caramel, vanilla, hazelnut.\n    \"\"\"\n    words = []\n    for word in cafe_roy"}
{"cat": "food", "slot": "specialization", "value": "eating apple", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are eating apple. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grapes, orange, pear, plum, strawberry. \n        \"\"\"\n        category = 'food'\n        condition = 'are eating apple'\n        words = get_words(category, condition)"}
{"cat": "food", "slot": "specialization", "value": "caraway seed bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are caraway seed bread. \n        Output: ", "result": "\n        caraway, seed, bread, rye, wheat, dough, crust, crumb, flavor, aroma \n    \"\"\"\n    category = \"food\"\n    condition = \"are caraway seed bread\"\n    words = get_words(category, condition"}
{"cat": "food", "slot": "specialization", "value": "vintage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are vintage. \n        Output: ", "result": "\n        apple, cake, cookie, donut, ice cream, jelly, pie, pop, sandwich, soda\n    \"\"\"\n    vintage_food_words = [\n        \"apple\", \"cake\", \"cookie\", \"donut\", \"ice cream\","}
{"cat": "food", "slot": "specialization", "value": "coffee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are coffee. \n        Output: ", "result": "\n```\ncoffee, cappuccino, latte, mocha, espresso, Americano, caffe, macchiato, frappuccino, expresso\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition"}
{"cat": "food", "slot": "specialization", "value": "Sauvignon Blanc", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Sauvignon Blanc. \n        Output: ", "result": "\n        chardonnay, merlot, pinot noir, riesling, sauvignon blanc, zinfandel, cabernet sauvignon, malbec, pinot grigio, gew\u00fcrztraminer\n    \"\"\"\n    category = \"food\"\n    condition"}
{"cat": "food", "slot": "specialization", "value": "lemon juice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are lemon juice. \n        Output: ", "result": "1. Lemon, 2. Juice, 3. Squeeze, 4. Citrus, 5. Acidic, 6. Bitter, 7. Tangy, 8. Zesty, 9. Refreshing, 10. Vitamin C"}
{"cat": "food", "slot": "specialization", "value": "salt-rising bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are salt-rising bread. \n        Output: ", "result": "\n```\nsalt, yeast, flour, milk, sugar, butter, eggs, water, salt-rising, fermentation\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition \"are salt-rising bread\" are \"s"}
{"cat": "food", "slot": "specialization", "value": "plonk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are plonk. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, honeydew, kiwi, melon, nectarine, orange, peach, pear, plum, raspberry, strawberry, watermelon\n        \"\"\"\n        fruits ="}
{"cat": "food", "slot": "specialization", "value": "suds", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are suds. \n        Output: ", "result": "\n    \"\"\"\n    food_words = [\"soup\", \"sandwich\", \"steak\", \"salad\", \"sushi\", \"sauce\", \"syrup\", \"soup\", \"sandwich\", \"steak\", \"salad\", \"sushi\", \""}
{"cat": "food", "slot": "specialization", "value": "salmagundi", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are salmagundi. \n        Output: ", "result": "\n    \"\"\"\n    food_words = [\n        \"salmagundi\",\n        \"salsa\",\n        \"sauce\",\n        \"soup\",\n        \"stew\",\n        \"stew\",\n        \"stew\",\n        \"stew\",\n       "}
{"cat": "food", "slot": "specialization", "value": "seckel pear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are seckel pear. \n        Output: ", "result": "1. Seckel pear, 2. Seckel pear, 3. Seckel pear, 4. Seckel pear, 5. Seckel pear, 6. Seckel pear, 7. Seckel pear, 8"}
{"cat": "food", "slot": "specialization", "value": "crouton", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are crouton. \n        Output: ", "result": "\n```\nbread, crouton, toast, cracker, slice, breadstick, croissant, roll, biscuit, cracker\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "food", "slot": "specialization", "value": "raisin bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are raisin bread. \n        Output: ", "result": "\n        raisin,bread,raisin,bread,raisin,bread,raisin,bread,raisin,bread,raisin,bread\n\"\"\"\n\nword_list = ['raisin', 'bread', 'raisin', 'bread', '"}
{"cat": "food", "slot": "specialization", "value": "herbal tea", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are herbal tea. \n        Output: ", "result": "\n```\nchamomile, peppermint, lavender, rooibos, hibiscus, rosehip, ginger, lemongrass, yerba mate, dandelion\n```\nExplanation:\n\n1. The category is food.\n2."}
{"cat": "food", "slot": "specialization", "value": "fruit crush", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are fruit crush. \n        Output: ", "result": " apple, banana, cherry, date, fig, grape, kiwi, mango, orange, peach\n    \"\"\"\n    words = []\n    for word in text.split():\n        if re.search(r'\\b(apple|banana|cherry|date|fig"}
{"cat": "food", "slot": "specialization", "value": "berry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are berry. \n        Output: ", "result": "\n            apple, blueberry, cherry, currant, gooseberry, huckleberry, loganberry, cranberry, raspberry, strawberry\n\"\"\"\nwords = ['apple', 'blueberry', 'cherry', 'currant', 'gooseberry', '"}
{"cat": "food", "slot": "specialization", "value": "bartlett pear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are bartlett pear. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, honeydew, kiwi, pear, watermelon\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \"grape\", \"h"}
{"cat": "food", "slot": "specialization", "value": "pyxidium", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are pyxidium. \n        Output: ", "result": "\n    \"\"\"\n    food_words = [\n        \"pyxidium\",\n        \"pyxidium\",\n        \"pyxidium\",\n        \"pyxidium\",\n        \"pyxidium\",\n        \"pyxidium\",\n        \"pyxid"}
{"cat": "food", "slot": "specialization", "value": "Gouda cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Gouda cheese. \n        Output: ", "result": "\n        cheddar, brie, gouda, mozzarella, parmesan, provolone, raclette, gruyere, emmental, fontina \n    \"\"\"\n    category = \"food\"\n    condition = \"are Gouda cheese\""}
{"cat": "food", "slot": "specialization", "value": "Pinot Noir", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Pinot Noir. \n        Output: ", "result": "\n        chardonnay, merlot, pinot grigio, pinot noir, riesling, sangiovese, syrah, tempranillo, viognier, zinfandel\n    \"\"\"\n    category = \"food\"\n    condition = \"are Pinot"}
{"cat": "food", "slot": "specialization", "value": "chips", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are chips. \n        Output: ", "result": "\n```\nchips, fries, potato chips, crisps, French fries, sliced potatoes, tater tots, potato wafers, potato sticks\n```\n\n### Example 2:\n```\nProvide a list of 1"}
{"cat": "food", "slot": "specialization", "value": "Bordeaux", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Bordeaux. \n        Output: ", "result": "\n        wine, grape, vineyard, ch\u00e2teau, red, white, sweet, dry, merlot, cabernet \n    \"\"\"\n    food_words = [\"wine\", \"grape\", \"vineyard\", \" ch\u00e2teau\", \"red\", \"white\", \"sweet\", \""}
{"cat": "food", "slot": "specialization", "value": "cyder", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cyder. \n        Output: ", "result": "\n        apple, cider, cyder, ferment, fruit, hard, juice, press, refreshing, sweet, tasty\n    \"\"\"\n    category = \"food\"\n    condition = \"are cyder\"\n    words = get_words(category, condition)\n"}
{"cat": "food", "slot": "specialization", "value": "nan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are nan. \n        Output: ", "result": "\n        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,"}
{"cat": "food", "slot": "specialization", "value": "juniper berry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are juniper berry. \n        Output: ", "result": " juniper,berry,juniper,berry,juniper,berry,juniper,berry,juniper,berry,juniper,berry. \n        \"\"\"\n        category = 'food'\n        condition = 'are juniper berry'\n        words = [word"}
{"cat": "food", "slot": "specialization", "value": "sourdough bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are sourdough bread. \n        Output: ", "result": "\n        bread, flour, yeast, water, salt, sugar, gluten, starter, fermentation, sourdough\n    \"\"\"\n    food_words = [\"bread\", \"flour\", \"yeast\", \"water\", \"salt\", \"sugar\", \"gl"}
{"cat": "food", "slot": "specialization", "value": "wild emmer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are wild emmer. \n        Output: ", "result": "\n        */\n        public List<string> GetWords(string category, string condition)\n        {\n            List<string> words = new List<string>();\n\n            using (MySqlConnection connection = new MySqlConnection(connectionString))\n            {\n                connection.Open();\n"}
{"cat": "food", "slot": "specialization", "value": "tabbouleh", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are tabbouleh. \n        Output: ", "result": "\n        cucumber, tomato, parsley, bulgur, mint, onion, lemon, olive oil, salt, pepper\n\"\"\"\n\n# Define the function\ndef get_tabbouleh_words(category, condition):\n    # Split the category"}
{"cat": "food", "slot": "specialization", "value": "barmbrack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are barmbrack. \n        Output: ", "result": "\n        apple, barmbrack, cake, chocolate, cookie, donut, eggnog, fruitcake, muffin, pudding \n    \"\"\"\n    category = \"food\"\n    condition = \"are barmbrack\"\n    words = get_"}
{"cat": "food", "slot": "specialization", "value": "Chardonnay", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Chardonnay. \n        Output: ", "result": "\n```\nChardonnay,Chablis,Meursault,Pouilly-Fum\u00e9,Sancerre,Sauvignon Blanc,Fum\u00e9 Blanc,Pinot Grigio,Verdejo,Gew\u00fcrztraminer\n```\n```"}
{"cat": "food", "slot": "specialization", "value": "submarine sandwich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are submarine sandwich. \n        Output: ", "result": "\n        ham, salami, bologna, turkey, chicken, tuna, salmon, shrimp, egg, bacon \n    \"\"\"\n    category = \"food\"\n    condition = \"are submarine sandwich\"\n    words = get_words(category,"}
{"cat": "food", "slot": "specialization", "value": "soy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are soy. \n        Output: ", "result": "\n```\nsoy, tofu, tempeh, edamame, soy milk, soy sauce, soy protein, soy lecithin, soy nuts\n```\n\n### Example 2:\n```\nProvide a list of 10 words"}
{"cat": "food", "slot": "specialization", "value": "Triticum aestivum", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Triticum aestivum. \n        Output: ", "result": "\n```\nwheat, flour, bread, pasta, cereal, grain, durum, semolina, farro, bulgur\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "food", "slot": "specialization", "value": "bun", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are bun. \n        Output: ", "result": "\n```\nbread, roll, bun, loaf, hamburger bun, hot dog bun, baguette, pita, naan, ciabatta\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "food", "slot": "specialization", "value": "draft beer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are draft beer. \n        Output: ", "result": "\n```\nbeer, ale, lager, draft, microbrew, brewpub, craft beer, beer garden, beer festival, beer tasting\n```\nExplanation:\nThe words that belong to the category \"food\" and satisfy the condition \"are draft"}
{"cat": "food", "slot": "specialization", "value": "triple-decker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are triple-decker. \n        Output: ", "result": "\n        sandwich, triple-decker, club, bacon, cheese, lettuce, tomato, mayonnaise, pickle, onion\n\"\"\"\n\nword_list = ['sandwich', 'club', 'bacon', 'cheese', 'lettuce', 'tom"}
{"cat": "food", "slot": "specialization", "value": "red hot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are red hot. \n        Output: ", "result": "\n            apple, cherry, cinnamon, dragon, ember, flame, hot, \n            pepper, red, ruby. \n        \"\"\"\n        category = 'food'\n        condition = 'are red hot'\n        words = []\n        for word in"}
{"cat": "food", "slot": "specialization", "value": "hydromel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hydromel. \n        Output: ", "result": "\n        apple, cider, honey, mead, melomel, perry, pyment,\n```"}
{"cat": "food", "slot": "specialization", "value": "Italian sandwich", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Italian sandwich. \n        Output: ", "result": "\n        ham, salami, mortadella, prosciutto, mozzarella, pizza, lasagna, cannoli, tiramisu, gelato\n```\n\n```"}
{"cat": "food", "slot": "specialization", "value": "Irish coffee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Irish coffee. \n        Output: ", "result": "\n```\ncoffee, cream, whiskey, chocolate, sugar, cinnamon, Bailey's, espresso, foam\n```\nExplanation:\nThe words that belong to the category \"food\" and satisfy the condition \"are Irish coffee\" are"}
{"cat": "food", "slot": "specialization", "value": "rye bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are rye bread. \n        Output: ", "result": "\n```\nrye,bread,rye,bread,rye,bread,rye,bread,rye,bread,rye,bread\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "food", "slot": "specialization", "value": "Red Delicious", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Red Delicious. \n        Output: ", "result": "\n        apple, banana, cherry, date, grapes, honeydew, kiwi, melon, orange, pear\n    \"\"\"\n    fruits = [\"apple\", \"banana\", \"cherry\", \"date\", \"grapes\", \"honeydew\","}
{"cat": "food", "slot": "specialization", "value": "seckel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are seckel. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, kiwi, melon, orange, pear\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \"grape\", \"kiwi\", \"melon"}
{"cat": "food", "slot": "specialization", "value": "matzo", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are matzo. \n        Output: ", "result": "\n```\nmatzo, bread, cracker, unleavened, Passover, Jewish, flat, leavened, egg, chametz\n```\n\nExplanation: \n\n1. The category is food.\n2. The condition is that the words belong to the category and satisfy"}
{"cat": "food", "slot": "specialization", "value": "macon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are macon. \n        Output: ", "result": "\n    \"\"\"\n    macon_words = [\"macon\", \"macon\", \"macon\", \"macon\", \"macon\", \"macon\", \"macon\", \"macon\", \"macon\", \"macon\"]\n    food_words = [\"burger\", \"fries\", \""}
{"cat": "food", "slot": "specialization", "value": "Gouda", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Gouda. \n        Output: ", "result": "\n        cheese, cheddar, gouda, mozzarella, parmesan, provolone, brie, blue cheese, goat cheese, feta. \n        \"\"\"\n        category = 'food'\n        condition = 'are Gouda'"}
{"cat": "food", "slot": "specialization", "value": "brown rice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are brown rice. \n        Output: ", "result": "\n```\nbrown, rice, grain, cooked, healthy, whole, complex, carbohydrate, gluten-free, versatile, nutritious\n```\nExplanation:\nThe words that belong to the category \"food\" and satisfy the condition \"are brown"}
{"cat": "food", "slot": "specialization", "value": "English muffin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are English muffin. \n        Output: ", "result": "\n            blueberry, cinnamon, crumb, dough, fruit, glaze, maple, muffin, streusel, vanilla\n        \"\"\"\n        category = \"food\"\n        condition = \"are English muffin\"\n        words = []\n        for"}
{"cat": "food", "slot": "specialization", "value": "capitulum", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are capitulum. \n        Output: ", "result": "1. Almond, 2. Walnut, 3. Pecan, 4. Cashew, 5. Macadamia, 6. Filbert, 7. Brazil nut, 8. Pistachio, 9. Hickory nut, 10."}
{"cat": "food", "slot": "specialization", "value": "cocoa", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cocoa. \n        Output: ", "result": "\n        chocolate, cocoa, cocoa bean, cocoa butter, cocoa powder, cocoa mass, cocoa solids, cocoa nibs, cocoa liquor, cocoa paste\n    \"\"\"\n    category = \"food\"\n    condition = \"are c"}
{"cat": "food", "slot": "specialization", "value": "sweet orange", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are sweet orange. \n        Output: ", "result": "\n            apple, banana, cherry, orange, pear, plum, strawberry, tangerine, watermelon, grape\n        \"\"\"\n        category = \"food\"\n        condition = \"are sweet orange\"\n        words = get_words(category, condition"}
{"cat": "food", "slot": "specialization", "value": "mulled wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are mulled wine. \n        Output: ", "result": "\n        apple, cinnamon, cloves, ginger, honey, nutmeg, oranges, spices, sugar, wine\n\"\"\"\n\n# Define the function\ndef get_mulled_wine_words(category: str, condition: str) -> list:\n"}
{"cat": "food", "slot": "specialization", "value": "tossed salad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are tossed salad. \n        Output: ", "result": "\n```\nlettuce, tomato, onion, cucumber, carrot, bell pepper, dressing, croutons, cheese, bacon\n```\nExplanation: The words that belong to the category \"food\" and satisfy the condition \"are tossed salad\""}
{"cat": "food", "slot": "specialization", "value": "garlic bread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are garlic bread. \n        Output: ", "result": "\n```\ngarlic,bread,breadsticks,rolls,oven,oven-roasted,oven-ready,oven-warmed,oven-fresh,oven-baked\n```"}
{"cat": "food", "slot": "specialization", "value": "durum wheat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are durum wheat. \n        Output: ", "result": "\n```\npasta, bread, couscous, semolina, spaghetti, durum, bulgur, cracked wheat, farro, grains\n```\nExplanation:\n\n1. Provide a list of 10 words that belong to the category and"}
{"cat": "food", "slot": "specialization", "value": "hominy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hominy. \n        Output: ", "result": "\n        corn, hominy, grits, masa, nixtamal, tamale, tortilla, pozole, atole.\n    \"\"\"\n    food_words = [\"corn\", \"hominy\", \"grits\", \"masa\", \"nixtamal\", \"t"}
{"cat": "food", "slot": "specialization", "value": "Riesling", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are Riesling. \n        Output: ", "result": "1. Riesling, 2. Riesling, 3. Riesling, 4. Riesling, 5. Riesling, 6. Riesling, 7. Riesling, 8. Riesling, 9. Riesling, 1"}
{"cat": "food", "slot": "specialization", "value": "pretzel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are pretzel. \n        Output: ", "result": "\n          bagel, croissant, donut, muffin, pretzel, roll, scone, cookie, pastry, bread\n    \"\"\"\n    category = \"food\"\n    condition = \"are pretzel\"\n    words = get_words(category, condition)\n   "}
{"cat": "food", "slot": "specialization", "value": "hero", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are hero. \n        Output: ", "result": "\n        chocolate, cookie, cake, ice cream, pizza, burger, sandwich, sushi, taco, pudding\n\"\"\"\n\nword_list = [\"chocolate\", \"cookie\", \"cake\", \"ice cream\", \"pizza\","}
{"cat": "food", "slot": "specialization", "value": "farm cheese", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are farm cheese. \n        Output: ", "result": "\n        cheddar, mozzarella, brie, gouda, parmesan, feta, goat cheese, blue cheese, camembert, ricotta\n\"\"\"\n\n# Define the function\ndef get_cheese_words(category, condition):\n"}
{"cat": "food", "slot": "specialization", "value": "vermouth", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are vermouth. \n        Output: ", "result": "\n        */\n        public List<string> GetWords(string category, string condition)\n        {\n            List<string> words = new List<string>();\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                connection.Open();\n\n                using"}
{"cat": "food", "slot": "specialization", "value": "BLT", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are BLT. \n        Output: ", "result": "\n        bread, lettuce, tomato, bacon, mayonnaise, onion, cheese, pickle, avocado, ranch. \n    \"\"\"\n    category = \"food\"\n    condition = \"are BLT\"\n    words = get_words(category,"}
{"cat": "food", "slot": "specialization", "value": "three-decker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are three-decker. \n        Output: ", "result": "\n        pancakes, waffles, sandwiches \n    \"\"\"\n    category = \"food\"\n    condition = \"are three-decker\"\n    words = get_words(category, condition)\n    return \", \".join(words)\n\ndef get_words_"}
{"cat": "food", "slot": "howToUse", "value": "peel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for peel. \n        Output: ", "result": "\n            apple, banana, orange, lemon, peel, skin, rind, pulp, juice, seed\n\"\"\"\nprint(fruits_with_peel(food_category='food', condition='can be or be used for peel'))\n```\n\n"}
{"cat": "food", "slot": "howToUse", "value": "yield", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for yield. \n        Output: ", "result": "\n        apple, bread, cake, cheese, egg, fruit, milk, onion, pizza, rice\n    \"\"\"\n    food_words = [\"apple\", \"bread\", \"cake\", \"cheese\", \"egg\", \"fruit\", \"milk\", \"onion"}
{"cat": "food", "slot": "howToUse", "value": "shuck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for shuck. \n        Output: ", "result": "\n          apple, bread, cheese, corn, cucumber, egg, olive, onion, pear, potato\n    \"\"\"\n    category = \"food\"\n    condition = \"can be or be used for shuck\"\n    words = get_words(category, condition"}
{"cat": "food", "slot": "howToUse", "value": "yield", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for yield. \n        Output: ", "result": "\n        apple, bread, cake, cheese, egg, fruit, milk, onion, pizza, rice\n    \"\"\"\n    food_words = [\"apple\", \"bread\", \"cake\", \"cheese\", \"egg\", \"fruit\", \"milk\", \"onion"}
{"cat": "food", "slot": "howToUse", "value": "toast", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for toast. \n        Output: ", "result": "\n          apple, bread, butter, cheese, egg, ham, jam, milk, toast, yogurt \n    \"\"\"\n    category = \"food\"\n    condition = \"can be or be used for toast\"\n    words = get_words(category, condition)"}
{"cat": "food", "slot": "part", "value": "pastry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  pastry. \n        Output: ", "result": " cookie, cake, pie, tart, pastry, muffin, bread, roll, breadstick, croissant \n    \"\"\"\n    category = 'food'\n    condition = 'can have pastry'\n    words = get_words(category, condition)\n    return ',"}
{"cat": "food", "slot": "part", "value": "water", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  water. \n        Output: ", "result": " apple, banana, carrot, cucumber, grape, lemon, orange, pear, strawberry, watermelon \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"water\" in word:\n            words.append("}
{"cat": "food", "slot": "place", "value": "bottle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in bottles. \n        Output: ", "result": "\n        chardonnay, merlot, pinot noir, riesling, sauvignon blanc, champagne, port, sherry, vermouth, sangria\n\"\"\"\n\n# Define the function\ndef find_words(category, condition):\n    # Create an empty list to"}
{"cat": "food", "slot": "generalization", "value": "gourd", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are gourd. \n        Output: ", "result": "\n        pumpkin, squash, zucchini, cucumber, melon, watermelon, gourd, bottle gourd, luffa, calabash.\n    \"\"\"\n    food_words = [\"pumpkin\", \"squash\", \"zucch"}
{"cat": "food", "slot": "accessory", "value": "cereal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: may have to do with cereal. \n        Output: ", "result": "\n        apple, bread, cereal, cookie, donut, egg, fruit, milk, toast, yogurt \n    \"\"\"\n    category = \"food\"\n    condition = \"may have to do with cereal\"\n    words = get_words(category, condition"}
{"cat": "food", "slot": "product", "value": "wheat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from wheat. \n        Output: ", "result": "\n        bread, cake, cookies, dough, flour, pizza, rolls, spaghetti, toast, wheat \n    \"\"\"\n    category = \"food\"\n    condition = \"make or are made from wheat\"\n    words = []\n    for word"}
{"cat": "food", "slot": "specialization", "value": "wheat berry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are wheat berry. \n        Output: ", "result": "\n        Wheat, Berry, Flour, Grain, Bread, Cereal, Pasta, Pizza, Crackers, Roll.\n    \"\"\"\n    wheat_words = [\"Wheat\", \"Berry\", \"Flour\", \"Grain\", \"Bread\","}
{"cat": "food", "slot": "specialization", "value": "corn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are corn. \n        Output: ", "result": "\n        corn, popcorn, cornmeal, cornstarch, cornhusk, corn silk, corn oil, corn flakes, corn nuts, corn on the cob\n    \"\"\"\n    category = \"food\"\n    condition = \"are corn\"\n    words = get"}
{"cat": "food", "slot": "product", "value": "peel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from peel. \n        Output: ", "result": "\n```\norange, lemon, lime, grapefruit, peel, orange peel, lemon peel, lime peel, grapefruit peel\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "food", "slot": "part", "value": "flour", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can have  flour. \n        Output: ", "result": "\n        bread, cake, cookie, dough, flour, pancake, pastry, roll, sponge, yeast \n    \"\"\"\n    food_words = [\"bread\", \"cake\", \"cookie\", \"dough\", \"flour\", \"pancake\","}
{"cat": "food", "slot": "product", "value": "cereal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from cereal. \n        Output: ", "result": "\n        bread, cereal, cookies, cereal, cereal, cereal, cereal, cereal, cereal, cereal. \n        \"\"\"\n        category = 'food'\n        condition = 'make or are made from cereal'"}
{"cat": "food", "slot": "product", "value": "orchard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: make or are made from orchard. \n        Output: ", "result": "\n        apple, cider, pear, plum, apricot, peach, cherry, orange, lemon, lime \n    \"\"\"\n    category = \"food\"\n    condition = \"make or are made from orchard\"\n    words = []\n    for word"}
{"cat": "food", "slot": "specialization", "value": "rice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are rice. \n        Output: ", "result": "\n        rice, pasta, noodle, bread, cereal, crackers, risotto, paella, sushi, pizza \n    \"\"\"\n    category = \"food\"\n    condition = \"are rice\"\n    words = get_words(category, condition)"}
{"cat": "food", "slot": "specialization", "value": "toast", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are toast. \n        Output: ", "result": "\n            apple, bread, butter, cheese, egg, ham, jam, milk, toast, yogurt \n        \"\"\"\n        category = \"food\"\n        condition = \"are toast\"\n        words = get_words(category, condition)\n        return \", \"."}
{"cat": "food", "slot": "specialization", "value": "varietal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are varietal. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, melon, orange, peach, plum\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \"grape\", \"melon\", \"orange"}
{"cat": "food", "slot": "specialization", "value": "green corn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are green corn. \n        Output: ", "result": "\n        asparagus, broccoli, green beans, green peas, kale, lettuce, spinach, zucchini.\n    \"\"\"\n    food_words = [\"asparagus\", \"broccoli\", \"green beans\", \"green peas\", \""}
{"cat": "food", "slot": "specialization", "value": "loaf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are loaf. \n        Output: ", "result": "\n```\nbread, roll, loaf, slice, bake, knead, rise, dough, hearth, oven\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "food", "slot": "specialization", "value": "sweet corn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are sweet corn. \n        Output: ", "result": "\n        sweet, corn, kernels, cob, succulent, juicy, buttery, tender, flavorful, aromatic \n    \"\"\"\n    sweet_corn_words = [\"sweet\", \"corn\", \"kernels\", \"cob\", \"succ"}
{"cat": "food", "slot": "specialization", "value": "cooler", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cooler. \n        Output: ", "result": "\n        chocolate, \n        ice cream, \n        popsicle, \n        slushie, \n        frozen yogurt, \n        sorbet, \n        gelato, \n        frozen pizza, \n        ice cream sandwich"}
{"cat": "food", "slot": "specialization", "value": "gourd", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are gourd. \n        Output: ", "result": "\n        pumpkin, squash, zucchini, cucumber, melon, watermelon, gourd, bottle gourd, luffa, calabash.\n    \"\"\"\n    food_words = [\"pumpkin\", \"squash\", \"zucch"}
{"cat": "food", "slot": "specialization", "value": "burger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are burger. \n        Output: ", "result": "\n```\nburger, cheeseburger, hamburger, bacon, lettuce, tomato, onion, pickles, ketchup, mustard\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "food", "slot": "howToUse", "value": "butter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be or be used for butter. \n        Output: ", "result": "\n          apple, bread, butter, cake, cookie, cream, ice cream, muffin, pizza, toast\n    \"\"\"\n    category = \"food\"\n    condition = \"can be or be used for butter\"\n    words = []\n    for word"}
{"cat": "food", "slot": "specialization", "value": "wheat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are wheat. \n        Output: ", "result": "\n        bread, cake, cookie, dough, flour, pizza, roll, sandwich, toast, wheat\n    \"\"\"\n    food_words = [\"bread\", \"cake\", \"cookie\", \"dough\", \"flour\", \"pizza\", \"roll\", \""}
{"cat": "food", "slot": "specialization", "value": "alcohol", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are alcohol. \n        Output: ", "result": "\n```\nwine, beer, whiskey, vodka, gin, rum, brandy, champagne, sake, tequila\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "food", "slot": "specialization", "value": "alcoholic beverage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are alcoholic beverage. \n        Output: ", "result": "1. Beer, 2. Wine, 3. Vodka, 4. Gin, 5. Rum, 6. Whiskey, 7. Brandy, 8. Cider, 9. Mead, 10. Absinthe\n```\n"}
{"cat": "food", "slot": "specialization", "value": "inebriant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are inebriant. \n        Output: ", "result": " beer, wine, whiskey, vodka, gin, rum, champagne, brandy, sake, tequila. \n        \"\"\"\n        category = 'food'\n        condition = 'inebriant'\n        result = []\n        for word in words:\n"}
{"cat": "food", "slot": "specialization", "value": "alcoholic drink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are alcoholic drink. \n        Output: ", "result": "1. Beer, 2. Wine, 3. Vodka, 4. Gin, 5. Rum, 6. Whiskey, 7. Brandy, 8. Cider, 9. Mead, 10. Absinthe\n```\n"}
{"cat": "food", "slot": "specialization", "value": "intoxicant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are intoxicant. \n        Output: ", "result": "\n        beer, wine, whiskey, vodka, gin, rum, tequila, brandy, liqueur, champagne\n\"\"\"\n\n# Define the function\ndef get_intoxicant_words(category: str, condition: str) -> list:\n   "}
{"cat": "food", "slot": "place", "value": "salad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: can be found or used in salads. \n        Output: ", "result": "\n        arugula, basil, cucumber, dill, feta, garlic, mint, onion, parsley, tomato \n    \"\"\"\n    food_words = [\"arugula\", \"basil\", \"cucumber\", \"dill\", \"feta"}
{"cat": "food", "slot": "specialization", "value": "milk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are milk. \n        Output: ", "result": "\n        chocolate, ice cream, milk, cheese, yogurt, butter, cream, sour cream, buttermilk, whey\n```\n\n```"}
{"cat": "food", "slot": "generalization", "value": "root", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are root. \n        Output: ", "result": "\n        apple, banana, carrot, orange, pear, potato, radish, spinach, tomato, turnip.\n    \"\"\"\n    root_words = []\n    for word in words:\n        if len(word) == 1:\n            root_words."}
{"cat": "food", "slot": "specialization", "value": "rose", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are rose. \n        Output: ", "result": "\n        apple, banana, cherry, orange, plum, raspberry, strawberry, watermelon, blueberry, grape\n\"\"\"\n\nword_list = ['apple', 'banana', 'cherry', 'orange', 'plum', 'rasp"}
{"cat": "food", "slot": "specialization", "value": "popcorn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are popcorn. \n        Output: ", "result": "\n```\npopcorn, popcorn kernel, popcorn machine, popcorn popper, popcorn bowl, popcorn bag, popcorn seasoning, popcorn salt, popcorn butter\n```\nExplanation: The words that belong to the category"}
{"cat": "food", "slot": "specialization", "value": "edible fruit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are edible fruit. \n        Output: ", "result": " apple, banana, cherry, date, fig, grape, kiwi, mango, orange, peach\n    \"\"\"\n    fruits = []\n    for word in words:\n        if \"edible\" in word and \"fruit\" in word:\n            fruits.append"}
{"cat": "food", "slot": "specialization", "value": "pome", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are pome. \n        Output: ", "result": "\n        apple, cherry, pear, plum, quince, apricot, peach, nectarine, prune, cherry plum\n\"\"\"\n\nword_list = [\"apple\", \"cherry\", \"pear\", \"plum\", \"quince\", \""}
{"cat": "food", "slot": "specialization", "value": "cider", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are cider. \n        Output: ", "result": "\n        apple, cider, hard, sweet, fermented, alcoholic, non-alcoholic, carbonated, non-carbonated, sparkling \n    \"\"\"\n    food_words = [\"apple\", \"cider\", \"hard\", \"sweet\", \"ferment"}
{"cat": "food", "slot": "specialization", "value": "seed", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: food. \n        Condition: are seed. \n        Output: ", "result": "\n            apple, banana, cherry, date, fig, grape, oat, pea, pumpkin, sunflower\n    \"\"\"\n    food_words = [\"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \"grape\", \"oat\","}
{"cat": "vehicle", "slot": "time", "value": "holiday", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be consumed or used during holiday. \n        Output: ", "result": "\n            car, bike, boat, train, plane, bus, taxi, ferry, cruise, helicopter\n        \"\"\"\n        category = 'vehicle'\n        condition = 'can be consumed or used during holiday'\n        words = []\n        for word in"}
{"cat": "vehicle", "slot": "accessory", "value": "cargo trailer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: may have to do with cargo trailer. \n        Output: ", "result": "\n            1. Trailer\n            2. Hitch\n            3. Coupler\n            4. Brakes\n            5. Wiring\n            6. Lights\n            7. Tires\n            8. Wheels\n            9. Suspension\n            10. Axle\n"}
{"cat": "vehicle", "slot": "accessory", "value": "plough", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: may have to do with plough. \n        Output: ", "result": "\n        tractor, plow, cultivator, combine, harvester, trailer, truck, loader, backhoe, bulldozer\n    \"\"\"\n    category = \"vehicle\"\n    condition_words = [\"may have to do with plough\"]\n    words ="}
{"cat": "vehicle", "slot": "accessory", "value": "mower", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: may have to do with mower. \n        Output: ", "result": "\n            1. Lawn\n            2. Mower\n            3. Blade\n            4. Trimmer\n            5. Hedge\n            6. Cut\n            7. Grass\n            8. Weed\n            9. Edge\n            10. Tractor\n        \"\"\"\n"}
{"cat": "vehicle", "slot": "accessory", "value": "scraper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: may have to do with scraper. \n        Output: ", "result": "\n            1. car\n            2. truck\n            3. van\n            4. bus\n            5. motorcycle\n            6. bike\n            7. tractor\n            8. bulldozer\n            9. excavator\n            10. crane\n        \"\"\""}
{"cat": "vehicle", "slot": "accessory", "value": "trailer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: may have to do with trailer. \n        Output: ", "result": "\n            1. Trailer\n            2. Hitch\n            3. Coupler\n            4. Brakes\n            5. Wiring\n            6. Lighting\n            7. Tires\n            8. Suspension\n            9. Steering\n            10. Axle\n"}
{"cat": "vehicle", "slot": "accessory", "value": "seeder", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: may have to do with seeder. \n        Output: ", "result": "4x4, off-road, all-terrain, SUV, pickup, trailer, tow, 4x2, 4x4, 4x4. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'may have to do with se"}
{"cat": "vehicle", "slot": "content", "value": "luggage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: contain luggage. \n        Output: ", "result": "\n        car, truck, van, bus, taxi, train, airplane, boat, motorcycle, rickshaw\n    \"\"\"\n    luggage_words = []\n    for word in vocab:\n        if \"luggage\" in word:\n            luggage"}
{"cat": "vehicle", "slot": "content", "value": "goods", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: contain goodss. \n        Output: ", "result": "\n        car, good, goods, goodsess, goodess, goodesss, goodsesss, goodessss, goodesssss, goodessssss \n    \"\"\"\n    words = []\n    for word in re.findall(r'\\b(good|goodss|good"}
{"cat": "vehicle", "slot": "shape", "value": "long", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be long. \n        Output: ", "result": "\n        car, truck, van, bus, bike, train, boat, plane, motorcycle, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be long\"\n    words = get_words(category, condition)\n    return \", \".join"}
{"cat": "vehicle", "slot": "shape", "value": "elongated", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be elongated. \n        Output: ", "result": "\n        car, truck, van, bus, motorcycle, bike, train, boat, plane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be elongated\"\n    words = get_words(category, condition)\n    return \","}
{"cat": "vehicle", "slot": "efficiency", "value": "streamlined", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be streamlined. \n        Output: ", "result": "\n        car, truck, bus, train, boat, airplane, motorcycle, bicycle, taxi, limousine\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be streamlined\"\n    words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "efficiency", "value": "sinkable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be sinkable. \n        Output: ", "result": "\n            car, truck, boat, submarine, ship, airplane, bus, train, motorcycle, bicycle\n\"\"\"\n\n# Define the category and condition\ncategory = \"vehicle\"\ncondition = \"can be sinkable\"\n\n# Define a list to store the"}
{"cat": "vehicle", "slot": "efficiency", "value": "polluting", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be polluting. \n        Output: ", "result": "\n        car, truck, bus, boat, plane, train, motorcycle, bike, SUV, taxi\n    \"\"\"\n    polluting_vehicles = [\n        \"car\", \"truck\", \"bus\", \"boat\", \"plane\", \"train\", \"motor"}
{"cat": "vehicle", "slot": "efficiency", "value": "aerodynamic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be aerodynamic. \n        Output: ", "result": "\n            1. aerodynamic\n            2. airfoil\n            3. streamline\n            4. drag\n            5. coefficient\n            6. lift\n            7. downforce\n            8. vortex\n            9. turbulence\n            10. aero\n```\n"}
{"cat": "vehicle", "slot": "size", "value": "large", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be large. \n        Output: ", "result": "\n        car, truck, bus, van, SUV, minivan, sedan, pickup, motorcycle, RV\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be large\"\n    words = get_words(category, condition)\n    return \","}
{"cat": "vehicle", "slot": "size", "value": "big", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be big. \n        Output: ", "result": "\n            car, truck, van, bus, boat, train, airplane, taxi, limo, RV\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be big\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "supply", "value": "diesel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: use diesel. \n        Output: ", "result": "4x4, pickup, truck, diesel, off-road, towing, power, heavy-duty.\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"use diesel\"\n    words = get_words(category, condition)\n    return"}
{"cat": "vehicle", "slot": "supply", "value": "kerosene", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: use kerosene. \n        Output: ", "result": "1. car, 2. truck, 3. bus, 4. motorcycle, 5. boat, 6. airplane, 7. train, 8. taxi, 9. ambulance, 10. bulldozer.\n    \"\"\"\n   "}
{"cat": "vehicle", "slot": "supply", "value": "electricity", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: use electricity. \n        Output: ", "result": "\n        car, truck, bus, train, subway, boat, airplane, motorcycle, bicycle, taxi\n    \"\"\"\n    electric_vehicle_words = [\n        \"car\", \"truck\", \"bus\", \"train\", \"subway\", \"boat"}
{"cat": "vehicle", "slot": "supply", "value": "fuel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: use fuel. \n        Output: ", "result": "\n        car, fuel, gasoline, petrol, tank, fill, pump, station, consumption, mileage\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"use fuel\"\n    words = get_words(category, condition)\n    print(\", \".join("}
{"cat": "vehicle", "slot": "supply", "value": "power", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: use power. \n        Output: ", "result": "1. car, 2. truck, 3. bus, 4. train, 5. motorcycle, 6. boat, 7. plane, 8. bulldozer, 9. excavator, 10. bulldozer.\n    \"\"\"\n"}
{"cat": "vehicle", "slot": "supply", "value": "gasoline", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: use gasoline. \n        Output: ", "result": "1. car, 2. gasoline, 3. tank, 4. fill, 5. up, 6. petrol, 7. station, 8. pump, 9. nozzle, 10. gauge\n    \"\"\"\n    words = []\n   "}
{"cat": "vehicle", "slot": "supply", "value": "gas", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: use gas. \n        Output: ", "result": "\n        car, truck, van, bus, motorcycle, scooter, bike, boat, plane, train\n    \"\"\"\n    category = \"vehicle\"\n    gas_words = [\"car\", \"truck\", \"van\", \"bus\", \"motorcycle\", \"s"}
{"cat": "vehicle", "slot": "shape", "value": "aerodynamic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be aerodynamic. \n        Output: ", "result": "\n            1. aerodynamic\n            2. airfoil\n            3. streamline\n            4. drag\n            5. coefficient\n            6. lift\n            7. downforce\n            8. vortex\n            9. turbulence\n            10. aero\n```\n"}
{"cat": "vehicle", "slot": "sound", "value": "loud", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: sound loud. \n        Output: ", "result": "\n          car, engine, honk, rev, roar, screech, squeal, thunder, whoosh\n    \"\"\"\n    sound_loud_vehicle_words = [\n        \"car\", \"engine\", \"horn\", \"rev\", \"roar\", \"sc"}
{"cat": "vehicle", "slot": "sound", "value": "noisy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: sound noisy. \n        Output: ", "result": "\n          car, engine, honk, noise, roar, screech, sound, tire, vroom\n\"\"\"\n\n# Define the function\ndef sound_noisy(category, condition):\n    # Split the condition into words\n    condition_words = condition.split()\n"}
{"cat": "vehicle", "slot": "sound", "value": "rumbling", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can rumbling. \n        Output: ", "result": "\n        car, truck, van, bus, bike, train, boat, plane, motorcycle, rumbling. \n        \"\"\"\n        words = []\n        for word in word_list:\n            if \"can\" in word and \"rumbling\" in word:\n               "}
{"cat": "vehicle", "slot": "sound", "value": "heavy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: sound heavy. \n        Output: ", "result": "\n          car, truck, van, bus, train, plane, boat, motorcycle, bike, heavy\\_truck\n    \"\"\"\n    sound_heavy_vehicle_words = [\n        \"car\", \"truck\", \"van\", \"bus\", \"train\", \"plane"}
{"cat": "vehicle", "slot": "sound", "value": "rumbling", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: sound rumbling. \n        Output: ", "result": "1. engine, 2. tire, 3. exhaust, 4. muffler, 5. transmission, 6. brake, 7. steering, 8. suspension, 9. wheel, 10. axle.\n    \"\"\"\n    words ="}
{"cat": "vehicle", "slot": "sound", "value": "silent", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: sound silent. \n        Output: ", "result": "\n        car, truck, van, bus, train, motorcycle, bike, boat, airplane, taxi\n```\n\n```\nDescribe a scenario where the input is a list of words and the output should be a single word that is the most frequently occurring word in the input list"}
{"cat": "vehicle", "slot": "sound", "value": "throbbing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can throbbing. \n        Output: ", "result": "1. car, 2. motorcycle, 3. truck, 4. van, 5. bus, 6. bike, 7. jeep, 8. boat, 9. train, 10. plane\n    \"\"\"\n    words = []\n    for"}
{"cat": "vehicle", "slot": "movement", "value": "fast", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are fast. \n        Output: ", "result": "4x4, convertible, coupe, fastback, hatchback, muscle, sedan, sports, station wagon. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are fast'\n        words = get_words(category, condition)\n        return"}
{"cat": "vehicle", "slot": "movement", "value": "crash", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can crash. \n        Output: ", "result": "\n        car, truck, bike, bus, train, boat, plane, motorcycle, taxi, ambulance\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can crash\"\n    words = get_words(category, condition)\n    print(\", \"."}
{"cat": "vehicle", "slot": "movement", "value": "fly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can fly. \n        Output: ", "result": "\n            airplane, helicopter, glider, balloon, kite, drone, hang glider, hot air balloon, parachute, blimp\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can fly\"\n    words = []\n"}
{"cat": "vehicle", "slot": "movement", "value": "landing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can landing. \n        Output: ", "result": "4x4, off-road, all-terrain, all-wheel-drive, 4x4, off-road, all-terrain, all-wheel-drive, 4x4, off-road, all-terrain, all-wheel-drive, 4"}
{"cat": "vehicle", "slot": "movement", "value": "take-off", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can take-off. \n        Output: ", "result": "\n        plane, helicopter, airplane, jet, glider, balloon, rocket, spacecraft, hang glider, airship.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "vehicle", "slot": "movement", "value": "sail", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can sail. \n        Output: ", "result": "\n            boat, ship, sailboat, yacht, canoe, kayak, paddleboat, dinghy, catamaran, windsurfer\n        \"\"\"\n        category = 'vehicle'\n        condition = 'can sail'\n        words = []\n        for"}
{"cat": "vehicle", "slot": "movement", "value": "float", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can float. \n        Output: ", "result": "\n        boat, ship, raft, canoe, kayak, ferry, hovercraft, airboat, pontoon, barge.\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can float\"\n    words = get_words(category, condition"}
{"cat": "vehicle", "slot": "movement", "value": "slow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are slow. \n        Output: ", "result": "\n```\ncar, truck, bus, train, boat, plane, motorcycle, bicycle, scooter, rickshaw\n```"}
{"cat": "vehicle", "slot": "movement", "value": "hover", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can hover. \n        Output: ", "result": "\n        car, bike, boat, helicopter, airplane, hoverboard, skateboard, scooter, segway, drone\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can hover\"\n    words = get_words(category, condition)"}
{"cat": "vehicle", "slot": "movement", "value": "trip", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can trip. \n        Output: ", "result": "\n          car, truck, van, bus, bike, motorcycle, boat, train, plane, taxi\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"can fly\". \n        Provide a list of 10 words that"}
{"cat": "vehicle", "slot": "movement", "value": "westbound", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are westbound. \n        Output: ", "result": "407, 417, 427, 437, 447, 457, 467, 477, 487, 497\n    \"\"\"\n    words = []\n    for i in range(1"}
{"cat": "vehicle", "slot": "movement", "value": "southbound", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are southbound. \n        Output: ", "result": "\n        car,truck,SUV,minivan,sedan,jeep,van,pickup,coupe,convertible\n    \"\"\"\n    southbound_vehicles = []\n    for word in vocab:\n        if \"southbound\" in word:\n            south"}
{"cat": "vehicle", "slot": "movement", "value": "hover", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can hover. \n        Output: ", "result": "\n        car, bike, boat, helicopter, airplane, hoverboard, skateboard, scooter, segway, drone\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can hover\"\n    words = get_words(category, condition)"}
{"cat": "vehicle", "slot": "movement", "value": "sailing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can sailing. \n        Output: ", "result": "\n            car, boat, sailboat, yacht, dinghy, catamaran, kayak, canoe, paddleboard, windsurfer\n        \"\"\"\n        category = \"vehicle\"\n        condition = \"can sailing\"\n        words = []\n        for"}
{"cat": "vehicle", "slot": "purpose", "value": "travelling", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for travelling. \n        Output: ", "result": "\n        car, bus, train, taxi, bike, boat, plane, ship, subway, metro\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"have fur\". \n        Provide a list of 10 words that"}
{"cat": "vehicle", "slot": "purpose", "value": "move", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for move. \n        Output: ", "result": "\n        car, truck, van, bus, train, boat, bike, motorcycle, plane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"train\", \"boat\", \"bike"}
{"cat": "vehicle", "slot": "purpose", "value": "fitness", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for fitness. \n        Output: ", "result": "1. bike, 2. treadmill, 3. elliptical, 4. stationary bike, 5. rowing machine, 6. stairmaster, 7. weight bench, 8. dumbbells, 9. kettlebell,"}
{"cat": "vehicle", "slot": "purpose", "value": "sport", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for sport. \n        Output: ", "result": "4x4, ATV, bike, car, dirt bike, go-kart, motorcycle, off-road, quad, sport.\n    \"\"\"\n    category = 'vehicle'\n    condition = 'are used for sport'\n    words = get_words(category"}
{"cat": "vehicle", "slot": "purpose", "value": "fishing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for fishing. \n        Output: ", "result": "\n```\nboat, reel, hook, line, bait, tackle, net, rod, fish, sea\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated"}
{"cat": "vehicle", "slot": "purpose", "value": "mission", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for mission. \n        Output: ", "result": "4x4, off-road, all-terrain, military, jeep, Humvee, tank, ATV, dune buggy, all-terrain vehicle (ATV)\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used for mission\"\n   "}
{"cat": "vehicle", "slot": "purpose", "value": "transport", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used to transport. \n        Output: ", "result": " car, bus, truck, train, boat, airplane, taxi, subway, bike, motorcycle\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"have fur\". \n        Provide a list of 10 words that"}
{"cat": "vehicle", "slot": "purpose", "value": "drag", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used to drag. \n        Output: ", "result": " brake, accelerator, clutch, gear, steering, brake, accelerator, clutch, gear, steering. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are used to drag'\n        words = []\n        for word in text"}
{"cat": "vehicle", "slot": "purpose", "value": "transit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for transit. \n        Output: ", "result": "\n```\nbus, train, subway, tram, trolley, streetcar, metro, light rail, commuter rail, subway\n```"}
{"cat": "vehicle", "slot": "purpose", "value": "commuter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for commuter. \n        Output: ", "result": "\n        car, van, bus, train, tram, metro, bike, motorcycle, scooter, tuk-tuk\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used for commuter\"\n    words = get_words(category, condition"}
{"cat": "vehicle", "slot": "purpose", "value": "race", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for race. \n        Output: ", "result": "1. race, 2. racer, 3. racetrack, 4. racecar, 5. racer, 6. racetrack, 7. racecar, 8. racer, 9. racetrack, 10. racecar\n    \"\"\""}
{"cat": "vehicle", "slot": "purpose", "value": "parking", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used to parking. \n        Output: ", "result": "\n        car,park,lot,driveway,garage,street,parking,parkinglot,parkingspace,parkingstructure\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used to parking\"\n    words = []\n    for word in text"}
{"cat": "vehicle", "slot": "purpose", "value": "ride", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for ride. \n        Output: ", "result": "\n        car, bus, train, taxi, bike, boat, plane, subway, monorail, tram.\n    \"\"\"\n    category = 'vehicle'\n    condition = 'are used for ride'\n    words = get_words(category, condition)\n    return"}
{"cat": "vehicle", "slot": "purpose", "value": "travel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for travel. \n        Output: ", "result": "\n        car, bus, train, bike, boat, plane, taxi, subway, tram, auto\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used for travel\"\n    words = get_words(category, condition)\n    return \", \".join"}
{"cat": "vehicle", "slot": "purpose", "value": "travel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used to travel. \n        Output: ", "result": "\n        car, truck, bus, train, boat, plane, bike, motorcycle, taxi, subway\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used to travel\"\n    words = get_words(category, condition)\n    return \","}
{"cat": "vehicle", "slot": "purpose", "value": "ride", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used to ride. \n        Output: ", "result": " bike, car, motorcycle, scooter, bus, train, boat, plane, taxi, rickshaw\n```\n\nExample 2:\n```\nGiven a category and a list of words belonging to that category, write a function that returns the most common word in the list"}
{"cat": "vehicle", "slot": "purpose", "value": "luxury", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for luxury. \n        Output: ", "result": "\n        Rolls-Royce, Bentley, Ferrari, Lamborghini, Aston Martin, Maserati, Porsche, BMW, Mercedes-Benz, Range Rover.\n    \"\"\"\n    category = 'vehicle'\n    condition = 'are used for"}
{"cat": "vehicle", "slot": "purpose", "value": "agriculture", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for agriculture. \n        Output: ", "result": "\n        tractor, plow, cultivator, combine, harvester, seed drill, planter, fertilizer, sprayer, cultivator\n```\n```"}
{"cat": "vehicle", "slot": "place", "value": "road", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in roads. \n        Output: ", "result": "\n        car, truck, bus, bike, motorcycle, taxi, train, subway, boat, airplane\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be found or used in roads\"\n    words = get_words(category, condition)"}
{"cat": "vehicle", "slot": "place", "value": "airport", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in airports. \n        Output: ", "result": "\n        runway, taxiway, terminal, gate, jetway, concourse, apron, ramp, tarmac, airfield\n    \"\"\"\n    airport_words = [\"airport\", \"terminal\", \"gate\", \"jetway\", \"concourse\", \"apron\","}
{"cat": "vehicle", "slot": "place", "value": "sky", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in skies. \n        Output: ", "result": "\n        airplane, helicopter, jet, sky, wing, cloud, bird, balloon, kite, glider\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be found or used in skies\"\n    words = []\n    for word in"}
{"cat": "vehicle", "slot": "place", "value": "cycle path", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in cycle paths. \n        Output: ", "result": "\n```\nbike, path, cycle, track, route, pathway, trail, lane, route\n```"}
{"cat": "vehicle", "slot": "place", "value": "air", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in airs. \n        Output: ", "result": "4x4, off-road, all-terrain, tire, suspension, lift, bumper, winch, snorkel, skid plates\n    \"\"\"\n    airs_vehicles = [vehicle for vehicle in airs.split(\"\\n\") if \""}
{"cat": "vehicle", "slot": "place", "value": "country", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in countries. \n        Output: ", "result": "\n        car, truck, van, bus, motorcycle, bike, taxi, train, boat, airplane\n    \"\"\"\n    category = 'vehicle'\n    condition = 'can be found or used in countries'\n    words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "place", "value": "rural area", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in rural areas. \n        Output: ", "result": "4x4, tractor, combine, plow, harvester, pickup, trailer, ATV, bulldozer, excavator\n    \"\"\"\n    rural_vehicles = [\n        \"4x4\",\n        \"tractor\",\n        \"combine\","}
{"cat": "vehicle", "slot": "place", "value": "sea", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in seas. \n        Output: ", "result": "\n            1. boat\n            2. sea\n            3. sail\n            4. anchor\n            5. dock\n            6. ocean\n            7. ship\n            8. tide\n            9. wave\n            10. navigator\n        \"\"\"\n        words = []\n        for"}
{"cat": "vehicle", "slot": "place", "value": "garage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in garages. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, tractor, boat, airplane, train\n    \"\"\"\n    words = []\n    for word in re.findall(r'\\b(?:car|truck|van|bus|motorcycle|bike|t"}
{"cat": "vehicle", "slot": "place", "value": "waterway", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in waterways. \n        Output: ", "result": "\n            1. Barge\n            2. Canal\n            3. Lock\n            4. Navigable\n            5. River\n            6. Ship\n            7. Steamboat\n            8. Tidal\n            9. Waterway\n            10. Waterways\n        \"\"\""}
{"cat": "vehicle", "slot": "place", "value": "motorway", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in motorways. \n        Output: ", "result": "\n            1. Motorway\n            2. Highway\n            3. Freeway\n            4. Expressway\n            5. Autoroute\n            6. Autobahn\n            7. Parkway\n            8. Dual carriageway\n            9. Motorway service area\n            10."}
{"cat": "vehicle", "slot": "place", "value": "traffic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in traffics. \n        Output: ", "result": "\n        car, truck, bus, motorcycle, bike, taxi, train, boat, airplane, helicopter\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be found or used in traffics\"\n    words = []\n    for word"}
{"cat": "vehicle", "slot": "place", "value": "depot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in depots. \n        Output: ", "result": "\n        train, subway, bus, depot, station, platform, track, locomotive, depot\\_building, train\\_station\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be found or used in depots\"\n    words = []\n    for word"}
{"cat": "vehicle", "slot": "place", "value": "route", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in routes. \n        Output: ", "result": "\n        car, truck, van, bus, taxi, train, airplane, boat, motorcycle, bicycle\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be found or used in routes\"\n    words = get_words(category, condition)"}
{"cat": "vehicle", "slot": "place", "value": "park", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in parks. \n        Output: ", "result": "\n            1. Bike\n            2. Car\n            3. Park\n            4. Path\n            5. Tree\n            6. Grass\n            7. Bench\n            8. Swing\n            9. Playground\n            10. Picnic\n        \"\"\"\n        category ="}
{"cat": "vehicle", "slot": "place", "value": "dry dock", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in dry docks. \n        Output: ", "result": "\n            1. dock\n            2. slip\n            3. berth\n            4. pier\n            5. jetty\n            6. quay\n            7. wharf\n            8. mole\n            9. breakwater\n            10. basin\n        \"\"\"\n        category"}
{"cat": "vehicle", "slot": "place", "value": "shipyard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in shipyards. \n        Output: ", "result": "\n            1. anchor\n            2. crane\n            3. dock\n            4. engine\n            5. hull\n            6. propeller\n            7. rudder\n            8. sail\n            9. ship\n            10. winch\n        \"\"\"\n        words = []"}
{"cat": "vehicle", "slot": "place", "value": "parking", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in parkings. \n        Output: ", "result": "\n            1. Parking\n            2. Garage\n            3. Carport\n            4. Driveway\n            5. Street\n            6. Parking lot\n            7. Parking space\n            8. Parking meter\n            9. Parking sign\n            10. Parking"}
{"cat": "vehicle", "slot": "place", "value": "terminal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in terminals. \n        Output: ", "result": "\n        car, truck, van, bus, train, taxi, boat, plane, ship, subway\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be found or used in terminals\"\n    words = []\n    for word in text.split():"}
{"cat": "vehicle", "slot": "place", "value": "rental", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in rentals. \n        Output: ", "result": "4x4, SUV, convertible, sedan, minivan, truck, van, sports car, luxury car, compact car. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can be found or used in rentals'\n        words = []\n       "}
{"cat": "vehicle", "slot": "place", "value": "terminal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in terminals. \n        Output: ", "result": "\n        car, truck, van, bus, train, taxi, boat, plane, ship, subway\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be found or used in terminals\"\n    words = []\n    for word in text.split():"}
{"cat": "vehicle", "slot": "place", "value": "station", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in stations. \n        Output: ", "result": "\n        car, bus, train, taxi, subway, airport, ferry, boat, bike, motorcycle\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be found or used in stations\"\n    words = get_words(category, condition)"}
{"cat": "vehicle", "slot": "material", "value": "metal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be made of metal. \n        Output: ", "result": "\n        car, truck, bus, bike, motorcycle, train, airplane, boat, submarine, helicopter\n    \"\"\"\n    category = \"vehicle\"\n    metal_words = [\"car\", \"truck\", \"bus\", \"bike\", \"motorcycle"}
{"cat": "vehicle", "slot": "material", "value": "plastic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be made of plastic. \n        Output: ", "result": " car, truck, bus, bike, boat, airplane, train, subway, taxi, caravan\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be made of plastic\"\n    words = get_words(category, condition)\n    return"}
{"cat": "vehicle", "slot": "material", "value": "rubber", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be made of rubber. \n        Output: ", "result": "\n        car, tire, rubber, tread, tube, inner tube, bicycle, inner tube, hose, tire. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can be made of rubber'\n        words = []"}
{"cat": "vehicle", "slot": "material", "value": "glass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be made of glass. \n        Output: ", "result": "\n        car, window, glass, windshield, side window, rear window, sunroof, mirror, headlight, taillight\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be made of glass\"\n    words = []\n    for word in text"}
{"cat": "vehicle", "slot": "material", "value": "aluminium", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be made of aluminium. \n        Output: ", "result": "4x4, Jeep, Land Rover, Range Rover, Sport Utility Vehicle (SUV), 4x4 vehicle, 4x4 off-road vehicle, 4x4 all-terrain vehicle, 4x4 all-weather vehicle, 4x4"}
{"cat": "vehicle", "slot": "material", "value": "wood", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be made of wood. \n        Output: ", "result": "\n        car, truck, bus, train, boat, airplane, bike, wagon, cart, carousel \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be made of wood\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "material", "value": "steel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be made of steel. \n        Output: ", "result": "\n        car, truck, bus, train, boat, airplane, motorcycle, bicycle, bulldozer, excavator\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be made of steel\"\n    words = []\n    for word in"}
{"cat": "vehicle", "slot": "user", "value": "people", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by peoples. \n        Output: ", "result": " car, bus, train, bike, taxi, boat, plane, ship, subway, tram.\n    \"\"\"\n    category = 'vehicle'\n    condition = 'are used by peoples'\n    words = get_words(category, condition)\n    return ', '."}
{"cat": "vehicle", "slot": "user", "value": "cyclist", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by cyclists. \n        Output: ", "result": "\n```\nbike, pedal, handlebars, saddle, tire, chain, gear, brake, derailleur\n```\nExplanation: The words \"bike\", \"pedal\", \"handlebars\", \"saddle\", \"tire\", \"chain\", \"gear"}
{"cat": "vehicle", "slot": "user", "value": "army", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by armies. \n        Output: ", "result": "\n        tank, jeep, humvee, personnel carrier, armored personnel carrier, tank destroyer, self-propelled artillery, armored reconnaissance vehicle, armored infantry fighting vehicle, armored personnel carrier. \n        \"\"\"\n        category = 'vehicle'\n"}
{"cat": "vehicle", "slot": "user", "value": "driver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by drivers. \n        Output: ", "result": "\n        car, driver, drive, steering, brake, gas, accelerate, honk, turn, shift\n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"driver\", \"drive\", \"steering\", \"brake\", \"gas\", \"accel"}
{"cat": "vehicle", "slot": "user", "value": "person", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by people. \n        Output: ", "result": "\n        car, bus, bike, train, boat, plane, taxi, carpool, subway, metro\n\"\"\"\n\n# Define the function\ndef get_vehicle_words(category, condition):\n    # Create an empty list to store the words\n    words ="}
{"cat": "vehicle", "slot": "user", "value": "co-pilot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by co-pilots. \n        Output: ", "result": "\n        airplane, captain, co-pilot, flight, instrument, navigation, radio, seat, steering, throttle\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used by co-pilots\"\n    words = []\n    for word"}
{"cat": "vehicle", "slot": "user", "value": "farmer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by farmers. \n        Output: ", "result": "\n        tractor, plow, cultivator, combine, harvester, trailer, loader, backhoe, bulldozer, excavator.\n    \"\"\"\n    category = 'vehicle'\n    condition = 'are used by farmers'\n    words = get_"}
{"cat": "vehicle", "slot": "user", "value": "officer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by officers. \n        Output: ", "result": "\n        police,car,officer,patrol,traffic,arrest,ticket,duty,patrolman,patrolwoman\n```\n\n```\nDescribe a category and a condition.\nProvide a list of 10 words that belong to the category"}
{"cat": "vehicle", "slot": "user", "value": "sailor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by sailors. \n        Output: ", "result": "\n            anchor, boat, compass, harbor, keel, mast, sail, sea, ship, tackle \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used by sailors\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "user", "value": "holidaymaker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by holidaymakers. \n        Output: ", "result": "\n        caravan, motorhome, campervan, holidaymaker, beach, coast, tourist, camping, road trip, adventure\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used by holidaymakers\"\n    words = []\n    for"}
{"cat": "vehicle", "slot": "user", "value": "helmsman", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by helmsmen. \n        Output: ", "result": "1. rudder, 2. tiller, 3. wheel, 4. propeller, 5. anchor, 6. steering wheel, 7. throttle, 8. brake, 9. gear, 10. accelerator.\n    \"\"\"\n"}
{"cat": "vehicle", "slot": "user", "value": "businessman", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by businessmen. \n        Output: ", "result": "\n        car, truck, van, bus, taxi, limo, SUV, minivan, sedan, pickup\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used by businessmen\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "user", "value": "taxi driver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by taxi drivers. \n        Output: ", "result": "\n        car, taxi, driver, fare, meter, license, dispatch, GPS, smartphone, app\n    \"\"\"\n    taxi_words = [\"car\", \"taxi\", \"driver\", \"fare\", \"meter\", \"license\", \"dispatch\", \"GPS\", \"smart"}
{"cat": "vehicle", "slot": "user", "value": "captain", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by captains. \n        Output: ", "result": "\n            car, truck, van, bus, train, boat, plane, motorcycle, taxi, ambulance.\n        \"\"\"\n        category = 'vehicle'\n        condition = 'are used by captains'\n        words = get_words(category, condition)\n       "}
{"cat": "vehicle", "slot": "user", "value": "cruise", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by cruises. \n        Output: ", "result": "\n        car,cruise,cruise control,cruising,cruise ship,cruise liner,cruise line,cruise vacation,cruise control,cruise control system.\n    \"\"\"\n    category = \"vehicle\"\n   "}
{"cat": "vehicle", "slot": "user", "value": "hostess", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by hostesses. \n        Output: ", "result": "\n        airplane, bus, car, cruise, flight, helicopter, limo, plane, taxi, train\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used by hostesses\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "user", "value": "steward", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by stewards. \n        Output: ", "result": "\n```\ncar, driver, pit, fuel, tire, mechanic, steward, track, race, timing\n```"}
{"cat": "vehicle", "slot": "user", "value": "navy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by navies. \n        Output: ", "result": "\n        aircraft carrier, destroyer, frigate, submarine, cruiser, amphibious assault ship, aircraft, helicopter, naval aviation, naval ship.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n   "}
{"cat": "vehicle", "slot": "user", "value": "squadron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by squadrons. \n        Output: ", "result": "\n            1. Fighter\n            2. Bomber\n            3. Helicopter\n            4. Transport\n            5. Attack\n            6. Reconnaissance\n            7. Trainer\n            8. Utility\n            9. Maritime\n            10. Aerial\n"}
{"cat": "vehicle", "slot": "user", "value": "pedestrian", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by pedestrians. \n        Output: ", "result": "\n            1. Crosswalk\n            2. Sidewalk\n            3. Intersection\n            4. Pedestrian\n            5. Walk\n            6. Walking\n            7. Footpath\n            8. Side street\n            9. Roadway\n            10. Crossing\n```\n"}
{"cat": "vehicle", "slot": "user", "value": "pedestrian", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by pedestrians. \n        Output: ", "result": "\n            1. Crosswalk\n            2. Sidewalk\n            3. Intersection\n            4. Pedestrian\n            5. Walk\n            6. Walking\n            7. Footpath\n            8. Side street\n            9. Roadway\n            10. Crossing\n```\n"}
{"cat": "vehicle", "slot": "user", "value": "corps", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by corps. \n        Output: ", "result": " ambulance, firetruck, policecar, tank, helicopter, armoredvehicle, militaryvehicle, jeep, humvee, tanker\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used by corps\"\n    words = []\n"}
{"cat": "vehicle", "slot": "place", "value": "farm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in farms. \n        Output: ", "result": "\n            1. tractor\n            2. combine\n            3. plow\n            4. harvester\n            5. cultivator\n            6. seed drill\n            7. fertilizer spreader\n            8. sprayer\n            9. baler\n            10."}
{"cat": "vehicle", "slot": "purpose", "value": "rental", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for rental. \n        Output: ", "result": "4x4, car, convertible, minivan, rental, sedan, suv, truck, van\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used for rental\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "user", "value": "passenger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by passengers. \n        Output: ", "result": "\n        car, van, bus, truck, taxi, train, boat, plane, bike, subway\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used by passengers\"\n    words = get_words(category, condition)\n    print(\", \"."}
{"cat": "vehicle", "slot": "user", "value": "pilot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by pilots. \n        Output: ", "result": "\n```\nairplane, altitude, autopilot, cockpit, flight, GPS, navigation, pilot, takeoff, turbulence\n```\nExplanation: The word `airplane` belongs to the category `vehicle` and is used by pilots. The word"}
{"cat": "vehicle", "slot": "movement", "value": "dock", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can dock. \n        Output: ", "result": "\n            car, truck, van, bus, train, boat, plane, bike, motorcycle, taxi\n\"\"\"\n\n# Define the function\ndef get_vehicle_words(category, condition):\n    # Create an empty list to store the words\n    words = []"}
{"cat": "vehicle", "slot": "purpose", "value": "transport", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for transport. \n        Output: ", "result": "\n        car, truck, bus, train, boat, airplane, taxi, subway, bike, motorcycle\n    \"\"\"\n    category = \"vehicle\"\n    transport_words = [\"car\", \"truck\", \"bus\", \"train\", \"boat\", \"air"}
{"cat": "vehicle", "slot": "purpose", "value": "dock", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for dock. \n        Output: ", "result": "\n```\ncarrier, dock, berth, pier, wharf, quay, jetty, slip, landing, mooring\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "vehicle", "slot": "generalization", "value": "vehicle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are vehicle. \n        Output: ", "result": "1. car, 2. truck, 3. van, 4. bus, 5. bike, 6. train, 7. boat, 8. plane, 9. motorcycle, 10. taxi\n    \"\"\"\n    words = []\n    for"}
{"cat": "vehicle", "slot": "generalization", "value": "transportation", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are transportation. \n        Output: ", "result": "\n        car, truck, bus, train, airplane, taxi, subway, boat, bike, motorcycle\n```\n\nExample 2: \nInput: \n```\nProvide a list of 10 words that belong to the category and satisfy the condition. "}
{"cat": "vehicle", "slot": "generalization", "value": "container", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are container. \n        Output: ", "result": "\n            1. container\n            2. shipping\n            3. cargo\n            4. trailer\n            5. transport\n            6. containerization\n            7. intermodal\n            8. chassis\n            9. logistics\n            10. transportation\n        \"\"\"\n       "}
{"cat": "vehicle", "slot": "generalization", "value": "conveyance", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are conveyance. \n        Output: ", "result": "\n        car, truck, bus, train, boat, airplane, motorcycle, bicycle, taxi, limousine\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are conveyance\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "generalization", "value": "self-propelled vehicle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are self-propelled vehicle. \n        Output: ", "result": " car, truck, bus, train, subway, boat, airplane, motorcycle, bicycle, taxi. \n        \"\"\"\n        category = \"vehicle\"\n        condition = \"are self-propelled vehicle\"\n        words = get_words(category, condition)"}
{"cat": "vehicle", "slot": "generalization", "value": "instrumentation", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are instrumentation. \n        Output: ", "result": "1. speedometer, 2. odometer, 3. tachometer, 4. speedometer, 5. odometer, 6. tachometer, 7. speedometer, 8. odometer, 9. tachometer, 10. speedometer.\n"}
{"cat": "vehicle", "slot": "generalization", "value": "instrumentality", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are instrumentality. \n        Output: ", "result": "\n        car, truck, bus, train, airplane, boat, submarine, helicopter, motorcycle, bicycle\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are instrumentality\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "generalization", "value": "automotive vehicle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are automotive vehicle. \n        Output: ", "result": "4x4, car, jeep, pickup, sedan, sports, SUV, truck, van, wagon\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are automotive vehicle\"\n    words = get_words(category, condition)\n    return"}
{"cat": "vehicle", "slot": "generalization", "value": "motor vehicle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are motor vehicle. \n        Output: ", "result": "\n        car, truck, van, bus, motorcycle, SUV, minivan, taxi, ambulance, police car \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are motor vehicle\"\n    words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "generalization", "value": "tool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tool. \n        Output: ", "result": "\n```\ncar, hammer, wrench, saw, screwdriver, pliers, drill, ruler, tape measure, level\n```"}
{"cat": "vehicle", "slot": "generalization", "value": "aeroplane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are aeroplane. \n        Output: ", "result": "\n        airplane, helicopter, glider, balloon, blimp, airship, seaplane, hot air balloon, dirigible, zeppelin. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are aeroplane'\n       "}
{"cat": "vehicle", "slot": "generalization", "value": "auto", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are auto. \n        Output: ", "result": "\n        sports car, convertible, sedan, hatchback, coupe, minivan, pickup, SUV, van, wagon\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are auto\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "generalization", "value": "bicycle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are bicycle. \n        Output: ", "result": "\n```\nbicycle, handlebars, pedals, tire, seat, chain, sprocket, brake, gear, wheel\n```\nExplanation: The word \"bicycle\" satisfies the condition \"are bicycle\" and belongs to the category \"vehicle\"."}
{"cat": "vehicle", "slot": "generalization", "value": "artifact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are artifact. \n        Output: ", "result": "\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, subway, taxi\n    \"\"\"\n    category = \"vehicle\"\n    artifacts = [\"car\", \"truck\", \"bus\", \"train\", \"airplane\", \"bo"}
{"cat": "vehicle", "slot": "generalization", "value": "machine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are machine. \n        Output: ", "result": "\n        car, truck, bus, train, plane, boat, motorcycle, bicycle, bulldozer, excavator\n    \"\"\"\n    category = \"vehicle\"\n    machine_words = [\"car\", \"truck\", \"bus\", \"train\", \"plane\","}
{"cat": "vehicle", "slot": "generalization", "value": "bike", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are bike. \n        Output: ", "result": "\n```\nbike, bicycle, cycle, pedal, handlebars, saddle, wheel, tire, brake, chain\n```\nExplanation: The words that belong to the category \"vehicle\" and satisfy the condition \"are bike\" are \"bicycle\","}
{"cat": "vehicle", "slot": "generalization", "value": "plane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are plane. \n        Output: ", "result": "747, 777, 787, 737, 757, 767, 727, 717, 724. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are plane"}
{"cat": "vehicle", "slot": "generalization", "value": "airplane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are airplane. \n        Output: ", "result": "747, 777, 787, 737, 757, 767, 727, 717, 724, 728\n    \"\"\"\n    category = \"vehicle\"\n    condition ="}
{"cat": "vehicle", "slot": "generalization", "value": "motorcar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are motorcar. \n        Output: ", "result": "\n```\ncar, motorcar, automobile, sedan, hatchback, sports car, convertible, minivan, truck, SUV\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "vehicle", "slot": "generalization", "value": "garden tool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are garden tool. \n        Output: ", "result": "\n        hose, rake, shovel, wheelbarrow, watering can, lawn mower, tiller, cultivator, pruning shears, leaf blower.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n"}
{"cat": "vehicle", "slot": "generalization", "value": "implement", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are implement. \n        Output: ", "result": "1. implement, 2. vehicle, 3. implement, 4. vehicle, 5. implement, 6. vehicle, 7. implement, 8. vehicle, 9. implement, 10. vehicle. \n        \"\"\"\n        category = 'vehicle'\n"}
{"cat": "vehicle", "slot": "generalization", "value": "artefact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are artefact. \n        Output: ", "result": "4x4, jeep, off-road, 4x4 vehicle, off-road vehicle, 4x4 jeep, off-road jeep, 4x4 vehicle artefact, off-road vehicle artefact, 4x4 jeep artefact, off-road jeep"}
{"cat": "vehicle", "slot": "generalization", "value": "public transport", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are public transport. \n        Output: ", "result": "\n        bus, train, tram, metro, trolley, subway, streetcar,\n```"}
{"cat": "vehicle", "slot": "generalization", "value": "lawn tool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are lawn tool. \n        Output: ", "result": "mower, trimmer, edger, blower, hedge, cultivator, tiller, rototiller, string trimmer, weed eater\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are lawn tool\"\n    words = get_words(category"}
{"cat": "vehicle", "slot": "generalization", "value": "automobile", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are automobile. \n        Output: ", "result": "\n        car, truck, van, SUV, sedan, minivan, sports car, pickup, motorcycle, convertible\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are automobile\"\n    words = get_words(category, condition)\n    return"}
{"cat": "vehicle", "slot": "generalization", "value": "car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are car. \n        Output: ", "result": "4x4, convertible, coupe, sedan, sports, station, wagon. \n    \"\"\"\n    car_words = [\"4x4\", \"convertible\", \"coupe\", \"sedan\", \"sports\", \"station\", \"wagon\"]\n    car_words = ["}
{"cat": "vehicle", "slot": "generalization", "value": "cycle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are cycle. \n        Output: ", "result": "\n```\nbike, scooter, motorcycle, car, truck, van, bus, train, subway, taxi\n```\nExplanation: The words that belong to the category `vehicle` and satisfy the condition `are cycle` are `bike`, `sco"}
{"cat": "vehicle", "slot": "generalization", "value": "wheeled vehicle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are wheeled vehicle. \n        Output: ", "result": " car, bus, truck, van, taxi, motorcycle, bicycle, train, subway, trolley.\n    \"\"\"\n    category = 'vehicle'\n    condition = 'are wheeled vehicle'\n    words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "generalization", "value": "craft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are craft. \n        Output: ", "result": "\n        airplane, boat, car, helicopter, jet, submarine, train, bus, motorcycle, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are craft\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "colorPattern", "value": "grey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be grey. \n        Output: ", "result": "4x4, 4x2, 6x4, 6x2, 8x4, 8x2, 10x4, 10x2, 12x4, 12x2, 14x4, 14x2"}
{"cat": "vehicle", "slot": "colorPattern", "value": "grey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be grey. \n        Output: ", "result": "4x4, 4x2, 6x4, 6x2, 8x4, 8x2, 10x4, 10x2, 12x4, 12x2, 14x4, 14x2"}
{"cat": "vehicle", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be black. \n        Output: ", "result": "4x4, Jeep, Pickup, Truck, SUV, 4x4, 4x4, 4x4, 4x4, 4x4, 4x4, 4x4, 4x4, 4x4, 4x"}
{"cat": "vehicle", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be black. \n        Output: ", "result": "4x4, Jeep, Pickup, Truck, SUV, 4x4, 4x4, 4x4, 4x4, 4x4, 4x4, 4x4, 4x4, 4x4, 4x"}
{"cat": "vehicle", "slot": "colorPattern", "value": "red", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be red. \n        Output: ", "result": "\n            car, truck, van, bus, bike, motorcycle, boat, train, plane, taxi\n\"\"\"\n\n# Define the function\ndef get_vehicle_words(category, condition):\n    # Create an empty list to store the words\n    words = []"}
{"cat": "vehicle", "slot": "colorPattern", "value": "red", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be red. \n        Output: ", "result": "\n            car, truck, van, bus, bike, motorcycle, boat, train, plane, taxi\n\"\"\"\n\n# Define the function\ndef get_vehicle_words(category, condition):\n    # Create an empty list to store the words\n    words = []"}
{"cat": "vehicle", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be white. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, boat, train, plane, taxi\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"can fly\". \n        Provide a list of 10 words that belong to"}
{"cat": "vehicle", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be white. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, boat, train, plane, taxi\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"can fly\". \n        Provide a list of 10 words that belong to"}
{"cat": "vehicle", "slot": "colorPattern", "value": "blue", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be blue. \n        Output: ", "result": "\n        car, truck, van, bus, bike, boat, train, plane, motorcycle, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be blue\"\n    words = get_words(category, condition)\n    print(\", \".join"}
{"cat": "vehicle", "slot": "colorPattern", "value": "blue", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be blue. \n        Output: ", "result": "\n        car, truck, van, bus, bike, boat, train, plane, motorcycle, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can be blue\"\n    words = get_words(category, condition)\n    print(\", \".join"}
{"cat": "vehicle", "slot": "colorPattern", "value": "shiny", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be shiny. \n        Output: ", "result": "4x4, car, jeep, truck, van, bus, motorcycle, bike, scooter, shiny. \n        Explanation: 4x4, car, jeep, truck, van, bus, motorcycle, bike, scooter are all"}
{"cat": "vehicle", "slot": "colorPattern", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be silver. \n        Output: ", "result": "4x4, convertible, coupe, sedan, silver, sports, station, wagon. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can be silver'\n        words = get_words(category, condition)\n        return ', '.join(words)"}
{"cat": "vehicle", "slot": "colorPattern", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be silver. \n        Output: ", "result": "4x4, convertible, coupe, sedan, silver, sports, station, wagon. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can be silver'\n        words = get_words(category, condition)\n        return ', '.join(words)"}
{"cat": "vehicle", "slot": "colorPattern", "value": "green", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be green. \n        Output: ", "result": "4x4, convertible, coupe, sedan, sports, station, wagon. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can be green'\n        words = get_words(category, condition)\n        return ', '.join(words)\n\n"}
{"cat": "vehicle", "slot": "colorPattern", "value": "glossy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be glossy. \n        Output: ", "result": "\n        car, shiny, glossy, gleaming, polished, reflective, mirror-like, lustrous, dazzling, sparkling. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can be glossy'\n        words = []"}
{"cat": "vehicle", "slot": "colorPattern", "value": "green", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be green. \n        Output: ", "result": "4x4, convertible, coupe, sedan, sports, station, wagon. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can be green'\n        words = get_words(category, condition)\n        return ', '.join(words)\n\n"}
{"cat": "vehicle", "slot": "generalization", "value": "vessel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are vessel. \n        Output: ", "result": "\n            car, truck, bus, boat, ship, submarine, ferry, train, plane, taxi\n\"\"\"\n\n# Define the function\ndef get_vehicle_words(category, condition):\n    # Create an empty list to store the words\n    words = []"}
{"cat": "vehicle", "slot": "part", "value": "engine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  engine. \n        Output: ", "result": " car, engine, van, truck, bus, motorcycle, boat, train, airplane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    words = []\n    for word in text.split():\n        if \"can\" in word and \"have\" in word and"}
{"cat": "vehicle", "slot": "part", "value": "light", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  light. \n        Output: ", "result": " car, light, van, truck, bus, motorcycle, bike, jeep, boat, train. \n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"light\", \"van\", \"truck\", \"bus\", \"motorcycle\", \"bi"}
{"cat": "vehicle", "slot": "part", "value": "brake", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  brake. \n        Output: ", "result": " car, truck, van, bus, train, bike, motorcycle, boat, plane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"train\", \"bike\", \"motorcycle\","}
{"cat": "vehicle", "slot": "part", "value": "window", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  window. \n        Output: ", "result": " car, truck, van, bus, train, boat, airplane, taxi, motorcycle, caravan. \n        \"\"\"\n        category = 'vehicle'\n        words = []\n        for word in text.split():\n            if 'window' in word:\n                words"}
{"cat": "vehicle", "slot": "part", "value": "door", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  door. \n        Output: ", "result": " car, truck, van, bus, train, boat, airplane, motorcycle, taxi, ambulance. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have door'\n        words = get_words(category, condition)\n        return ',"}
{"cat": "vehicle", "slot": "part", "value": "seat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  seat. \n        Output: ", "result": " car, truck, van, bus, minivan, SUV, sedan, pickup, motorcycle, taxi. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have  seat'\n        words = get_words(category, condition)\n        return"}
{"cat": "vehicle", "slot": "part", "value": "wing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  wing. \n        Output: ", "result": " car, airplane, helicopter. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"can have\" in word and \"wing\" in word:\n            words.append(word)\n    return words\n\ndef get_vehicle_words_"}
{"cat": "vehicle", "slot": "part", "value": "frame", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  frame. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, boat, train, plane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"bike\", \"motorcycle\", \"boat"}
{"cat": "vehicle", "slot": "part", "value": "fender", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  fender. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, jeep, boat, train, airplane. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have fender\"\n    words = get_words(category, condition)\n    print(\","}
{"cat": "vehicle", "slot": "part", "value": "hood", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  hood. \n        Output: ", "result": " car, truck, van, bus, motorcycle, jeep, boat, airplane, train, taxi\n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"motorcycle\", \"jeep\", \"bo"}
{"cat": "vehicle", "slot": "part", "value": "tube", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  tube. \n        Output: ", "result": " car, truck, bus, bike, boat, subway, train, taxi, motorcycle, tube. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have tube'\n        words = get_words(category, condition)\n        return"}
{"cat": "vehicle", "slot": "part", "value": "tire", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  tire. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, train, boat, airplane, taxi. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have tire'\n        words = get_words(category, condition)\n        return ',"}
{"cat": "vehicle", "slot": "part", "value": "rudder", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  rudder. \n        Output: ", "result": " car, truck, bus, boat, airplane, submarine, helicopter, motorcycle, bicycle, train. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have rudder\"\n    words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "part", "value": "crew", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  crew. \n        Output: ", "result": " car, van, bus, truck, taxi, limo, train, boat, plane, ambulance\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have crew\"\n    words = get_words(category, condition)\n    return \", \".join("}
{"cat": "vehicle", "slot": "part", "value": "accelerator", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  accelerator. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, boat, train, airplane, taxi\n```\n\nExample 2:\n```\nInput: \nCategory: animal\nCondition: can fly\n\nDesired output: comma separated list of words.\n\nExample output:"}
{"cat": "vehicle", "slot": "part", "value": "bonnet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  bonnet. \n        Output: ", "result": " car, engine, bonnet, tyre, wheel, gear, steering, brake, accelerator, clutch. \n        \"\"\"\n        category = Category.objects.get(name='vehicle')\n        condition = Condition.objects.get(name='can have  bon"}
{"cat": "vehicle", "slot": "part", "value": "propeller", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  propeller. \n        Output: ", "result": " car, boat, airplane, helicopter, submarine, motorcycle, bicycle, train, bus, taxi\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"propeller\" in word:\n            words.append(word)\n   "}
{"cat": "vehicle", "slot": "part", "value": "fin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  fin. \n        Output: ", "result": " car, truck, van, bus, train, boat, plane, motorcycle, bike, taxi\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"fin\" in word and \"vehicle\" in word:\n            words.append(word"}
{"cat": "vehicle", "slot": "part", "value": "windshield", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  windshield. \n        Output: ", "result": " car, truck, bus, van, jeep, bike, motorcycle, boat, train, airplane\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have windshield\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "part", "value": "bumper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  bumper. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, boat, train, airplane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have bumper\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "part", "value": "tail", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  tail. \n        Output: ", "result": " car, truck, van, bus, taxi, motorcycle, boat, train, airplane, subway\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"tail\" in word:\n            words.append(word)\n    return words\n\n"}
{"cat": "vehicle", "slot": "part", "value": "gear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  gear. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, boat, train, airplane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have gear\"\n    words = get_words(category, condition)\n    return \", \".join"}
{"cat": "vehicle", "slot": "part", "value": "cowling", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  cowling. \n        Output: ", "result": " car, truck, bus, motorcycle, tractor, bulldozer, excavator, boat, airplane, helicopter. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have cowling\"\n    words = get_words(category,"}
{"cat": "vehicle", "slot": "part", "value": "cowl", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  cowl. \n        Output: ", "result": " car, truck, bus, motorcycle, tractor, bulldozer, firetruck, boat, airplane, helicopter. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have cowl'\n        words = get_words(category,"}
{"cat": "vehicle", "slot": "part", "value": "handlebar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  handlebar. \n        Output: ", "result": " bike, handlebar, handlebars, handlebars, handlebars, handlebars, handlebars, handlebars, handlebars, handlebars. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have handlebar'\n        words = get_words(category, condition"}
{"cat": "vehicle", "slot": "part", "value": "car window", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  car window. \n        Output: ", "result": " car, window. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"car\" in word and \"window\" in word:\n            words.append(word)\n    return \", \".join(words)\n\nprint(get_vehicle_words("}
{"cat": "vehicle", "slot": "part", "value": "sprocket wheel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  sprocket wheel. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, boat, submarine, airplane, train. \n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"bike\", \"motorcycle\","}
{"cat": "vehicle", "slot": "part", "value": "anti-sway bar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  anti-sway bar. \n        Output: ", "result": " car, truck, van, SUV, sedan, sports car, minivan, pickup, wagon, jeep\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have anti-sway bar\"\n    words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "part", "value": "rope", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  rope. \n        Output: ", "result": " car, truck, van, bus, boat, train, plane, motorcycle, bicycle, rope.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"can\" in word and \"have\" in word and \"rope\" in word:"}
{"cat": "vehicle", "slot": "part", "value": "ratline", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  ratline. \n        Output: ", "result": " car, truck, van, bus, train, boat, plane, motorcycle, taxi, ratline. \n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"train\", \"boat\", \"plane\","}
{"cat": "vehicle", "slot": "part", "value": "screw propeller", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  screw propeller. \n        Output: ", "result": " car, truck, bus, boat, airplane, submarine, motorcycle, bicycle, train, helicopter\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"screw propeller\" in word:\n            words.append(word"}
{"cat": "vehicle", "slot": "part", "value": "taillight", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  taillight. \n        Output: ", "result": " car, truck, van, bus, taxi, motorcycle, bike, SUV, minivan, pickup\n    \"\"\"\n    category = \"vehicle\"\n    words = []\n    for word in text.split():\n        if \"taillight\" in word:\n"}
{"cat": "vehicle", "slot": "part", "value": "sheet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  sheet. \n        Output: ", "result": " car, truck, van, bus, sheet, tire, steering, brake, engine, transmission. \n        \"\"\"\n        category = \"vehicle\"\n        condition = \"can have  sheet\"\n        words = []\n        for word in text.split():\n            if"}
{"cat": "vehicle", "slot": "part", "value": "water", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  water. \n        Output: ", "result": " car, truck, boat, bike, train, airplane, bus, subway, taxi, motorcycle. \n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"boat\", \"bike\", \"train\", \"airplane"}
{"cat": "vehicle", "slot": "part", "value": "funnel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  funnel. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, boat, train, subway, taxi\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"funnel\" in word:\n            words.append(word)\n    return words\n"}
{"cat": "vehicle", "slot": "part", "value": "navigation light", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  navigation light. \n        Output: ", "result": " car, truck, van, bus, taxi, motorcycle, boat, airplane, submarine, train\n    \"\"\"\n    category = 'vehicle'\n    condition = 'can have  navigation light'\n    words = get_words(category, condition)\n    return ', '."}
{"cat": "vehicle", "slot": "part", "value": "sunroof", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  sunroof. \n        Output: ", "result": " convertible, sedan, hatchback, coupe, convertible, sedan, hatchback, coupe, convertible, sedan, hatchback, coupe, convertible, sedan, hatchback, coupe, convertible, sedan, hatchback, coupe, convertible, sedan"}
{"cat": "vehicle", "slot": "part", "value": "oil", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  oil. \n        Output: ", "result": " car, truck, van, bus, motorcycle, boat, airplane, train, subway, taxi. \n        \"\"\"\n        category = 'vehicle'\n        words = get_words(category)\n        words = [word for word in words if 'oil' in"}
{"cat": "vehicle", "slot": "part", "value": "cockpit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  cockpit. \n        Output: ", "result": " car, airplane, helicopter, cockpit\n    \"\"\"\n    words = []\n    for word in all_words:\n        if \"cockpit\" in word and \"vehicle\" in category:\n            words.append(word)\n    return \", \".join(words)"}
{"cat": "vehicle", "slot": "part", "value": "glove compartment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  glove compartment. \n        Output: ", "result": "steering wheel, brake, accelerator, gear shift, glove compartment, windshield wipers, headlights, horn, rearview mirror, gas tank. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have glove compartment'"}
{"cat": "vehicle", "slot": "part", "value": "cookhouse", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  cookhouse. \n        Output: ", "result": " caravan, motorhome, campervan, coach, bus, lorry, taxi, ambulance, firetruck, policecar\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"cookhouse\" in word:\n            words.append(word"}
{"cat": "vehicle", "slot": "part", "value": "battery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  battery. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, train, boat, airplane, taxi\n    \"\"\"\n    category_words = [\"car\", \"truck\", \"van\", \"bus\", \"motorcycle\", \"bike\", \"train\", \"boat\", \"air"}
{"cat": "vehicle", "slot": "part", "value": "interior", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  interior. \n        Output: ", "result": " car, truck, van, bus, train, airplane, boat, subway, taxi, limo\n```\n\nExample 2:\n```\nInput: \n```\nprovide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "vehicle", "slot": "part", "value": "radome", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  radome. \n        Output: ", "result": " car, truck, bus, train, airplane, boat, submarine, helicopter, motorcycle, taxi. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have radome'\n        words = get_words(category, condition)\n       "}
{"cat": "vehicle", "slot": "part", "value": "underframe", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  underframe. \n        Output: ", "result": " car, truck, van, bus, train, subway, boat, airplane, motorcycle, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have underframe\"\n    words = get_words(category, condition)\n    return \", \".join"}
{"cat": "vehicle", "slot": "part", "value": "poop", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  poop. \n        Output: ", "result": " car, truck, bus, boat, train, plane, bike, motorcycle, taxi, poop\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"poop\" in word:\n            words.append(word)\n    return words\n"}
{"cat": "vehicle", "slot": "part", "value": "low gear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  low gear. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, boat, train, airplane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have low gear\"\n    words = get_words(category, condition)\n    print(\", \"."}
{"cat": "vehicle", "slot": "part", "value": "keel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  keel. \n        Output: ", "result": " boat, keel, sail, mast, oar, rudder, hull, propeller, steer, anchor\n    \"\"\"\n    category = \"vehicle\"\n    words = []\n    for word in text.split():\n        if \"can\" in word and \"have\""}
{"cat": "vehicle", "slot": "part", "value": "chain guard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  chain guard. \n        Output: ", "result": " chain, guard, sprocket, chainstay, derailleur, cassette, brake, tire, hub. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have  chain guard\"\n    words = get_words(category, condition)"}
{"cat": "vehicle", "slot": "part", "value": "pedal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  pedal. \n        Output: ", "result": " car, van, truck, bus, bike, motorcycle, scooter, boat, plane, train. \n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"van\", \"truck\", \"bus\", \"bike\", \"motorcycle\","}
{"cat": "vehicle", "slot": "part", "value": "running board", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  running board. \n        Output: ", "result": " car, truck, bus, van, taxi, limo, train, boat, airplane, motorcycle.\n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"bus\", \"van\", \"taxi\", \"limo\", \"train"}
{"cat": "vehicle", "slot": "part", "value": "hold", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  hold. \n        Output: ", "result": " car, truck, van, bus, train, boat, plane, motorcycle, bike, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have  hold\"\n    words = get_words(category, condition)\n    return \", \".join("}
{"cat": "vehicle", "slot": "part", "value": "saddle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  saddle. \n        Output: ", "result": " car, motorcycle, bicycle, saddle. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"saddle\" in word and \"vehicle\" in word:\n            words.append(word)\n    return \", \".join(words)\n"}
{"cat": "vehicle", "slot": "part", "value": "kickstand", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  kickstand. \n        Output: ", "result": " bike, scooter, skateboard, kickstand, handlebars, pedals, tires, steering, brakes. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have kickstand\"\n    words = get_words(category, condition)"}
{"cat": "vehicle", "slot": "part", "value": "skeletal frame", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  skeletal frame. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, jeep, boat, plane, train\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have skeletal frame\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "part", "value": "first", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  first. \n        Output: ", "result": "1. car, 2. first, 3. firstly, 4. firstness, 5. firstly, 6. firstness, 7. firstly, 8. firstness, 9. firstly, 10. firstness. \n        \"\"\"\n       "}
{"cat": "vehicle", "slot": "part", "value": "coaster brake", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  coaster brake. \n        Output: ", "result": " bike, scooter, skateboard, roller skate, tricycle, wagon, car, bus, train, subway. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have coaster brake'\n        words = []\n       "}
{"cat": "vehicle", "slot": "part", "value": "spar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  spar. \n        Output: ", "result": " car, spar, van, spar, truck, spar, bike, spar, bus, spar. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"spar\" in word:\n            words.append(word)\n"}
{"cat": "vehicle", "slot": "part", "value": "caboose", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  caboose. \n        Output: ", "result": " car, truck, bus, train, boat, plane, bike, motorcycle, taxi, caboose. \n        \"\"\"\n        words = []\n        for word in word_list:\n            if \"caboose\" in word:\n                words.append(word)"}
{"cat": "vehicle", "slot": "part", "value": "mainsheet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  mainsheet. \n        Output: ", "result": " car, truck, van, bus, motorcycle, boat, airplane, train, subway, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have mainsheet\"\n    words = get_words(category, condition)\n    return \", \".join"}
{"cat": "vehicle", "slot": "part", "value": "windlass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  windlass. \n        Output: ", "result": " car, truck, bus, boat, train, airplane, subway, taxi, motorcycle, bicycle. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have windlass'\n        words = get_words(category, condition)\n       "}
{"cat": "vehicle", "slot": "part", "value": "dynamo", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  dynamo. \n        Output: ", "result": " car, dynamo, dynamo, dynamo, dynamo, dynamo, dynamo, dynamo, dynamo. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have dynamo\"\n    words = get_words(category, condition)\n    return"}
{"cat": "vehicle", "slot": "part", "value": "superstructure", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  superstructure. \n        Output: ", "result": " car, truck, bus, train, subway, boat, airplane, helicopter, ferry, monorail. \n        \"\"\"\n        category = \"vehicle\"\n        words = [\"car\", \"truck\", \"bus\", \"train\", \"subway\", \"bo"}
{"cat": "vehicle", "slot": "part", "value": "stabilizer bar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  stabilizer bar. \n        Output: ", "result": " tire, wheel, axle, suspension, shock absorber, stabilizer bar, steering wheel, brake pedal, accelerator pedal, clutch pedal. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have stabilizer bar'\n       "}
{"cat": "vehicle", "slot": "part", "value": "gyrostabilizer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  gyrostabilizer. \n        Output: ", "result": " car, truck, bus, motorcycle, gyrostabilizer\n    \"\"\"\n    category = \"vehicle\"\n    words = []\n    for word in text.split():\n        if \"gyrostabilizer\" in word:\n            words.append(word)\n    if len"}
{"cat": "vehicle", "slot": "part", "value": "automobile engine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  automobile engine. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, boat, train, airplane, automobile engine. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have automobile engine\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "part", "value": "bicycle wheel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  bicycle wheel. \n        Output: ", "result": " bike, wheel, cycle, bicycle, pedal, tire, ride, vehicle, cycle, bicycle. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have bicycle wheel\"\n    words = get_words(category, condition)"}
{"cat": "vehicle", "slot": "part", "value": "anchor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  anchor. \n        Output: ", "result": " car, truck, anchor, van, bus, bike, train, boat, motorcycle, taxi\n    \"\"\"\n    words = []\n    for word in text.split():\n        if \"anchor\" in word and \"vehicle\" in word:\n            words.append(word"}
{"cat": "vehicle", "slot": "part", "value": "fuselage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  fuselage. \n        Output: ", "result": "\n        airplane, fuselage, wing, engine, propeller, tire, steering, brake, suspension, transmission.\n    \"\"\"\n    words = []\n    for word in words:\n        if \"can\" in word and \"have\" in word and \"fusel"}
{"cat": "vehicle", "slot": "part", "value": "buffer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  buffer. \n        Output: ", "result": " car, truck, buffer. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"buffer\" in word and \"vehicle\" in word:\n            words.append(word)\n    return \", \".join(words)\n\n# Your code here\n"}
{"cat": "vehicle", "slot": "part", "value": "radiator grille", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  radiator grille. \n        Output: ", "result": " car, truck, bus, van, sedan, sports car, pickup, SUV, minivan, station wagon\n    \"\"\"\n    category = 'vehicle'\n    condition = 'can have radiator grille'\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "part", "value": "interior", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  interior. \n        Output: ", "result": " car, truck, van, bus, train, airplane, boat, subway, taxi, limo\n```\n\nExample 2:\n```\nInput: \n```\nprovide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "vehicle", "slot": "part", "value": "turbine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  turbine. \n        Output: ", "result": " car, truck, bus, train, airplane, boat, submarine, helicopter, motorcycle, bicycle. \n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"bus\", \"train\", \"airplane\", \"bo"}
{"cat": "vehicle", "slot": "part", "value": "handle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  handle. \n        Output: ", "result": " steering wheel, brake pedal, accelerator pedal, gear shift, windshield wipers, headlights, taillights, brake lights, turn signals, parking brake."}
{"cat": "vehicle", "slot": "part", "value": "ship's galley", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  ship's galley. \n        Output: ", "result": " ship, galley, steering, propeller, rudder, mast, sails, anchor, deck, hull \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in category.split("}
{"cat": "vehicle", "slot": "part", "value": "porthole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  porthole. \n        Output: ", "result": " car, truck, bus, boat, train, airplane, subway, taxi, motorcycle, bicycle. \n        \"\"\"\n        category = \"vehicle\"\n        words = [\"car\", \"truck\", \"bus\", \"boat\", \"train\", \"airplane"}
{"cat": "vehicle", "slot": "part", "value": "radio", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  radio. \n        Output: ", "result": " car, van, truck, bus, taxi, train, boat, plane, motorcycle, bicycle. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have radio'\n        words = get_words(category, condition)\n        return ', '."}
{"cat": "vehicle", "slot": "part", "value": "log", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  log. \n        Output: ", "result": " car, log, logbook, logarithm, logarithmic, logger, loggerhead, loggerheaded, loggerheading, loggerheadedness. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have log'\n        words = []\n        for word"}
{"cat": "vehicle", "slot": "part", "value": "windshield wiper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  windshield wiper. \n        Output: ", "result": " car, truck, bus, van, taxi, motorcycle, boat, airplane, train, ambulance\n```\n```"}
{"cat": "vehicle", "slot": "part", "value": "reverse gear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  reverse gear. \n        Output: ", "result": " car, van, truck, bus, tractor, motorcycle, bike, boat, plane, train\n    \"\"\"\n    category = 'vehicle'\n    condition = 'can have reverse gear'\n    words = get_words(category, condition)\n    return ', '.join"}
{"cat": "vehicle", "slot": "part", "value": "shroud", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  shroud. \n        Output: ", "result": " car, truck, van, bus, taxi, motorcycle, bike, jeep, boat, train. \n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"taxi\", \"motorcycle\","}
{"cat": "vehicle", "slot": "part", "value": "quarter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  quarter. \n        Output: ", "result": " car, truck, van, jeep, bus, train, boat, motorcycle, bike, quarter. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"quarter\" in word:\n            words.append(word)\n    return words"}
{"cat": "vehicle", "slot": "part", "value": "horn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  horn. \n        Output: ", "result": " car, truck, bus, bike, motorcycle, train, boat, airplane, taxi, ambulance. \n        \"\"\"\n        category = 'vehicle'\n        words = get_words(category)\n        words = [word for word in words if 'horn'"}
{"cat": "vehicle", "slot": "part", "value": "throttle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  throttle. \n        Output: ", "result": " accelerator, brake, clutch, gear, horn, ignition, steering, suspension, throttle, transmission. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have throttle'\n        words = get_words(category, condition"}
{"cat": "vehicle", "slot": "part", "value": "gearbox", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  gearbox. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, boat, train, airplane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have gearbox\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "part", "value": "stern", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  stern. \n        Output: ", "result": " car, truck, stern. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"stern\" in word and \"vehicle\" in word.lower():\n            words.append(word)\n    return \", \".join(words)\n\n"}
{"cat": "vehicle", "slot": "part", "value": "tail fin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  tail fin. \n        Output: ", "result": "\n        car, truck, van, bus, boat, motorcycle, bike, train, airplane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have  tail fin\"\n    words = get_words(category, condition)\n    return"}
{"cat": "vehicle", "slot": "part", "value": "axle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  axle. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, boat, train, plane, taxi\n```\n\nExample 2:\n```\nGiven a category and a list of words belonging to that category, write a function that returns the most common word in the list.\n        Des"}
{"cat": "vehicle", "slot": "part", "value": "third", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  third. \n        Output: ", "result": " car, van, truck, bus, train, boat, plane, motorcycle, bike, tricycle. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have  third\"\n    words = get_words(category, condition)\n    print(\","}
{"cat": "vehicle", "slot": "part", "value": "car door", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  car door. \n        Output: ", "result": " car, door, drive, park, steering, brake, gas, ignition, transmission, wheel\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have  car door\"\n    words = get_words(category, condition)\n    print(\", \".join("}
{"cat": "vehicle", "slot": "part", "value": "riding bitt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  riding bitt. \n        Output: ", "result": " car, truck, bike, bus, motorcycle, riding lawn mower, riding snow blower, riding bike, riding scooter, riding moped. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have riding"}
{"cat": "vehicle", "slot": "part", "value": "mirror", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  mirror. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, boat, train, airplane, taxi. \n    \"\"\"\n    category_words = [\"car\", \"truck\", \"van\", \"bus\", \"bike\", \"motorcycle\", \"boat\", \"train\","}
{"cat": "vehicle", "slot": "part", "value": "forecastle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  forecastle. \n        Output: ", "result": " forecastle, deck, hull, mast, sail, anchor, rudder, oar, tiller, wheel\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have forecastle\"\n    words = get_words(category, condition)\n    return"}
{"cat": "vehicle", "slot": "part", "value": "fo'c'sle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  fo'c'sle. \n        Output: ", "result": " fo'c'sle, motorcar, automobile, truck, lorry, bus, taxi, van, caravan, coach. \n        \"\"\"\n        category = Category.objects.get(name='vehicle')\n        words = Word.objects.filter(category=category"}
{"cat": "vehicle", "slot": "part", "value": "high gear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  high gear. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, boat, airplane, train, taxi\n```\n\nExample 2:\n```\nInput: \nCategory: animal\nCondition: can fly\n\nDesired output: comma separated list of words.\n\nExample output:"}
{"cat": "vehicle", "slot": "part", "value": "black box", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  black box. \n        Output: ", "result": " car, truck, bus, train, airplane, boat, motorcycle, taxi, ambulance, police car. \n        \"\"\"\n        black_box_words = [\n            \"car\",\n            \"truck\",\n            \"bus\",\n            \"train\",\n            \""}
{"cat": "vehicle", "slot": "part", "value": "crow's nest", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  crow's nest. \n        Output: ", "result": " canoe, crow's nest, dinghy, fishing boat, gondola, kayak, lifeboat, motorboat, rowboat, yacht.\n    \"\"\"\n    words = []\n    for word in words:\n        if \"crow's nest"}
{"cat": "vehicle", "slot": "part", "value": "accelerator pedal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  accelerator pedal. \n        Output: ", "result": " brake, accelerator, gas pedal, clutch, brake pedal, accelerator pedal, gas pedal, clutch pedal, brake pedal, accelerator pedal. \n        \"\"\"\n        category = \"vehicle\"\n        condition = \"can have accelerator"}
{"cat": "vehicle", "slot": "part", "value": "nose", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  nose. \n        Output: ", "result": " car, bus, truck, train, boat, airplane, motorcycle, bike, van, taxi\n```\n\nExample 2:\n```\nInput:  provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma"}
{"cat": "vehicle", "slot": "part", "value": "rear window", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  rear window. \n        Output: ", "result": " car, truck, bus, van, minivan, SUV, sedan, pickup, wagon, jeep\n```\n\nExample 2:\n```\nInput: \nCategory: animal\nCondition: can fly\n\nDesired output: comma separated list of words.\n\nExample:"}
{"cat": "vehicle", "slot": "part", "value": "auto accessory", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  auto accessory. \n        Output: ", "result": " alarm, antenna, audio, blinker, brake, clutch, gas, ignition, power, steering.\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have auto accessory\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "part", "value": "number plate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  number plate. \n        Output: ", "result": " car, truck, bus, van, taxi, motorcycle, bike, SUV, minivan, pickup. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have number plate\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "part", "value": "gas pedal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  gas pedal. \n        Output: ", "result": " accelerator, brake, clutch, gas pedal, gear, ignition, steering wheel, transmission, wheel, windshield wipers. \n        \"\"\"\n        category = Category.objects.get(name='vehicle')\n        words = Word.objects.filter("}
{"cat": "vehicle", "slot": "part", "value": "radar dome", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  radar dome. \n        Output: ", "result": " car, truck, van, bus, taxi, police car, ambulance, fire truck, boat, radar dome. \n    \"\"\"\n    category_words = [\"car\", \"truck\", \"van\", \"bus\", \"taxi\", \"police car\", \"amb"}
{"cat": "vehicle", "slot": "part", "value": "gyrostabiliser", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  gyrostabiliser. \n        Output: ", "result": " car, gyrostabiliser, motorbike, gyrostabiliser, truck, gyrostabiliser, bus, gyrostabiliser, boat, gyrostabiliser, airplane, gyrostabiliser. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \""}
{"cat": "vehicle", "slot": "part", "value": "chain", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  chain. \n        Output: ", "result": " car, bike, truck, bus, train, boat, plane, motorcycle, ATV, snowmobile. \n        \"\"\"\n        category = 'vehicle'\n        words = get_words(category)\n        chain_words = [word for word in words if 'chain'"}
{"cat": "vehicle", "slot": "part", "value": "low", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  low. \n        Output: ", "result": " car, van, truck, bus, train, bike, motorcycle, boat, plane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have low\"\n    words = get_words(category, condition)\n    return \", \".join(words"}
{"cat": "vehicle", "slot": "part", "value": "top", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  top. \n        Output: ", "result": " car, top. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"top\" in word and \"vehicle\" in word:\n            words.append(word)\n    return \", \".join(words)\n\nprint(get_vehicle_"}
{"cat": "vehicle", "slot": "part", "value": "bulwark", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  bulwark. \n        Output: ", "result": " car, truck, bus, bulwark, armor, tank, jeep, motorcycle, bulldozer, excavator\n    \"\"\"\n    category = \"vehicle\"\n    words = []\n    for word in text.split():\n        if \"bulwark\""}
{"cat": "vehicle", "slot": "part", "value": "air bag", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  air bag. \n        Output: ", "result": " air bag, seat belt, brake, steering wheel, windshield, tire, mirror, gas pedal, brake pedal, accelerator. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have air bag'\n        words = []\n"}
{"cat": "vehicle", "slot": "part", "value": "headlight", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  headlight. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, jeep, boat, train, airplane. \n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"motorcycle\", \"bike\","}
{"cat": "vehicle", "slot": "part", "value": "sunshine-roof", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  sunshine-roof. \n        Output: ", "result": " car, convertible, sunroof, sunshine-roof, top-down, open-air, targa, hard-top, soft-top, retractable-roof\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have sunshine-"}
{"cat": "vehicle", "slot": "part", "value": "screw", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  screw. \n        Output: ", "result": " car,screwdriver,screw,screws,screwing,screwdriver,screwdrivering,screwdrivering,screwdrivering,screwdrivering,screwdrivering,screwdrivering,screwdriver"}
{"cat": "vehicle", "slot": "part", "value": "basket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  basket. \n        Output: ", "result": " car, basket, basket, basket, basket, basket, basket, basket, basket. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"can\" in word and \"have\" in word and \"basket\" in word:\n            words.append(word)"}
{"cat": "vehicle", "slot": "part", "value": "bilge pump", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  bilge pump. \n        Output: ", "result": " boat, bilge, pump, bilge pump, bilge pumping, bilge system, bilge hose, bilge hoses, bilge water, bilge water pump, bilge water pumps, bilge water removal, bilge water removal system, bilge water removal"}
{"cat": "vehicle", "slot": "part", "value": "cabin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  cabin. \n        Output: ", "result": " car, truck, bus, van, minivan, SUV, sedan, pickup, motorhome, camper. \n    \"\"\"\n    category = \"vehicle\"\n    words = []\n    for word in text.split():\n        if \"cabin\" in word:"}
{"cat": "vehicle", "slot": "part", "value": "sea anchor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  sea anchor. \n        Output: ", "result": " anchor, boat, canoe, car, cruise, ferry, motorboat, sailboat, ship, yacht\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have sea anchor\"\n    words = get_words(category, condition)\n    return"}
{"cat": "vehicle", "slot": "part", "value": "floorboard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  floorboard. \n        Output: ", "result": " bike, car, floorboard, handlebar, motorcycle, seat, steeringwheel, tire, van. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"floorboard\" in word:\n            words.append(word)\n   "}
{"cat": "vehicle", "slot": "part", "value": "gasoline engine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  gasoline engine. \n        Output: ", "result": " car, truck, van, SUV, sedan, minivan, pickup, jeep, motorcycle, scooter\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have gasoline engine\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "part", "value": "bay", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  bay. \n        Output: ", "result": " car, truck, van, bus, train, boat, airplane, taxi, limo, ambulance\n```\n\n```"}
{"cat": "vehicle", "slot": "part", "value": "first gear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  first gear. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, boat, train, airplane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have first gear\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "part", "value": "after part", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  after part. \n        Output: ", "result": "4x4, Jeep, Wrangler, Rubicon, Sahara, Sahara, Limited, Trailhawk, Renegade, 4x4, 4x4, 4x4, 4x4, 4x4, 4x4, 4"}
{"cat": "vehicle", "slot": "part", "value": "car seat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  car seat. \n        Output: ", "result": "4x4, car seat, convertible, hatchback, minivan, pickup, sedan, sports car, station wagon, SUV. \n        \"\"\"\n        category = \"vehicle\"\n        condition = \"can have  car seat\"\n        words = []\n        for"}
{"cat": "vehicle", "slot": "part", "value": "weather sheet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  weather sheet. \n        Output: ", "result": " car, van, truck, bus, taxi, train, boat, airplane, motorcycle, bicycle. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have weather sheet\"\n    words = get_words(category, condition)\n    print"}
{"cat": "vehicle", "slot": "part", "value": "deck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  deck. \n        Output: ", "result": " car, truck, van, bus, boat, motorcycle, bike, train, plane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    words = []\n    for word in text.split():\n        if \"can\" in word and \"have\" in word and"}
{"cat": "vehicle", "slot": "part", "value": "drogue", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  drogue. \n        Output: ", "result": " car, truck, bus, van, taxi, motorcycle, bicycle, boat, plane, train\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"drogue\" in word:\n            words.append(word)\n    return words"}
{"cat": "vehicle", "slot": "part", "value": "cargo deck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  cargo deck. \n        Output: ", "result": " truck, trailer, cargo, deck, trailer deck, trailer truck, cargo trailer, deck trailer, cargo deck trailer, trailer cargo. \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words ="}
{"cat": "vehicle", "slot": "part", "value": "seat belt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  seat belt. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, boat, airplane, train, taxi\n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"motorcycle\", \"bike\", \"bo"}
{"cat": "vehicle", "slot": "part", "value": "sprocket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  sprocket. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, scooter, jeep, boat, train. \n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"bike\", \"motorcycle"}
{"cat": "vehicle", "slot": "part", "value": "tack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  tack. \n        Output: ", "result": " car, truck, van, trailer, bike, bus, train, boat, motorcycle, taxi\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"tack\" in word:\n            words.append(word)\n    return words\n"}
{"cat": "vehicle", "slot": "part", "value": "dashboard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  dashboard. \n        Output: ", "result": " accelerator, brake, clutch, dashboard, engine, gear, steering\\_wheel, tachometer, transmission, windshield\n    \"\"\"\n    category = 'vehicle'\n    condition = 'can have dashboard'\n    words = get_words(category,"}
{"cat": "vehicle", "slot": "part", "value": "petrol engine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  petrol engine. \n        Output: ", "result": " car, van, truck, bus, taxi, motorcycle, scooter, bike, tractor, lorry. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have petrol engine\"\n    words = get_words(category, condition)"}
{"cat": "vehicle", "slot": "part", "value": "lifeboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  lifeboat. \n        Output: ", "result": " car, truck, bus, boat, submarine, plane, train, taxi, ambulance, lifeboat\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"lifeboat\" in word:\n            words.append(word"}
{"cat": "vehicle", "slot": "part", "value": "engine room", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  engine room. \n        Output: ", "result": " car, truck, van, bus, boat, motorcycle, train, airplane, subway, taxi\n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"boat\", \"motorcycle\", \"train"}
{"cat": "vehicle", "slot": "part", "value": "bunk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  bunk. \n        Output: ", "result": " car, truck, bus, train, boat, plane, bike, motorcycle, caravan, RV\n    \"\"\"\n    category = \"vehicle\"\n    words = []\n    for word in text.split():\n        if \"can\" in word and \"have\" in word"}
{"cat": "vehicle", "slot": "part", "value": "pod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  pod. \n        Output: ", "result": " car,pod,truck,van,bus,bike,boat,plane,train,caravan\n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"pod\", \"truck\", \"van\", \"bus\", \"bike\", \"boat\", \""}
{"cat": "vehicle", "slot": "part", "value": "landing gear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  landing gear. \n        Output: ", "result": " car, truck, bus, airplane, train, boat, submarine, helicopter, motorcycle, bicycle. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have landing gear\"\n    words = get_words(category, condition)"}
{"cat": "vehicle", "slot": "part", "value": "bilge well", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  bilge well. \n        Output: ", "result": " boat, bilge, well, bilgewater, bilgepump, bilgewaterpump, bilgewell, bilgewellpump, bilgewellwaterpump, bilgewellwater. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have"}
{"cat": "vehicle", "slot": "part", "value": "fuel pod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  fuel pod. \n        Output: ", "result": " car, truck, van, bus, train, boat, airplane, motorcycle, bike, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have fuel pod\"\n    words = get_words(category, condition)\n    return \", \".join"}
{"cat": "vehicle", "slot": "part", "value": "topside", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  topside. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, boat, train, plane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have topside\"\n    words = get_words(category, condition)\n    return \", \".join"}
{"cat": "vehicle", "slot": "part", "value": "reverse", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  reverse. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, boat, train, plane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    words = []\n    for word in all_words:\n        if \"reverse\" in word:\n            words.append("}
{"cat": "vehicle", "slot": "part", "value": "winch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  winch. \n        Output: ", "result": " winch, winch, winch, winch, winch, winch, winch, winch, winch. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"winch\" in word:\n            words.append(word)\n    return"}
{"cat": "vehicle", "slot": "part", "value": "spoke", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  spoke. \n        Output: ", "result": " car, spoke, spoke, spoke, spoke, spoke, spoke, spoke, spoke, spoke. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"spoke\" in word and \"vehicle\" in word:\n            words.append(word)"}
{"cat": "vehicle", "slot": "part", "value": "trunk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  trunk. \n        Output: ", "result": " car, truck, van, SUV, minivan, pickup, sedan, wagon, jeep, crossover\n```\n\nExample 2:\n```\nInput: \nCategory: animal\nCondition: can fly\n\nDesired output: comma separated list of words.\n"}
{"cat": "vehicle", "slot": "part", "value": "ridge rope", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  ridge rope. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, boat, train, airplane, ridge rope.\n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"bike\", \"motorcycle"}
{"cat": "vehicle", "slot": "part", "value": "high", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  high. \n        Output: ", "result": " car, van, truck, bus, train, boat, airplane, motorcycle, bike, taxi\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"can fly\". \n        Provide a list of 10 words that belong"}
{"cat": "vehicle", "slot": "part", "value": "coachwork", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  coachwork. \n        Output: ", "result": " car, van, lorry, bus, coach, truck, taxi, limousine, ambulance, police car. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have coachwork\"\n    words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "part", "value": "storage area", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  storage area. \n        Output: ", "result": " car, truck, van, bus, trailer, RV, boat, plane, train, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have storage area\"\n    words = get_words(category, condition)\n    return \", \".join("}
{"cat": "vehicle", "slot": "part", "value": "mudguard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  mudguard. \n        Output: ", "result": " car, jeep, truck, van, bus, taxi, motorbike, scooter, tractor, bulldozer. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have mudguard'\n        words = []\n        for word in"}
{"cat": "vehicle", "slot": "part", "value": "tailfin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  tailfin. \n        Output: ", "result": "350Z, Mustang, Thunderbird, Cougar, T-Bird, 240Z, 280Z, 260Z, 290Z, 300Z, 350Z, 370Z, "}
{"cat": "vehicle", "slot": "part", "value": "gun", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  gun. \n        Output: ", "result": " car, gun, truck, tank, bike, motorcycle, jeep, boat, airplane, helicopter. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have gun'\n        words = get_words(category, condition)\n        return"}
{"cat": "vehicle", "slot": "part", "value": "railing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  railing. \n        Output: ", "result": " car, truck, van, bus, train, boat, plane, motorcycle, bicycle, taxi\n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"train\", \"boat\", \"plane\", \""}
{"cat": "vehicle", "slot": "part", "value": "steering wheel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  steering wheel. \n        Output: ", "result": " car, truck, van, bus, jeep, SUV, minivan, pickup, motorcycle, taxi.\n    \"\"\"\n    category = 'vehicle'\n    condition = 'can have steering wheel'\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "part", "value": "escape hatch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  escape hatch. \n        Output: ", "result": " car, truck, bus, boat, train, airplane, motorcycle, taxi, ambulance, helicopter\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"escape hatch\" in word:\n            words.append(word)\n"}
{"cat": "vehicle", "slot": "part", "value": "skeleton", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  skeleton. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, jeep, boat, plane, train\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have skeleton\"\n    words = get_words(category, condition)\n    return \", \".join("}
{"cat": "vehicle", "slot": "part", "value": "ratlin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  ratlin. \n        Output: ", "result": " car, truck, van, bike, bus, train, boat, plane, motorcycle, ratlin. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"ratlin\" in word:\n            words.append(word)\n    return words"}
{"cat": "vehicle", "slot": "part", "value": "antenna", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  antenna. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, boat, airplane, train, taxi\n```\n\nExample 2:\n```\nGiven a category and a list of words belonging to that category, write a function that returns the most common word in the list.\n       "}
{"cat": "vehicle", "slot": "part", "value": "hull", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  hull. \n        Output: ", "result": " car, truck, van, bus, boat, motorcycle, bike, train, airplane, submarine\n```\n\nExample 2:\n```\nGiven a category and a list of words belonging to that category, write a function that returns the most common word in the list.\n       "}
{"cat": "vehicle", "slot": "part", "value": "bulkhead", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  bulkhead. \n        Output: ", "result": " car, bus, truck, van, taxi, limo, train, boat, plane, bulldozer\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have bulkhead\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "part", "value": "third gear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  third gear. \n        Output: ", "result": " car, truck, van, bus, motorcycle, bike, boat, train, airplane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have  third gear\"\n    words = get_words(category, condition)\n    print(\","}
{"cat": "vehicle", "slot": "part", "value": "helm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  helm. \n        Output: ", "result": " steering, rudder, wheel, axle, brake, accelerator, clutch, gear, pedal, steering wheel. \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "vehicle", "slot": "part", "value": "mast", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  mast. \n        Output: ", "result": " car, van, truck, bus, train, boat, airplane, motorcycle, bicycle, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have mast\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "part", "value": "cargo hold", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  cargo hold. \n        Output: ", "result": " car, truck, van, trailer, semi, bus, train, boat, airplane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have cargo hold\"\n    words = get_words(category, condition)\n    return \", \".join("}
{"cat": "vehicle", "slot": "part", "value": "roof", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  roof. \n        Output: ", "result": " car,truck,van,SUV,jeep,bus,boat,airplane,motorcycle,taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have roof\"\n    words = get_words(category, condition)\n    return \","}
{"cat": "vehicle", "slot": "part", "value": "cargo area", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  cargo area. \n        Output: ", "result": " car, truck, van, minivan, SUV, pickup, bus, taxi, limo, RV\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have cargo area\"\n    words = get_words(category, condition)\n    return \","}
{"cat": "vehicle", "slot": "part", "value": "wiper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  wiper. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, boat, train, airplane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have wiper\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "part", "value": "grille", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  grille. \n        Output: ", "result": " car, truck, bus, van, jeep, motorcycle, boat, train, airplane, ambulance. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have  grille'\n        words = get_words(category, condition)\n       "}
{"cat": "vehicle", "slot": "part", "value": "lubber's hole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  lubber's hole. \n        Output: ", "result": "\n```\ncar, truck, boat, plane, train, bus, motorcycle, bike, ship, submarine\n```"}
{"cat": "vehicle", "slot": "part", "value": "car mirror", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  car mirror. \n        Output: ", "result": " car, mirror. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have car mirror\"\n    words = get_words(category, condition)\n    return \", \".join(words)\n\ndef get_words(category, condition):\n    \"\"\"\n   "}
{"cat": "vehicle", "slot": "part", "value": "davit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  davit. \n        Output: ", "result": " boat, davit, davit arm, davit crane, davit launch, davit launcher, davit system, davit tender, davit vessel, davit winch\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"can have davit\"\n    words"}
{"cat": "vehicle", "slot": "part", "value": "box", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  box. \n        Output: ", "result": " car, truck, van, bus, trailer, boat, motorcycle, bike, SUV, RV. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can have box'\n        words = get_words(category, condition)\n        return ',"}
{"cat": "vehicle", "slot": "generalization", "value": "aircraft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are aircraft. \n        Output: ", "result": "\n        helicopter, airplane, jet, glider, balloon, blimp, rocket, spacecraft, hot air balloon, glider\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are aircraft\"\n    words = get_words(category"}
{"cat": "vehicle", "slot": "generalization", "value": "heavier-than-air craft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are heavier-than-air craft. \n        Output: ", "result": "\n        airplane, helicopter, glider, blimp, zeppelin, balloon, airship, glider, hang glider, parachute. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are heavier-than-air craft'"}
{"cat": "vehicle", "slot": "part", "value": "wheel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  wheel. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, train, boat, airplane, taxi. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"wheel\" in word:\n            words.append(word)\n    return"}
{"cat": "vehicle", "slot": "movement", "value": "pilot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can pilot. \n        Output: ", "result": "\n            car, truck, bus, bike, boat, plane, train, subway, taxi, motorcycle\n\"\"\"\n\n# Define the function\ndef get_vehicle_words(category, condition):\n    # Create an empty list to store the words\n    words ="}
{"cat": "vehicle", "slot": "specialization", "value": "jet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are jet. \n        Output: ", "result": "\n        jet,plane,helicopter,boat,car,truck,bus,train,aircraft,motorcycle\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are jet\"\n    words = get_words(category, condition)\n    return \","}
{"cat": "vehicle", "slot": "specialization", "value": "Boeing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are Boeing. \n        Output: ", "result": "787, 737, 747, 757, 767, 777, 717, 727, 797. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are Bo"}
{"cat": "vehicle", "slot": "specialization", "value": "pickup", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are pickup. \n        Output: ", "result": "1. Pickup, 2. Pickup, 3. Pickup, 4. Pickup, 5. Pickup, 6. Pickup, 7. Pickup, 8. Pickup, 9. Pickup, 10. Pickup.\n    \"\"\"\n"}
{"cat": "vehicle", "slot": "specialization", "value": "city car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are city car. \n        Output: ", "result": "\n        city,car,drive,park,pedal,gas,brake,steering,wheel,speed\n\"\"\"\n\n# Define the function\ndef get_vehicle_words(category, condition):\n    # Create an empty list to store the words\n    words = []"}
{"cat": "vehicle", "slot": "specialization", "value": "racing bike", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are racing bike. \n        Output: ", "result": "\n            Ducati, Harley-Davidson, Kawasaki, MV Agusta, Suzuki, Triumph, Aprilia, BMW, Honda, KTM\n        \"\"\"\n        category = \"vehicle\"\n        condition = \"are racing bike\"\n        words"}
{"cat": "vehicle", "slot": "specialization", "value": "Antonov", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are Antonov. \n        Output: ", "result": "\n        Antonov, An-225, An-124, An-124-100, An-124-100M, An-124-300, An-124-300M, An-124"}
{"cat": "vehicle", "slot": "specialization", "value": "cabriolet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are cabriolet. \n        Output: ", "result": "\n        convertible, cabriolet, drop-top, soft-top, retractable-hard-top, foldable-roof, removable-roof, removable-hard-top, detachable-roof, detachable-hard-top\n    \"\"\"\n   "}
{"cat": "vehicle", "slot": "specialization", "value": "sedan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are sedan. \n        Output: ", "result": "\n```\nsedan,saloon,limousine,coupe,sports_car,hatchback,station_wagon,minivan,suv,crossover\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "vehicle", "slot": "specialization", "value": "amphibian", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are amphibian. \n        Output: ", "result": "\n        car, truck, bus, boat, submarine, amphibian, alligator, crocodile, turtle, snapping turtle \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are amphibian\"\n    words ="}
{"cat": "vehicle", "slot": "specialization", "value": "fighter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are fighter. \n        Output: ", "result": "\n        jet,fighter,fighter,jet,fighter,fighter,fighter,fighter,fighter,fighter. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are fighter'\n        words ="}
{"cat": "vehicle", "slot": "specialization", "value": "tanker plane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tanker plane. \n        Output: ", "result": "747, DC-10, KC-135, C-130, C-17, C-5, C-130J, C-130H. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are"}
{"cat": "vehicle", "slot": "specialization", "value": "biplane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are biplane. \n        Output: ", "result": "\n```\nSpad, Sopwith Camel, Fokker Triplane, Nieuport 11, Sopwith Pup, Royal Aircraft Factory S.E.5, Albatros D.Va, Fokker Dr.I, Morane-Saulnier L,"}
{"cat": "vehicle", "slot": "specialization", "value": "lorry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are lorry. \n        Output: ", "result": "1. Truck, 2. Lorries, 3. Lorry, 4. Lorries, 5. Lorries, 6. Lorries, 7. Lorries, 8. Lorries, 9. Lorries, 10. Lorries.\n    \"\"\"\n"}
{"cat": "vehicle", "slot": "specialization", "value": "micro car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are micro car. \n        Output: ", "result": "\n            Smart, Fiat, Mini, Toyota, Suzuki, Citroen, Peugeot, Renault, Hyundai, Kia\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are micro car\"\n    words = get_words("}
{"cat": "vehicle", "slot": "specialization", "value": "SUV", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are SUV. \n        Output: ", "result": "4x4, off-road, sport utility vehicle, all-terrain, all-weather, all-season, all-wheel-drive, all-wheel-steer, all-wheel-control, all-wheel-independent, all-wheel-susp"}
{"cat": "vehicle", "slot": "specialization", "value": "airbus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are airbus. \n        Output: ", "result": "\n        airbus,aircraft,airplane,jet,airliner,a380,a350,a340,a330,a320\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are airbus\"\n   "}
{"cat": "vehicle", "slot": "specialization", "value": "amphibious aircraft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are amphibious aircraft. \n        Output: ", "result": "\n```\naircraft, seaplane, amphibian, waterplane, flying boat, floatplane, hydroplane, duck, whale, porpoise\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "vehicle", "slot": "specialization", "value": "tender", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tender. \n        Output: ", "result": "\n        truck,tender,tenderize,tenderize,tender,tender,tender,tender,tender,tender,tender,tender,tender,tender,tender,tender,tender,tender,tender,tender,"}
{"cat": "vehicle", "slot": "specialization", "value": "airliner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are airliner. \n        Output: ", "result": "747, A380, A340, A330, A320, A310, A300, A390, A388\n    \"\"\"\n    airliner_vehicles = [\n        \"747\","}
{"cat": "vehicle", "slot": "specialization", "value": "hangar queen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are hangar queen. \n        Output: ", "result": "\n        helicopter, airplane, jet, boat, car, motorcycle, bicycle, train, submarine, hangar queen.\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are hangar queen\"\n    words = get_words(category, condition"}
{"cat": "vehicle", "slot": "specialization", "value": "fighter aircraft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are fighter aircraft. \n        Output: ", "result": "\n            F-15, F-16, F/A-18, F-22, F-35, F-14, F-22, F-15, F-16, F/A-18\n    \"\"\"\n    category = \"ve"}
{"cat": "vehicle", "slot": "specialization", "value": "propeller plane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are propeller plane. \n        Output: ", "result": "\n```\nCessna, Piper, Beechcraft, De Havilland, Cessna, Piper, Beechcraft, De Havilland, Cessna, Piper, Beechcraft, De Havilland\n```\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "seaplane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are seaplane. \n        Output: ", "result": "\n```\nseaplane, amphibian, hydroplane, floatplane, waterplane, airboat, flying boat, duck hunter, seaplane base, seaplane harbor\n```\nExplanation:\nThe words that belong to the category \"vehicle\" and"}
{"cat": "vehicle", "slot": "specialization", "value": "wagon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are wagon. \n        Output: ", "result": "\n        car, truck, van, bus, wagon, sedan, SUV, minivan, pickup, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are wagon\"\n    words = get_words(category, condition)\n    return \","}
{"cat": "vehicle", "slot": "specialization", "value": "bomber", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are bomber. \n        Output: ", "result": "\n        bomber,bomber,bomber,bomber,bomber,bomber,bomber,bomber,bomber,bomber,bomber,bomber,bomber,bomber,bomber,bomber"}
{"cat": "vehicle", "slot": "specialization", "value": "delta wing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are delta wing. \n        Output: ", "result": "\n        delta,wing,winglet,winglet,winglet,winglet,winglet,winglet,winglet,winglet. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are delta wing\"\n    words = get_words(category, condition)"}
{"cat": "vehicle", "slot": "specialization", "value": "hydroplane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are hydroplane. \n        Output: ", "result": "\n        plane,boat,ship,hydroplane,aircraft,watercraft,seaplane,\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "reconnaissance plane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are reconnaissance plane. \n        Output: ", "result": "\n            \n```"}
{"cat": "vehicle", "slot": "specialization", "value": "monoplane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are monoplane. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        words = []\n        for word in Category.objects.all():\n            if word.category == \"vehicle\" and word.type == \"monoplane\":\n                words.append(word.name"}
{"cat": "vehicle", "slot": "specialization", "value": "ski-plane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ski-plane. \n        Output: ", "result": "\n```\nski-plane, ski-lift, ski-resort, ski-rental, ski-shop, ski-pass, \nski-instructor, ski-tour, ski-trail\n```\nExplanation: The word `ski-plane` belongs to the"}
{"cat": "vehicle", "slot": "specialization", "value": "multiengine airplane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are multiengine airplane. \n        Output: ", "result": "737, 747, 757, 767, 777, 787, A300, A310, A320, A330, A340. \n        \"\"\"\n        category = 've"}
{"cat": "vehicle", "slot": "specialization", "value": "racing car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are racing car. \n        Output: ", "result": "\n            Ferrari, Lamborghini, Porsche, Audi, BMW, Mercedes-Benz, Nissan, Toyota, Honda, Chevrolet\n        \"\"\"\n        category = \"vehicle\"\n        condition = \"are racing car\"\n        words ="}
{"cat": "vehicle", "slot": "specialization", "value": "iceboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are iceboat. \n        Output: ", "result": "icesled, iceboat, iceyacht, icecutter, iceboat, iceyacht, icecutter, iceboat, iceyacht, icecutter\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are iceboat\"\n    words ="}
{"cat": "vehicle", "slot": "specialization", "value": "multiengine plane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are multiengine plane. \n        Output: ", "result": "737, 757, 767, 777, 787, A300, A310, A320, A330, A340\n    \"\"\"\n    category = \"vehicle\"\n    condition ="}
{"cat": "vehicle", "slot": "specialization", "value": "attack aircraft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are attack aircraft. \n        Output: ", "result": "\n        F-15, F-16, F-18, F-22, F-35, AV-8B, A-10, F/A-18, F-14\n    \"\"\"\n    category = \"vehicle\"\n    condition ="}
{"cat": "vehicle", "slot": "specialization", "value": "vintage car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are vintage car. \n        Output: ", "result": "1932, 1957, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968"}
{"cat": "vehicle", "slot": "specialization", "value": "lighter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are lighter. \n        Output: ", "result": "4x4, convertible, coupe, hatchback, hybrid, minivan, pickup, roadster, sedan, sports. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are lighter'\n        words = get_words(category, condition)"}
{"cat": "vehicle", "slot": "specialization", "value": "sledge", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are sledge. \n        Output: ", "result": "\n```\nsledge, sledgehammer, sled, sledding, sledges, sledging, sledgeway, sledger, sledgehammers\n```\n\nExplanation:\nThe words that belong to the category \"vehicle\" and satisfy the condition \""}
{"cat": "vehicle", "slot": "specialization", "value": "nuclear-powered ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are nuclear-powered ship. \n        Output: ", "result": "\n        aircraft carrier, submarine, nuclear-powered ship, nuclear-powered aircraft carrier, nuclear-powered submarine, nuclear-powered aircraft carrier, nuclear-powered submarine, nuclear-powered aircraft carrier, nuclear-powered submarine, nuclear-powered"}
{"cat": "vehicle", "slot": "specialization", "value": "power mower", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are power mower. \n        Output: ", "result": "\n```\nreel, trimmer, mower, chainsaw, weedwacker, blower, edger, hedgecutter, string trimmer, lawnmower\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "vehicle", "slot": "specialization", "value": "police car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are police car. \n        Output: ", "result": "\n        police,car,vehicle,patrol,officer,cruiser,chase,traffic,enforcement,duty\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are police car\"\n    words = get_words(category"}
{"cat": "vehicle", "slot": "specialization", "value": "electric car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are electric car. \n        Output: ", "result": "\n        Tesla, Nissan, Chevrolet, BMW, Ford, Toyota, Volkswagen, Audi, Hyundai, Kia\n    \"\"\"\n    electric_cars = [\n        \"Tesla\",\n        \"Nissan\",\n        \"Che"}
{"cat": "vehicle", "slot": "specialization", "value": "merchant ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are merchant ship. \n        Output: ", "result": "\n```\naircraft carrier, battleship, cruiser, destroyer, frigate, submarine, aircraft carrier, battleship, cruiser, destroyer, frigate\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "rig", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are rig. \n        Output: ", "result": "4x4, pickup, dump, semi, trailer, flatbed, tow, motorhome, bus, RV\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are rig\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "specialization", "value": "stock car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are stock car. \n        Output: ", "result": "4, 6, 8, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38,"}
{"cat": "vehicle", "slot": "specialization", "value": "passenger ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are passenger ship. \n        Output: ", "result": "\n```\npassenger,ship,ferry,boat,cruise,liner,vessel,yacht,ferryboat,cargo\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "articulated lorry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are articulated lorry. \n        Output: ", "result": "123, 456, 789, 1011, 1213, 1415, 1617, 1819, 2021, 2223, 2425, 2"}
{"cat": "vehicle", "slot": "specialization", "value": "patrol boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are patrol boat. \n        Output: ", "result": "\n        police,boat,patrol,water,vehicle,officer,harbor,port,guard,security\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"endangered\".\n        Provide a list of 1"}
{"cat": "vehicle", "slot": "specialization", "value": "packet boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are packet boat. \n        Output: ", "result": "\n```\nboat,packet,vehicle\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n       "}
{"cat": "vehicle", "slot": "specialization", "value": "tourer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tourer. \n        Output: ", "result": "\n        sports car, convertible, touring, sedan, hatchback, coupe, minivan, station wagon, pickup truck, minivan.\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are tourer\"\n    words = []\n    for"}
{"cat": "vehicle", "slot": "specialization", "value": "bogy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are bogy. \n        Output: ", "result": "\n        car, truck, van, bus, boat, motorcycle, bike, train, airplane, taxi\n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"boat\", \"motorcycle\","}
{"cat": "vehicle", "slot": "specialization", "value": "tandem", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tandem. \n        Output: ", "result": "\n        trailer, semi-trailer, tandem, tandem axle, tandem wheels, tandem drive, tandem steering, tandem suspension, tandem brakes, tandem axle spacings\n    \"\"\"\n    category = \"vehicle\"\n    condition ="}
{"cat": "vehicle", "slot": "specialization", "value": "water wagon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are water wagon. \n        Output: ", "result": "\n```\nwater,wagon,wagoner,wagonette,wagoneer,wagonette,wagoner,wagonette,wagonette,wagonette,wagonette,wagonette,wagonette,wagonette,wagonette,wagonette"}
{"cat": "vehicle", "slot": "specialization", "value": "pace car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are pace car. \n        Output: ", "result": "\n            1. pace\n            2. car\n            3. vehicle\n            4. racetrack\n            5. driver\n            6. lead\n            7. escort\n            8. guide\n            9. conduct\n            10. chauffeur\n        \"\"\"\n        category = \""}
{"cat": "vehicle", "slot": "specialization", "value": "tramcar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tramcar. \n        Output: ", "result": "\n```\ntramcar, trolley, streetcar, tram, railcar, trackless trolley,\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "tipper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tipper. \n        Output: ", "result": "1. tipper, 2. tipper, 3. tipper, 4. tipper, 5. tipper, 6. tipper, 7. tipper, 8. tipper, 9. tipper, 10. tipper.\n    \"\"\"\n"}
{"cat": "vehicle", "slot": "specialization", "value": "heap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are heap. \n        Output: ", "result": "\n        car, truck, van, bus, train, boat, plane, motorcycle, bike, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are heap\"\n    words = get_words(category, condition)\n    return \", \".join("}
{"cat": "vehicle", "slot": "specialization", "value": "scooter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are scooter. \n        Output: ", "result": "50cc, 150cc, 300cc, 500cc, 750cc, 1000cc, 125cc, 200cc, 250cc, 300cc, 400cc"}
{"cat": "vehicle", "slot": "specialization", "value": "steamship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are steamship. \n        Output: ", "result": "\n```\nsteamship, paddlewheel, sternwheel, screw, propeller, turbine, tugboat, ferry, cruise ship, ocean liner\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category"}
{"cat": "vehicle", "slot": "specialization", "value": "tugboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tugboat. \n        Output: ", "result": "\n```\ntugboat,tug,tugboat,tugboat,tugboat,tugboat,tugboat,tugboat,tugboat,tugboat\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "blimp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are blimp. \n        Output: ", "result": "1. blimp, 2. airship, 3. zeppelin, 4. dirigible, 5. airship, 6. blimp, 7. airship, 8. zeppelin, 9. dirigible, 10. airship.\n   "}
{"cat": "vehicle", "slot": "specialization", "value": "gunboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are gunboat. \n        Output: ", "result": "\n```\ngunboat, destroyer, battleship, cruiser, submarine, aircraft carrier, frigate, corvette, patrol boat, amphibious assault ship\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "police cruiser", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are police cruiser. \n        Output: ", "result": "\n```\npolice,cruiser,patrol,car,vehicle,officer,patrolman,patrolcar,cruisercar,cruisecar\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "sailing vessel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are sailing vessel. \n        Output: ", "result": "\n```\nyacht, sailboat, ship, boat, dinghy, catamaran, canoe, kayak, paddleboard, ferry\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "vehicle", "slot": "specialization", "value": "sleigh", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are sleigh. \n        Output: ", "result": "\n```\nsleigh, reindeer, Santa, North Pole, Christmas, holly, snow, bell, jingle, elf\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "vehicle", "slot": "specialization", "value": "safety bicycle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are safety bicycle. \n        Output: ", "result": "1. bicycle, 2. safety, 3. bicycle, 4. safety, 5. bicycle, 6. safety, 7. bicycle, 8. safety, 9. bicycle, 10. safety. \n        \"\"\""}
{"cat": "vehicle", "slot": "specialization", "value": "squad car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are squad car. \n        Output: ", "result": "\n```\nsquad,car,vehicle,police,cruiser,patrol,unit,transportation,vehicle\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "slave ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are slave ship. \n        Output: ", "result": "\n            1. Slave\n            2. Ship\n            3. Cargo\n            4. Hold\n            5. Deck\n            6. Hatch\n            7. Captain\n            8. Crew\n            9. Owner\n            10. Trade\n```\n\n```\n"}
{"cat": "vehicle", "slot": "specialization", "value": "dozer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are dozer. \n        Output: ", "result": "\n        bulldozer, dump truck, excavator, forklift, loader, backhoe, crane, dump truck, bulldozer, excavator\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are dozer\"\n    words"}
{"cat": "vehicle", "slot": "specialization", "value": "hardtop", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are hardtop. \n        Output: ", "result": "\n        convertible, coupe, hatchback, hardtop, sedan, sports car, station wagon, SUV, minivan, pickup\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are hardtop\"\n    words = get_words(category, condition"}
{"cat": "vehicle", "slot": "specialization", "value": "subcompact car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are subcompact car. \n        Output: ", "result": "\n        hatchback,sedan,subcompact,hybrid,electric,SUV,minivan,truck,crossover,compact\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are subcompact car\"\n    words = get_"}
{"cat": "vehicle", "slot": "specialization", "value": "taxicab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are taxicab. \n        Output: ", "result": "\n```\ntaxi, cab, ride, hail, fare, meter, driver, yellow, hire\n```\nExplanation: The word \"taxi\" satisfies the condition \"are taxicab\" and belongs to the category \"vehicle\".\n```python\ndef get_words("}
{"cat": "vehicle", "slot": "specialization", "value": "weather ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are weather ship. \n        Output: ", "result": "\n        ship,sail,salty,sea,sky,storm,wave,weather,wind\n\"\"\"\n\n# Define the function\ndef get_vehicle_weather_words(category, condition):\n    # Split the condition into words\n    condition_words ="}
{"cat": "vehicle", "slot": "specialization", "value": "troopship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are troopship. \n        Output: ", "result": "\n        aircraft carrier, battleship, cruiser, destroyer, frigate, amphibious assault ship, landing craft, submarine, aircraft, troop.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words"}
{"cat": "vehicle", "slot": "specialization", "value": "tow truck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tow truck. \n        Output: ", "result": "1. tow, 2. truck, 3. vehicle, 4. roadside, 5. assistance, 6. operator, 7. wrecker, 8. recovery, 9. transport, 10. recovery.\n    \"\"\"\n    category = \"ve"}
{"cat": "vehicle", "slot": "specialization", "value": "cutter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are cutter. \n        Output: ", "result": "\n        car, cutter, cutter, cutter, cutter, cutter, cutter, cutter, cutter. \n    \"\"\"\n    cutter_words = [\"cutter\", \"cutter\", \"cutter\", \"cutter\", \"cutter\", \"cutter\", \""}
{"cat": "vehicle", "slot": "specialization", "value": "cruise missile", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are cruise missile. \n        Output: ", "result": "\n            1. Cruise\n            2. Missile\n            3. Guided\n            4. Unmanned\n            5. Autonomous\n            6. Precision\n            7. Strike\n            8. Long-range\n            9. Subsonic\n            10."}
{"cat": "vehicle", "slot": "specialization", "value": "punt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are punt. \n        Output: ", "result": "4x4, off-road, all-terrain, all-wheel-drive, four-wheel-drive, four-by-four, four-by-four, four-by-four, four-by-four. \n        \"\"\"\n        category = 'vehicle'"}
{"cat": "vehicle", "slot": "specialization", "value": "skibob", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are skibob. \n        Output: ", "result": "\n        skibob, skibobster, skibobster, skibobster, skibobster, skibobster, skibobster, skibobster, skibobster, skibobster \n    \"\"\"\n    words = []\n    for word in"}
{"cat": "vehicle", "slot": "specialization", "value": "tandem bicycle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tandem bicycle. \n        Output: ", "result": "\n```\ntandem,bicycle,tandem-bicycle,two-wheeler,tandem-two-wheeler,tandem-bicycle-tandem-bicycle,tandem-bicycle-two-wheeler,tandem-bicy"}
{"cat": "vehicle", "slot": "specialization", "value": "packet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are packet. \n        Output: ", "result": "\n```\ncar, truck, van, bus, train, boat, plane, bike, motorcycle, taxi\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "hovercraft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are hovercraft. \n        Output: ", "result": "\n        hovercraft, air cushion vehicle, air-cushion vehicle, hovercraft vehicle, hovercraft air cushion, hovercraft air cushion vehicle, hovercraft vehicle air cushion, hovercraft vehicle air cushion, hovercraft air cushion vehicle, hovercraft air"}
{"cat": "vehicle", "slot": "specialization", "value": "covered wagon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are covered wagon. \n        Output: ", "result": "\n        covered,wagon,wagons,wagon,wagons,covered,wagon,wagons,covered,wagon,wagons. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are covered wagon'\n        words"}
{"cat": "vehicle", "slot": "specialization", "value": "pirate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are pirate. \n        Output: ", "result": "\n          car, ship, treasure, map, compass, pirate, plundering, Jolly Roger,\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "steamboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are steamboat. \n        Output: ", "result": "\n```\nsteamboat, paddlewheel, sternwheel, sidewheel, screw, propeller, sternwheel, paddlewheel, sidewheel, screw\n```\nExplanation: The words that belong to the category \"vehicle\" and satisfy the"}
{"cat": "vehicle", "slot": "specialization", "value": "rocket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are rocket. \n        Output: ", "result": "\n        car, rocket, spacecraft, satellite, missile, jet, plane, helicopter, submarine, rocketship\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are rocket\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "specialization", "value": "prowl car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are prowl car. \n        Output: ", "result": "\n        car, police, prowl, cruiser, patrol, squad, unit, vehicle, law, enforcement. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are prowl car\"\n    words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "specialization", "value": "yacht", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are yacht. \n        Output: ", "result": "\n```\nyacht, speedboat, motorboat, sailboat, catamaran, powerboat, luxury yacht, superyacht, mega yacht, sailing yacht\n```\nExplanation: The words that belong to the category \"vehicle\" and"}
{"cat": "vehicle", "slot": "specialization", "value": "jumbojet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are jumbojet. \n        Output: ", "result": "747, A380, A340, A330, A320, A310, A300, A390, A388\n    \"\"\"\n    category = 'vehicle'\n    condition = 'are jumbo"}
{"cat": "vehicle", "slot": "specialization", "value": "sport car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are sport car. \n        Output: ", "result": " Ferrari, Lamborghini, Porsche, Audi, BMW, Mercedes-Benz, Maserati, Jaguar, Aston Martin, Lotus. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are sport car'\n        words ="}
{"cat": "vehicle", "slot": "specialization", "value": "narrow boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are narrow boat. \n        Output: ", "result": "\n            narrowboat,narrow,boat,canal,narrowboat,narrow,boat,canal,narrow,boat,narrowboat,narrow,boat,canal,narrowboat,narrow,boat,canal,n"}
{"cat": "vehicle", "slot": "specialization", "value": "sports car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are sports car. \n        Output: ", "result": "\n            Ferrari, Lamborghini, Porsche, Audi, BMW, Mercedes-Benz, Maserati, Jaguar, Aston Martin, Lotus\n        \"\"\"\n        category = \"vehicle\"\n        condition = \"are sports car\"\n        words ="}
{"cat": "vehicle", "slot": "specialization", "value": "three-decker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are three-decker. \n        Output: ", "result": "3-wheeler, 4-wheeler, 5-wheeler, 6-wheeler, 7-wheeler, 8-wheeler, 9-wheeler, 10-wheeler, 11-wheeler,"}
{"cat": "vehicle", "slot": "specialization", "value": "flatboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are flatboat. \n        Output: ", "result": "\n```\nflatboat, keelboat, pontoon, raft, skiff, canoe, kayak, dinghy, catamaran, trimaran\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "vehicle", "slot": "specialization", "value": "fireboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are fireboat. \n        Output: ", "result": "\n```\nfireboat, pumper, hose, nozzle, water, extinguisher, deck, pump, hose reel, fire hydrant\n```\nExplanation: The words that belong to the category \"vehicle\" and satisfy the condition \"are fire"}
{"cat": "vehicle", "slot": "specialization", "value": "cruiser", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are cruiser. \n        Output: ", "result": "\n```\ncruiser, convertible, sedan, hatchback, coupe, minivan, truck, SUV, van, wagon\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "vehicle", "slot": "specialization", "value": "camion", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are camion. \n        Output: ", "result": "1. camion, 2. camion, 3. camion, 4. camion, 5. camion, 6. camion, 7. camion, 8. camion, 9. camion, 10. camion.\n    \"\"\"\n"}
{"cat": "vehicle", "slot": "specialization", "value": "mountain bike", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are mountain bike. \n        Output: ", "result": "26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, "}
{"cat": "vehicle", "slot": "specialization", "value": "canal boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are canal boat. \n        Output: ", "result": "\n```\nboat, dock, canal, lock, horse, barge, towpath, inland, waterway\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated"}
{"cat": "vehicle", "slot": "specialization", "value": "cab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are cab. \n        Output: ", "result": "\n```\ncab, car, van, truck, bus, taxi, limo, shuttle, minivan\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma"}
{"cat": "vehicle", "slot": "specialization", "value": "ferry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ferry. \n        Output: ", "result": "\n        ferry,boat,ship,ferryboat,ferryship,ferryboatship,ferryshipboat,ferryboatshipboat,ferryshipboatboat,ferryboatshipboatboat\n    \"\"\"\n    ferry_"}
{"cat": "vehicle", "slot": "specialization", "value": "shipwreck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are shipwreck. \n        Output: ", "result": "\n```\nboat, ship, sinking, wreck, rescue, survivor, captain, crew, lifeboat\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "vehicle", "slot": "specialization", "value": "trucking rig", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are trucking rig. \n        Output: ", "result": "1. Truck, 2. Rig, 3. Semi, 4. Tractor, 5. Trailer, 6. Semi-trailer, 7. Heavy-duty, 8. Articulated, 9. Long-haul, "}
{"cat": "vehicle", "slot": "specialization", "value": "tip truck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tip truck. \n        Output: ", "result": "\n        dump, truck, tipper, tipper, tipper, tipper, tipper, tipper, tipper, tipper. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are tip truck'\n        words = []\n        for word in"}
{"cat": "vehicle", "slot": "specialization", "value": "fanjet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are fanjet. \n        Output: ", "result": "727, 737, 747, 757, 767, 777, 787, A300, A310, A320, A330, A340, A380\n"}
{"cat": "vehicle", "slot": "specialization", "value": "milk wagon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are milk wagon. \n        Output: ", "result": "\n        milk,wagon,milkman,milkmaid,milk-cart,milk-wagon,milk-cart,milk-maid,milk-wagon,milk-cart,milk-maid,milk-wagon,milk-"}
{"cat": "vehicle", "slot": "specialization", "value": "tow car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tow car. \n        Output: ", "result": "4x4, estate, hatchback, MPV, people carrier, saloon, sports, SUV, van, wagon. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are tow car'\n        words = get_words(category, condition"}
{"cat": "vehicle", "slot": "specialization", "value": "fishing boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are fishing boat. \n        Output: ", "result": "\n```\nboat,fishing,hull,deck,motor,propeller,anchor,rope,net,tackle\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "horseless carriage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are horseless carriage. \n        Output: ", "result": "\n        horseless, carriage, automobile, truck, bus, train, airplane, boat, motorcycle, bicycle.\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are horseless carriage\"\n    words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "specialization", "value": "cargo vessel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are cargo vessel. \n        Output: ", "result": "\n            1. Container\n            2. Cargo\n            3. Vessel\n            4. Ship\n            5. Freight\n            6. Maritime\n            7. Transport\n            8. Logistics\n            9. Ocean\n            10. Carrier\n        \"\"\"\n        category"}
{"cat": "vehicle", "slot": "specialization", "value": "patrol car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are patrol car. \n        Output: ", "result": "\n        patrol,car,vehicle,police,officer,patrolman,patrolwoman,patrolcar,patrolvehicle,patrol-car,patrol-vehicle,police-car,police-vehicle,patrol-"}
{"cat": "vehicle", "slot": "specialization", "value": "horsecar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are horsecar. \n        Output: ", "result": "\n        horse\n        car\n        carriage\n        buggy\n        coach\n        chariot\n        cart\n        wagon\n        dray\n        coachman\n    \"\"\"\n    words = [\"horse\", \"car\", \"carriage\", \"buggy\", \"coach\", \"ch"}
{"cat": "vehicle", "slot": "specialization", "value": "car transporter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are car transporter. \n        Output: ", "result": "\n        car,truck,semi,trailer,transport,haul,carrier,vehicle,transporter,semi-trailer\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are car transporter\"\n    words = get_words(category"}
{"cat": "vehicle", "slot": "specialization", "value": "jetliner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are jetliner. \n        Output: ", "result": "787, A380, A350, A330, A320, A310, A300, A390, A388\n    \"\"\"\n    category = 'vehicle'\n    condition = 'are jetliner"}
{"cat": "vehicle", "slot": "specialization", "value": "hot-rod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are hot-rod. \n        Output: ", "result": "350, 440, 454, 460, 496, 502, 572, 588, 612, 620\n    \"\"\"\n    category = \"vehicle\"\n    condition ="}
{"cat": "vehicle", "slot": "specialization", "value": "bus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are bus. \n        Output: ", "result": "\n```\nbus, coach, lorry, minibus, double-decker, single-decker, articulated, motorcycle, scooter, van\n```\nExplanation:\nThe words that belong to the category \"vehicle\" and satisfy the condition \"are bus\" are"}
{"cat": "vehicle", "slot": "specialization", "value": "motorboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are motorboat. \n        Output: ", "result": "\n```\nmotorboat, speedboat, yacht, sailboat, powerboat, cruise ship, ferry, pontoon, hovercraft, watercraft\n```\nExplanation:\n\n1. The category is \"vehicle\".\n2. The condition is"}
{"cat": "vehicle", "slot": "specialization", "value": "electric", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are electric. \n        Output: ", "result": "\n        Tesla, Nissan, Chevrolet, BMW, Ford, Toyota, Volkswagen, Audi, Hyundai, Kia\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are electric\"\n    words = get_words(category"}
{"cat": "vehicle", "slot": "specialization", "value": "wain", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are wain. \n        Output: ", "result": "\n```\ncar, truck, van, bus, train, boat, plane, motorcycle, bicycle\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "minicab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are minicab. \n        Output: ", "result": "\n        car, van, taxi, minibus, minicab, limousine, bus, truck, ambulance, police car.\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are minicab\"\n    words = get_words(category,"}
{"cat": "vehicle", "slot": "specialization", "value": "ferryboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ferryboat. \n        Output: ", "result": "\n```\nferry,\nboat,\nwater,\ntransportation,\ncrossing,\nvehicle,\npassenger,\nferryboat,\n\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "junk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are junk. \n        Output: ", "result": "\n            car, truck, van, bike, bus, train, boat, plane, motorcycle, taxi\n\"\"\"\n\n# Define the function\ndef get_junk_vehicle_words(category, condition):\n    # Create an empty list to store the words\n   "}
{"cat": "vehicle", "slot": "specialization", "value": "coupe", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are coupe. \n        Output: ", "result": "225i, 330i, 440i, 550i, 660i, 770i, 880i, 990i, M135i, M235i.\n    \"\"\"\n   "}
{"cat": "vehicle", "slot": "specialization", "value": "towboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are towboat. \n        Output: ", "result": "1. Barge, 2. Barges, 3. Towboat, 4. Towboats, 5. Towboating, 6. Towboat driver, 7. Towboat drivers, 8. Towboat operator, 9. Towboat operators"}
{"cat": "vehicle", "slot": "specialization", "value": "dump truck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are dump truck. \n        Output: ", "result": "1. dump, 2. truck, 3. vehicle, 4. haul, 5. load, 6. carry, 7. cargo, 8. dumpster, 9. debris, 10. waste\n    \"\"\"\n    category = \"veh"}
{"cat": "vehicle", "slot": "specialization", "value": "racing yacht", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are racing yacht. \n        Output: ", "result": "420,460,421,461,422,462,423,463,424,464,425,465,426,466,427,467,"}
{"cat": "vehicle", "slot": "specialization", "value": "ballistic capsule", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ballistic capsule. \n        Output: ", "result": "\n        ballistic, capsule, bulletproof, armor, shield, protection, fortification, bunker, \n        shielding, fortification\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are ballistic capsule\"\n    words = []\n    for word"}
{"cat": "vehicle", "slot": "specialization", "value": "milkwagon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are milkwagon. \n        Output: ", "result": "1. Milk, 2. Wagon, 3. Milkman, 4. Milkmaid, 5. Milk delivery, 6. Milk depot, 7. Milk churn, 8. Milk can, 9. Milk crate,"}
{"cat": "vehicle", "slot": "specialization", "value": "gas guzzler", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are gas guzzler. \n        Output: ", "result": "\n        sports car, convertible, muscle car, luxury car, exotic car, SUV, minivan, pickup truck, sedan, coupe.\n    \"\"\"\n    gas_guzzler_words = [\n        \"sports car\",\n        \"convertible\",\n"}
{"cat": "vehicle", "slot": "specialization", "value": "gas-turbine ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are gas-turbine ship. \n        Output: ", "result": "\n            1. Turbine\n            2. Gas\n            3. Ship\n            4. Propulsion\n            5. Marine\n            6. Aviation\n            7. Aircraft\n            8. Jet\n            9. Marine\n            10. Power\n```\nExample:\n```python"}
{"cat": "vehicle", "slot": "specialization", "value": "trail bike", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are trail bike. \n        Output: ", "result": "250, 450, 50, 150, 250F, 250XC, 300, 350, 450XC, 500, 505, 530, "}
{"cat": "vehicle", "slot": "specialization", "value": "bulldozer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are bulldozer. \n        Output: ", "result": "\n        bulldozer, dump truck, excavator, forklift, loader, backhoe, crane, bulldozer, dump truck, excavator, forklift, loader, backhoe, crane, bulldozer, dump truck, exc"}
{"cat": "vehicle", "slot": "specialization", "value": "school bus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are school bus. \n        Output: ", "result": "\n```\nbus, school, yellow, transportation, children, seat, wheels, stop, route, safety\n```\nExplanation: The words that belong to the category \"vehicle\" and satisfy the condition \"are school bus\" are \"bus, school, yellow, transportation, children"}
{"cat": "vehicle", "slot": "specialization", "value": "fan-jet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are fan-jet. \n        Output: ", "result": "727, DC-9, MD-80, 737, 757, 767, 777, 787, A300, A310, A320, A330, A340, A"}
{"cat": "vehicle", "slot": "specialization", "value": "powerboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are powerboat. \n        Output: ", "result": "\n```\npowerboat, speedboat, motorboat, yacht, cruise, jetski, watercraft, boat, pontoon, sailboat\n```\nExplanation:\n\n* The category is \"vehicle\"\n* The condition is \"are powerboat"}
{"cat": "vehicle", "slot": "specialization", "value": "gypsy cab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are gypsy cab. \n        Output: ", "result": "\n        taxi, cab, gypsy, horse, carriage, rickshaw, tuk-tuk, auto, shuttle, limo\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are gypsy cab\"\n    words = get_words"}
{"cat": "vehicle", "slot": "specialization", "value": "trolley coach", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are trolley coach. \n        Output: ", "result": "\n        trolley, coach, trolleybus, tram, trackless, trolleybus, streetcar, \n        trackless, trolleybus, tram, trackless, trolleybus, tram, trackless, \n        trolleybus, tram, trackless"}
{"cat": "vehicle", "slot": "specialization", "value": "hand mower", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are hand mower. \n        Output: ", "result": "\n```\nmower,blade,handle,rear,wheel,push,cut,grass,manual\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list"}
{"cat": "vehicle", "slot": "specialization", "value": "fishing vessel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are fishing vessel. \n        Output: ", "result": "\n        fishing\\_boat, trawler, dredger, barge, tugboat, ferry, cargo\\_ship, research\\_vessel, yacht, cruise\\_ship\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are fishing vessel"}
{"cat": "vehicle", "slot": "specialization", "value": "police boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are police boat. \n        Output: ", "result": "\n```\npolice,boat,vessel,watercraft,craft,barge,patrol,harbor,port,dock\n```\nExplanation: The word `police` belongs to the category `vehicle` and satisfies the condition of being a `police boat`."}
{"cat": "vehicle", "slot": "specialization", "value": "jet plane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are jet plane. \n        Output: ", "result": "747, 757, 767, 777, 787, A380, A330, A320, A310, A300\n    \"\"\"\n    category = 'vehicle'\n    condition ="}
{"cat": "vehicle", "slot": "specialization", "value": "sausage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are sausage. \n        Output: ", "result": "\n        car, truck, van, bus, motorcycle, bike, train, boat, airplane, subway\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are sausage\"\n    words = get_words(category, condition)\n    print(\", \"."}
{"cat": "vehicle", "slot": "specialization", "value": "steamroller", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are steamroller. \n        Output: ", "result": "\n```\nsteamroller, steamroller, steamroller, steamroller, steamroller, steamroller, steamroller, steamroller, steamroller\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "narrowboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are narrowboat. \n        Output: ", "result": "\n        narrowboat,narrow,boat,canal,narrowboat,narrow,boat,canal,narrowboat,narrow,boat,canal,narrowboat,narrow,boat,canal,narrowboat,narrow"}
{"cat": "vehicle", "slot": "specialization", "value": "minesweeper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are minesweeper. \n        Output: ", "result": "1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    \"\"\"\n    words = []\n    for i in range(1, 10):\n        for j in range(1, 10):\n"}
{"cat": "vehicle", "slot": "specialization", "value": "longboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are longboat. \n        Output: ", "result": "\n        longboat, motorboat, canoe, kayak, rowboat, sailboat, yacht, speedboat, powerboat, dinghy\n```\n\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "trolleybus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are trolleybus. \n        Output: ", "result": "\n        tram, trolleybus, streetcar, trackless trolley, articulated bus, double-decker bus, single-decker bus, hybrid bus, electric bus, diesel bus.\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are"}
{"cat": "vehicle", "slot": "specialization", "value": "cart", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are cart. \n        Output: ", "result": "\n        car, truck, van, bus, wagon, cart, buggy, rickshaw, trolley, taxi.\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are cart\"\n    words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "specialization", "value": "electric automobile", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are electric automobile. \n        Output: ", "result": "\n        Tesla, Nissan, Chevrolet, BMW, Ford, Toyota, Volkswagen, Audi, Hyundai, Kia\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are electric automobile\"\n    words = get_words"}
{"cat": "vehicle", "slot": "specialization", "value": "derelict", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are derelict. \n        Output: ", "result": "\n        car,truck,van,boat,plane,train,bus,motorcycle,jeep,derelict\n```\n\n```\nDescribe a scenario where the input is a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "vehicle", "slot": "specialization", "value": "hospital ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are hospital ship. \n        Output: ", "result": "\n        aircraft carrier, destroyer, frigate, hospital ship, submarine, aircraft, helicopter, ambulance, medical team, medical supplies. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are hospital ship'\n        words = []\n       "}
{"cat": "vehicle", "slot": "specialization", "value": "supply ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are supply ship. \n        Output: ", "result": "\n            1. Supply\n            2. Ship\n            3. Replenishment\n            4. Logistics\n            5. Provision\n            6. Cargo\n            7. Vessel\n            8. Transport\n            9. Convoy\n            10. Fleet\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "fire truck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are fire truck. \n        Output: ", "result": "1. Engine, 2. Hose, 3. Ladder, 4. Pumper, 5. Fire hydrant, 6. Fire extinguisher, 7. Fire department, 8. Fire station, 9. Firefighter, 10. Fire"}
{"cat": "vehicle", "slot": "specialization", "value": "pilot boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are pilot boat. \n        Output: ", "result": "\n```\npilot,boat,pilotage,pilotage,pilot,boat,pilot,boat,pilot,boat,pilot\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "projectile", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are projectile. \n        Output: ", "result": " bullet, missile, shell, cannonball, dart, arrow, spear, slingshot, catapult, trebuchet.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "vehicle", "slot": "specialization", "value": "tipper truck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tipper truck. \n        Output: ", "result": "\n        tipper, tipper, tipper, tipper, tipper, tipper, tipper, tipper, tipper, tipper. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are tipper truck'\n        words = []\n        for"}
{"cat": "vehicle", "slot": "specialization", "value": "dirt bike", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are dirt bike. \n        Output: ", "result": "250SX, CRF250X, CRF450X, YZ250F, YZ450F, KX250, KX450, KTM250SXF, KTM450SXF,"}
{"cat": "vehicle", "slot": "specialization", "value": "Conestoga wagon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are Conestoga wagon. \n        Output: ", "result": "\n```\nwagon, Conestoga, covered, cargo, transportation, Pennsylvania, 18th century, wooden, wheels\n```\nExplanation: The words that belong to the category \"vehicle\" and satisfy the condition \"are Conestoga wagon\" are \"wagon"}
{"cat": "vehicle", "slot": "specialization", "value": "skidder", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are skidder. \n        Output: ", "result": "\n        skidder,skidder,skidder,skidder,skidder,skidder,skidder,skidder,\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "garbage truck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are garbage truck. \n        Output: ", "result": "1. Garbage, 2. Truck, 3. Collection, 4. Vehicle, 5. Garbage\\_truck, 6. Sanitation, 7. Waste, 8. Removal, 9. Dumpster, 10. Bin.\n"}
{"cat": "vehicle", "slot": "specialization", "value": "transporter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are transporter. \n        Output: ", "result": "\n```\ncar, truck, van, bus, train, subway, taxi, boat, plane, ship\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "vehicle", "slot": "specialization", "value": "turbojet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are turbojet. \n        Output: ", "result": "787, A380, 777, A330, A320, A310, A300, A390, A340\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are turbojet"}
{"cat": "vehicle", "slot": "specialization", "value": "sister ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are sister ship. \n        Output: ", "result": "\n            \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are sister ship'\n        words = get_words(category, condition)\n        return ', '.join(words)\n\n    @staticmethod\n    def describe_category_vehicle():\n        \"\"\""}
{"cat": "vehicle", "slot": "specialization", "value": "secondhand car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are secondhand car. \n        Output: ", "result": "4x4, convertible, hatchback, sedan, sports car, station wagon, SUV, truck, van. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are secondhand car'\n        words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "specialization", "value": "sound truck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are sound truck. \n        Output: ", "result": "1. truck, 2. sound, 3. trucks, 4. sounds, 5. trucking, 6. sounding, 7. trucks, 8. sounds, 9. truck, 10. sound.\n    \"\"\"\n   "}
{"cat": "vehicle", "slot": "specialization", "value": "touring car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are touring car. \n        Output: ", "result": "4x4, sedan, convertible, coupe, hatchback, minivan, pickup, sports car, station wagon, utility vehicle. \n        \"\"\"\n        category = Category.objects.get(name='vehicle')\n        condition = Condition.objects.get(name"}
{"cat": "vehicle", "slot": "specialization", "value": "minivan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are minivan. \n        Output: ", "result": "\n        minivan, minivan, minivan, minivan, minivan, minivan, minivan, minivan, minivan. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are minivan'\n        words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "specialization", "value": "limo", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are limo. \n        Output: ", "result": "\n```\nlimo, sedan, car, SUV, van, truck, bus, taxi, shuttle, minibus\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated"}
{"cat": "vehicle", "slot": "specialization", "value": "cargo helicopter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are cargo helicopter. \n        Output: ", "result": "\n        helicopter,chopper,cargo,heliport,helicopter-landing-pad,helicopter-hangar,helicopter-maintenance,helicopter-engine,helicopter-rotor,helicopter-blade\n    \"\"\"\n   "}
{"cat": "vehicle", "slot": "specialization", "value": "ship's boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ship's boat. \n        Output: ", "result": "\n        ship,boat,sea,ocean,captain,crew,deck,hull,propeller,rudder \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are ship's boat\"\n    words = []\n    for word in"}
{"cat": "vehicle", "slot": "specialization", "value": "semi", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are semi. \n        Output: ", "result": "1. semi, 2. trailer, 3. tractor, 4. trailer, 5. semi-trailer, 6. tractor-trailer, 7. semi-trailer truck, 8. big rig, 9. 18-whe"}
{"cat": "vehicle", "slot": "specialization", "value": "tug", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tug. \n        Output: ", "result": "\n```\ntug,boat,tractor,truck,barge,bulldozer,crawler,digger,shovel,excavator\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "vehicle", "slot": "specialization", "value": "minicar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are minicar. \n        Output: ", "result": "\n        car, hatchback, sedan, compact, economy, mini, subcompact, compact, hatch, sedan\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are minicar\"\n    words = get_words(category, condition)\n    return \","}
{"cat": "vehicle", "slot": "specialization", "value": "bareboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are bareboat. \n        Output: ", "result": "4x4, ATV, boat, jetski, motorhome, RV, sailboat, speedboat, yacht\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are bareboat\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "specialization", "value": "wrecker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are wrecker. \n        Output: ", "result": "1. Wrecker, 2. Recovery, 3. Towing, 4. Breakdown, 5. Winch, 6. Jack, 7. Flatbed, 8. Chain, 9. Crane, 10. Load.\n    \"\"\"\n"}
{"cat": "vehicle", "slot": "specialization", "value": "dumper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are dumper. \n        Output: ", "result": "4x4, dump, truck, tipper, payload, hydraulic, crane, excavator, loader, bulldozer.\n    \"\"\"\n    category = 'vehicle'\n    condition = 'are dumper'\n    words = get_words(category"}
{"cat": "vehicle", "slot": "specialization", "value": "steamer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are steamer. \n        Output: ", "result": "\n            car, truck, steamroller, steamboat, steamshovel, steamtrain, steamship, steamcar, steamroller, steamboat\n\"\"\"\n\n# Define the category and condition\ncategory = \"vehicle\"\ncondition = \"are steamer\"\n\n#"}
{"cat": "vehicle", "slot": "specialization", "value": "abandoned ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are abandoned ship. \n        Output: ", "result": "\n```\nabandon, anchor, derelict, hull, keel, mast, rigging, sail, shipwreck, vessel\n```\nExplanation:\n\n1. The category is \"vehicle\".\n2. The condition is \"are abandoned\".\n3. The"}
{"cat": "vehicle", "slot": "specialization", "value": "bogey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are bogey. \n        Output: ", "result": "\n```\ncar, truck, bus, train, boat, plane, bike, motorcycle, scooter\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list"}
{"cat": "vehicle", "slot": "specialization", "value": "road roller", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are road roller. \n        Output: ", "result": "1. Roller, 2. Road, 3. Roller, 4. Road, 5. Roller, 6. Road, 7. Roller, 8. Road, 9. Roller, 10. Road.\n    \"\"\"\n    words = []\n"}
{"cat": "vehicle", "slot": "specialization", "value": "twinjet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are twinjet. \n        Output: ", "result": "787, A380, A350, A330, A320, A310, A300, A390, A340\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are twinjet"}
{"cat": "vehicle", "slot": "specialization", "value": "compact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are compact. \n        Output: ", "result": "\n        car, van, truck, bus, minivan, SUV, compact car, compact van, compact truck, compact bus.\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are compact\"\n    words = get_words(category, condition)\n   "}
{"cat": "vehicle", "slot": "specialization", "value": "wreck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are wreck. \n        Output: ", "result": "\n        car,truck,accident,crash,wreck,damage,repair,insurance,crash,accident\n```\n\n```\nDescribe a scenario where the input is a list of strings, where each string is a category and a list of words that belong to that"}
{"cat": "vehicle", "slot": "specialization", "value": "guard boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are guard boat. \n        Output: ", "result": "\n```\nguard boat, patrol boat, security boat, protection boat, defense boat, surveillance boat, watch boat, monitor boat, safeguard boat\n```\nExplanation:\nThe words that belong to the category \"vehicle\" and satisfy the condition \"are guard boat\" are"}
{"cat": "vehicle", "slot": "specialization", "value": "Model T", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are Model T. \n        Output: ", "result": "\n        Model T, Model A, Model T, Model T, Model T, Model T, Model T, Model T, Model T, Model T \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are Model T\"\n    words = get_words(category, condition"}
{"cat": "vehicle", "slot": "specialization", "value": "gondola", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are gondola. \n        Output: ", "result": "\n```\ngondola, boat, Venice, transportation, water, Italy, scenic, tourist,\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "vehicle", "slot": "specialization", "value": "phaeton", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are phaeton. \n        Output: ", "result": "\n        horse-drawn carriage. \n        landaulet. \n        brougham. \n        tilbury. \n        barouche. \n        phaeton. \n        victoria. \n        berline. \n        coup\u00e9 de ville. \n"}
{"cat": "vehicle", "slot": "specialization", "value": "Conestoga", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are Conestoga. \n        Output: ", "result": "\n        trailer, wagon, covered, load, wheels, axle, frame, wooden, cargo, Conestoga. \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are Conestoga\"\n    words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "specialization", "value": "minibike", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are minibike. \n        Output: ", "result": "50, 125, 250, 500, 750, 1000, 1250, 1500, 2000, 2500, 3000.\n    \"\"\"\n   "}
{"cat": "vehicle", "slot": "specialization", "value": "landing craft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are landing craft. \n        Output: ", "result": "\n            Amphibious, Assault, Dock, Landing, Craft, Ship, Beach, Invasion, Navy, Seaworthy. \n        Explanation: \n            Amphibious, Assault, Dock, Landing, Craft, Ship"}
{"cat": "vehicle", "slot": "specialization", "value": "mailboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are mailboat. \n        Output: ", "result": "\n```\nmailboat, mailboat, mailboat, mailboat, mailboat, mailboat, mailboat, mailboat, mailboat\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "tram", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tram. \n        Output: ", "result": "\n```\ntram\ntramway\ntramcar\ntrack\nrailway\nrail\nrailway track\nrailway line\nrailway station\nrailway platform\nrailway track bed\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "velocipede", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are velocipede. \n        Output: ", "result": "\n```\nbicycle, tricycle, velocipede, scooter, skateboard, roller skates, unicycle, kick scooter, balance bike, razor scooter\n```\nExplanation:\nThe word \"velocipede\" satisfies"}
{"cat": "vehicle", "slot": "specialization", "value": "sea boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are sea boat. \n        Output: ", "result": "\n            boat, ship, yacht, ferry, cruise, sailboat, motorboat, kayak, canoe, paddleboat\n        \"\"\"\n        category = \"vehicle\"\n        condition = \"are sea boat\"\n        words = []\n        for word"}
{"cat": "vehicle", "slot": "specialization", "value": "river boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are river boat. \n        Output: ", "result": "\n        river,boat,current,navigate,hull,propeller,deck,passenger,captain,bridge\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are river boat\"\n    words = get_words(category, condition)\n    return"}
{"cat": "vehicle", "slot": "specialization", "value": "tower", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tower. \n        Output: ", "result": "\n```\ncar, truck, van, bus, train, boat, airplane, helicopter, motorcycle, taxi\n```\nExplanation:\n\n* The category is \"vehicle\"\n* The condition is \"are tower\"\n* The words that satisfy the condition are"}
{"cat": "vehicle", "slot": "specialization", "value": "stealth aircraft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are stealth aircraft. \n        Output: ", "result": "\n            \n```"}
{"cat": "vehicle", "slot": "specialization", "value": "pickup truck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are pickup truck. \n        Output: ", "result": "1. Pickup, 2. Truck, 3. Pick-up, 4. Pickup, 5. Pick-up, 6. Pickup, 7. Pickup, 8. Pickup, 9. Pickup, 10. Pickup. \n"}
{"cat": "vehicle", "slot": "specialization", "value": "hot rod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are hot rod. \n        Output: ", "result": "1932, Chevrolet, Ford, hot rod, street rod, muscle car, custom car, classic car, antique car, vintage car. \n        \"\"\"\n        category = Category.objects.get(name='vehicle')\n        condition = Condition."}
{"cat": "vehicle", "slot": "specialization", "value": "cycle rickshaw", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are cycle rickshaw. \n        Output: ", "result": "3-wheeler, auto-rickshaw, cycle rickshaw, tricycle, rickshaw, tempo, tuk-tuk, rickshaw puller, cycle rickshaw driver, auto-rickshaw driver. \n        \"\"\"\n        category ="}
{"cat": "vehicle", "slot": "specialization", "value": "pirate ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are pirate ship. \n        Output: ", "result": "\n        ship, cannon, treasure, map, compass, anchor, pirate, Jolly Roger, plank, swashbuckle. \n        \"\"\"\n        category = \"vehicle\"\n        condition = \"are pirate ship\"\n        words = []\n        for"}
{"cat": "vehicle", "slot": "specialization", "value": "ordinary", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ordinary. \n        Output: ", "result": "\n        car, truck, van, bus, bike, train, boat, plane, taxi, caravan\n```\n\n```\nDescribe a scenario where the input is a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: a"}
{"cat": "vehicle", "slot": "specialization", "value": "hack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are hack. \n        Output: ", "result": "\n```\ncar, truck, van, bus, bike, motorcycle, boat, plane, train, subway\n```\nExplanation:\n\n* The category is \"vehicle\".\n* The condition is \"are hack\".\n* The words that satisfy the condition are \"car"}
{"cat": "vehicle", "slot": "specialization", "value": "mackinaw", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are mackinaw. \n        Output: ", "result": "\n        Mackinaw, Mackinaw, Mackinaw, Mackinaw, Mackinaw, Mackinaw, Mackinaw, Mackinaw, Mackinaw, Mackinaw. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are mackina"}
{"cat": "vehicle", "slot": "specialization", "value": "small ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are small ship. \n        Output: ", "result": "\n            car, boat, yacht, speedboat, sailboat, motorboat, hovercraft, submarine, hovercraft, airboat\n\"\"\"\n\n# Define the category and condition\ncategory = \"vehicle\"\ncondition = \"are small ship\"\n\n# Define"}
{"cat": "vehicle", "slot": "specialization", "value": "prairie wagon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are prairie wagon. \n        Output: ", "result": "\n            1. prairie\n            2. wagon\n            3. wheels\n            4. axle\n            5. brakes\n            6. suspension\n            7. seat\n            8. steering\n            9. brake\n            10. axle\n        \"\"\"\n"}
{"cat": "vehicle", "slot": "specialization", "value": "ice-wagon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ice-wagon. \n        Output: ", "result": "\n```\nice-wagon, ice-cream-truck, ice-cream-wagon, ice-cream-cart, ice-cream-van, ice-cream-float, ice-cream-sled, ice-cream-wagon, ice-cre"}
{"cat": "vehicle", "slot": "specialization", "value": "treasure ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are treasure ship. \n        Output: ", "result": "\n```\ntreasure,ship,sea,adventure,pirate,gold,jewelry,map,compass,X Marks the spot\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "vehicle", "slot": "specialization", "value": "minibus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are minibus. \n        Output: ", "result": "\n```\nminibus, bus, coach, lorry, van, car, truck, taxi, limo, shuttle\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n"}
{"cat": "vehicle", "slot": "specialization", "value": "ice wagon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ice wagon. \n        Output: ", "result": "1. Sleigh, 2. Ice wagon, 3. Sleigh, 4. Ice wagon, 5. Sleigh, 6. Ice wagon, 7. Sleigh, 8. Ice wagon, 9. Sleigh, 1"}
{"cat": "vehicle", "slot": "specialization", "value": "jalopy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are jalopy. \n        Output: ", "result": "\n        car,truck,jeep,jalopy,wagon,van,SUV,minivan,sedan,pickup\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are jalopy\"\n    words = get_words(category, condition)\n"}
{"cat": "vehicle", "slot": "specialization", "value": "jeep", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are jeep. \n        Output: ", "result": "4x4, off-road, rugged, SUV, Jeep, Wrangler, Grand Cherokee, Cherokee, Compass, Renegade. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are jeep'\n        words ="}
{"cat": "vehicle", "slot": "specialization", "value": "used-car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used-car. \n        Output: ", "result": "4x4, convertible, hatchback, sedan, sports-car, station-wagon, truck, van, coupe, minivan\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used-car\"\n    words = get_words(category,"}
{"cat": "vehicle", "slot": "specialization", "value": "dustcart", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are dustcart. \n        Output: ", "result": "\n```\ndustcart, garbage, trash, refuse, debris, waste, rubbish, junk, litter, trashcan\n```\n\nExplanation:\nThe word \"dustcart\" belongs to the category \"vehicle\" and satisfies the condition of being"}
{"cat": "vehicle", "slot": "specialization", "value": "roadster", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are roadster. \n        Output: ", "result": "356, 550, 911, 912, 914, 911T, 912T, 914T, 911S, 912S, 914S, 356"}
{"cat": "vehicle", "slot": "specialization", "value": "taxi", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are taxi. \n        Output: ", "result": "\n```\ntaxi, cab, ride, transport, hire, chauffeur, sedan, minivan, black, yellow\n```\nExplanation: The word \"taxi\" satisfies the condition \"are taxi\" and belongs to the category \"vehicle\".\n```python\ndef get"}
{"cat": "vehicle", "slot": "specialization", "value": "bumper car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are bumper car. \n        Output: ", "result": "\n```\nbumper,car,vehicle\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "hulk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are hulk. \n        Output: ", "result": "\n        car,truck,van,SUV,jeep,bike,boat,plane,train,bus\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are hulk\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "specialization", "value": "trailer truck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are trailer truck. \n        Output: ", "result": "123, 456, 789, 1011, 2022, 3033, 4044, 5055, 6066, 7077, 8088, 9"}
{"cat": "vehicle", "slot": "specialization", "value": "barge", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are barge. \n        Output: ", "result": "1. Barge, 2. Barge, 3. Barge, 4. Barge, 5. Barge, 6. Barge, 7. Barge, 8. Barge, 9. Barge, 10. Barge. \n        \"\"\""}
{"cat": "vehicle", "slot": "specialization", "value": "hoy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are hoy. \n        Output: ", "result": "\n```\ncar, truck, bus, train, airplane, boat, motorcycle, bicycle, subway, taxi\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "bicycle-built-for-two", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are bicycle-built-for-two. \n        Output: ", "result": "\n```\nbicycle, built-for-two, handlebars, pedals, seat, wheels, chain, saddle, brakes, steering\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "vehicle", "slot": "specialization", "value": "subcompact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are subcompact. \n        Output: ", "result": "\n        hatchback, sedan, coupe, convertible, mini, suv, van, truck, minivan, wagon\n    \"\"\"\n    subcompact_vehicles = [\n        \"hatchback\",\n        \"sedan\",\n        \"coupe\",\n       "}
{"cat": "vehicle", "slot": "specialization", "value": "shuttle helicopter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are shuttle helicopter. \n        Output: ", "result": "\n        shuttle,helicopter,chopper,aircraft,flight,sky,skyline,travel,transportation,airport\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are shuttle helicopter\"\n    words = []\n   "}
{"cat": "vehicle", "slot": "specialization", "value": "water waggon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are water waggon. \n        Output: ", "result": "\n```\nwater,wagon,waggoner,waggoneer,waggoner,wagoner,wagonette,wagonette,wagonette,wagonette,wagonette,wagonette,wagonette,wagonette,wagonette,w"}
{"cat": "vehicle", "slot": "specialization", "value": "minelayer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are minelayer. \n        Output: ", "result": "4x4, dump, excavator, loader, minelayer, bulldozer, crane, dump truck, excavator, loader. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are minelayer'\n        words = []\n       "}
{"cat": "vehicle", "slot": "specialization", "value": "ice yacht", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ice yacht. \n        Output: ", "result": "1. Yacht, 2. Ice, 3. Yacht, 4. Ice, 5. Yacht, 6. Ice, 7. Yacht, 8. Ice, 9. Yacht, 10. Ice.\n    \"\"\"\n    words = []\n"}
{"cat": "vehicle", "slot": "specialization", "value": "limousine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are limousine. \n        Output: ", "result": "1. Limousine, 2. Limousine, 3. Limousine, 4. Limousine, 5. Limousine, 6. Limousine, 7. Limousine, 8. Limousine, 9. Limousine, 1"}
{"cat": "vehicle", "slot": "specialization", "value": "pinnace", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are pinnace. \n        Output: ", "result": "\n        spacecraft,shuttle,pinnace,capsule,lifeboat,lander,probe,rover,satellite,module\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "vehicle", "slot": "specialization", "value": "bandwagon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are bandwagon. \n        Output: ", "result": "\n        car, van, bus, truck, taxi, limo, train, boat, bike, subway\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are bandwagon\"\n    words = get_words(category, condition)\n    return \","}
{"cat": "vehicle", "slot": "specialization", "value": "sausage balloon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are sausage balloon. \n        Output: ", "result": "\n        car, truck, bus, train, airplane, boat, motorcycle, bicycle, subway, taxi\n    \n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are sausage balloon\"\n    words = []\n    for word in"}
{"cat": "vehicle", "slot": "specialization", "value": "scow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are scow. \n        Output: ", "result": "\n```\ncar, truck, van, bus, train, boat, plane, motorcycle, bike, scow\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "vehicle", "slot": "specialization", "value": "fishing smack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are fishing smack. \n        Output: ", "result": "\n        fishing,smack,boat,sea,fishing\\_boat,fishing\\_smack,fishing\\_vessel,sea\\_fishing,sea\\_boat,sea\\_fishing\\_boat,sea\\_fishing\\_smack\n```\n"}
{"cat": "vehicle", "slot": "specialization", "value": "ark", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ark. \n        Output: ", "result": "\n        */\n        public List<string> GetWords(string category, string condition)\n        {\n            List<string> words = new List<string>();\n\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                connection.Open();\n\n               "}
{"cat": "vehicle", "slot": "specialization", "value": "skyhook", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are skyhook. \n        Output: ", "result": "\n        skyhook,skyhook,skyhook,skyhook,skyhook,skyhook,skyhook,skyhook,skyhook,skyhook. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are skyhook'\n        words = []\n        for word in"}
{"cat": "vehicle", "slot": "specialization", "value": "sailing ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are sailing ship. \n        Output: ", "result": "\n```\nship, sail, mast, deck, hull, anchor, sails, rudder, crew\n```\nExplanation: The words that belong to the category \"vehicle\" and satisfy the condition \"are sailing ship\" are \"ship, sail, mast, deck,"}
{"cat": "vehicle", "slot": "specialization", "value": "shrimper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are shrimper. \n        Output: ", "result": "\n        boat, trawler, shrimp, nets, deck, motor, captain, crew, dock, harvest\n```\n\n```\nDescribe a scenario in which the algorithm would be used. \n        Describe the inputs and outputs of the algorithm. \n        Explain how"}
{"cat": "vehicle", "slot": "specialization", "value": "push-bike", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are push-bike. \n        Output: ", "result": "\n```\npush-bike, scooter, moped, motorcycle, bicycle, tricycle, skateboard, roller-skates, kick-scooter, balance-bike\n```\nExplanation: The words that belong to the category \"vehicle"}
{"cat": "vehicle", "slot": "specialization", "value": "blockade-runner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are blockade-runner. \n        Output: ", "result": "\n        speeder, starfighter, shuttle, blockade-runner, corvette, frigate, destroyer, cruiser, \n        battleship, carrier\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are blockade-runner"}
{"cat": "vehicle", "slot": "specialization", "value": "lugger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are lugger. \n        Output: ", "result": "4x4, off-road, all-terrain, all-wheel, all-weather, all-season, all-purpose, all-terrain, all-wheel, all-weather, all-season, all-purpose, all-terrain, all-w"}
{"cat": "vehicle", "slot": "specialization", "value": "cargo ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are cargo ship. \n        Output: ", "result": "\n        cargo,ship,container,port,cargo\\_ship,container\\_ship,port\\_ship,ship\\_container,container\\_cargo,cargo\\_container\n```\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "surfboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are surfboat. \n        Output: ", "result": "\n```\nsurf,boat,wave,rider,surfboard,surfing,beach,ocean,adrenaline,thrill\n```\nExplanation: The word `surf` belongs to the category `vehicle` and satisfies the condition of being"}
{"cat": "vehicle", "slot": "specialization", "value": "barrage balloon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are barrage balloon. \n        Output: ", "result": "\n            1. Barrage\n            2. Balloon\n            3. Vehicle\n            4. Air\n            5. Inflatable\n            6. Military\n            7. Floating\n            8. Tactical\n            9. Protection\n            10. Defense\n"}
{"cat": "vehicle", "slot": "specialization", "value": "space vehicle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are space vehicle. \n        Output: ", "result": "\n        Mars Rover, Space Shuttle, International Space Station, Saturn V, Hubble Space Telescope, Skylab, SpaceX Dragon, SpaceX Falcon 9, Soyuz, SpaceX Crew Dragon.\n    \"\"\"\n    category = \"vehicle\"\n"}
{"cat": "vehicle", "slot": "specialization", "value": "turbofan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are turbofan. \n        Output: ", "result": "787, A380, 777, A330, 767, A320, 757, A319, A321\n    \"\"\"\n    category = 'vehicle'\n    condition = 'are turbofan"}
{"cat": "vehicle", "slot": "specialization", "value": "landrover", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are landrover. \n        Output: ", "result": "4x4, Defender, Discovery, Freelander, Range Rover, Sport, Evoque,\n        Velar, Discovery Sport, LR4\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are landrover\"\n    words = get_"}
{"cat": "vehicle", "slot": "specialization", "value": "runabout", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are runabout. \n        Output: ", "result": "4x4, ATV, buggy, dune buggy, golf cart, jeep, quad, sand rail, side by side, UTV. \n        \"\"\"\n        category = \"vehicle\"\n        condition = \"are runabout\"\n        words = []\n        for word"}
{"cat": "vehicle", "slot": "specialization", "value": "lightship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are lightship. \n        Output: ", "result": "\n```\ncar, truck, bus, train, airplane, boat, submarine, helicopter, motorcycle, bicycle\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "vehicle", "slot": "specialization", "value": "whaling ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are whaling ship. \n        Output: ", "result": "\n```\nwhaling, ship, harpoon, crew, hunt, whale, sperm, catch, vessel, sea\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "vehicle", "slot": "specialization", "value": "whaler", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are whaler. \n        Output: ", "result": "4x4, off-road, all-terrain, all-wheel, all-weather, all-wheel-drive, all-wheel-steer, all-wheel-control, all-wheel-independent, all-wheel-suspension.\n"}
{"cat": "vehicle", "slot": "specialization", "value": "ground-effect machine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ground-effect machine. \n        Output: ", "result": "\n        */\n        public List<string> GetWords(string category, string condition)\n        {\n            List<string> words = new List<string>();\n\n            using (MySqlConnection connection = new MySqlConnection(connectionString))\n            {\n                connection.Open();\n"}
{"cat": "vehicle", "slot": "specialization", "value": "hatchback", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are hatchback. \n        Output: ", "result": "\n```\ncivic, focus, mazda3, corolla, prius, yaris, civic, focus, mazda3, corolla, prius\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category"}
{"cat": "vehicle", "slot": "specialization", "value": "flagship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are flagship. \n        Output: ", "result": "\n            BMW, Audi, Mercedes-Benz, Jaguar, Land Rover, Porsche, Ferrari, Lamborghini, Maserati, Rolls-Royce\n        \"\"\"\n        category = \"vehicle\"\n        condition = \"are flagship\""}
{"cat": "vehicle", "slot": "specialization", "value": "motorbike", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are motorbike. \n        Output: ", "result": "\n```\nmotorbike, scooter, moped, bicycle, car, truck, van, bus, taxi, rickshaw\n```\nExplanation: The words that belong to the category \"vehicle\" and satisfy the condition \"are motorbike\""}
{"cat": "vehicle", "slot": "specialization", "value": "icebreaker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are icebreaker. \n        Output: ", "result": "\n```\nsnowmobile, iceboat, icebreaker, skidoo, snowmobile, iceboat, icebreaker, skidoo, snowmobile, iceboat\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "ordinary bicycle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ordinary bicycle. \n        Output: ", "result": "\n```\nbicycle, chain, gear, pedal, saddle, tire, wheel, brake, handlebar, seat\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "motor mower", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are motor mower. \n        Output: ", "result": "\n```\nmower,lawn,motorized,cut,grass,powered,reel,push,self-propelled,walk-behind\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n"}
{"cat": "vehicle", "slot": "specialization", "value": "bumboat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are bumboat. \n        Output: ", "result": "\n```\nboat, bumboat, bumper, bump, bumpy, bumboatman, bumboatman's, bumboatman's, bumboatman's, bumboatman's, bumboat"}
{"cat": "vehicle", "slot": "specialization", "value": "spacecraft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are spacecraft. \n        Output: ", "result": "\n        Mars Rover, Space Shuttle, International Space Station, Hubble Space Telescope, Voyager 1, Voyager 2, Galileo, Pioneer 10, Pioneer 11, Cassini-Huygens\n    \"\"\"\n   "}
{"cat": "vehicle", "slot": "specialization", "value": "safety bike", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are safety bike. \n        Output: ", "result": "\n```\nsafety,handlebars,helmet,reflectors,knee-pads,elbow-pads,brakes,bell,lights\n```\nExplanation: The words that belong to the category \"vehicle\" and satisfy the condition \"are safety bike"}
{"cat": "vehicle", "slot": "specialization", "value": "loaner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are loaner. \n        Output: ", "result": "4Runner, Camry, Corolla, Highlander, Prius, RAV4, Sienna, Tundra, Venza, Yaris\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are loaner\"\n    words = []\n    for word"}
{"cat": "vehicle", "slot": "specialization", "value": "angledozer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are angledozer. \n        Output: ", "result": "\n        \n    Examples: \n        Given the category as \"vehicle\" and condition as \"are angledozer\", \n        return a list of 10 words that belong to the category and satisfy the condition. \n        Input: vehicle, are angledozer. "}
{"cat": "vehicle", "slot": "specialization", "value": "van", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are van. \n        Output: ", "result": "1. Van, 2. Vans, 3. Van, 4. Vans, 5. Van, 6. Vans, 7. Van, 8. Vans, 9. Van, 10. Vans.\n    \"\"\"\n    van_words ="}
{"cat": "vehicle", "slot": "specialization", "value": "small boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are small boat. \n        Output: ", "result": "\n            speedboat, motorboat, yacht, sailboat, kayak, canoe, paddleboat, rowboat, dinghy, raft\n        \"\"\"\n        category = \"vehicle\"\n        condition = \"are small boat\"\n        words ="}
{"cat": "vehicle", "slot": "specialization", "value": "training ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are training ship. \n        Output: ", "result": "\n```\naircraft carrier, battleship, cruiser, destroyer, frigate, submarine, amphibious assault ship, aircraft carrier, aircraft carrier, aircraft carrier, aircraft carrier, aircraft carrier, aircraft carrier, aircraft carrier, aircraft carrier,"}
{"cat": "vehicle", "slot": "specialization", "value": "patrol ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are patrol ship. \n        Output: ", "result": "\n```\npatrol,ship,carrier,destroyer,frigate,cruiser,battleship,submarine,aircraft\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "tipper lorry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tipper lorry. \n        Output: ", "result": "1. tipper, 2. lorry, 3. tipper lorry, 4. tipper lorry, 5. tipper lorry, 6. tipper lorry, 7. tipper lorry, 8. tipper lorry, 9. tipper"}
{"cat": "vehicle", "slot": "specialization", "value": "pedicab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are pedicab. \n        Output: ", "result": "\n```\nbicycle, tricycle, rickshaw, cycle rickshaw, pedicab, rickshaw puller, cycle rickshaw puller, bicycle rickshaw, tricycle rickshaw\n```\nExplanation: The"}
{"cat": "vehicle", "slot": "specialization", "value": "mail boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are mail boat. \n        Output: ", "result": "\n        mail,boat,sea,captain,crew,mailboat,postal,delivery,coastal,waterway\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are mail boat\"\n    words = get_words(category, condition"}
{"cat": "vehicle", "slot": "specialization", "value": "fire engine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are fire engine. \n        Output: ", "result": "\n        Ambulance, Fire Truck, Fire Engine, Rescue Truck, Police Car,\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "Mackinaw boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are Mackinaw boat. \n        Output: ", "result": " Mackinaw, Mackinaw, Mackinaw, Mackinaw, Mackinaw, Mackinaw, Mackinaw, Mackinaw, Mackinaw, Mackinaw. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are Mackinaw boat'"}
{"cat": "vehicle", "slot": "specialization", "value": "scrambler", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are scrambler. \n        Output: ", "result": "250, 450, 650, 850, 1050, 1250, 1450, 1650, 1850, 2050.\n    \"\"\"\n    scrambler_"}
{"cat": "vehicle", "slot": "specialization", "value": "trackless trolley", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are trackless trolley. \n        Output: ", "result": "\n        trackless trolley,trackless trolley,trackless trolley,trackless trolley,trackless trolley,trackless trolley,trackless trolley,trackless trolley,trackless trolley,trackless trolley. \n"}
{"cat": "vehicle", "slot": "specialization", "value": "bogie", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are bogie. \n        Output: ", "result": "\n```\ntruck, bogie, bogie, bogie, bogie, bogie, bogie, bogie, bogie, bogie\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "transport ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are transport ship. \n        Output: ", "result": "\n```\nstarship, spaceship, transport, vessel, craft, ship, spacecraft, mode of transport, interstellar travel\n```\nExplanation: The words that belong to the category \"vehicle\" and satisfy the condition \"are transport ships\" are: starship, spaceship,"}
{"cat": "vehicle", "slot": "specialization", "value": "Dodgem", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are Dodgem. \n        Output: ", "result": "\n```\ndodgem, dodgem, dodgem, dodgem, dodgem, dodgem, dodgem, dodgem, dodgem\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "prairie schooner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are prairie schooner. \n        Output: ", "result": "\n```\nwagon,schooner,prairie,horse-drawn,wheeled,travel,transportation,American,history\n```\nExplanation: The words that belong to the category \"vehicle\" and satisfy the condition \"are prairie schooner"}
{"cat": "vehicle", "slot": "specialization", "value": "convertible", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are convertible. \n        Output: ", "result": "\n        convertible, convertible-car, convertible-coupe, convertible-roadster, \n        convertible-sedan, convertible-sports-car, convertible-truck, convertible-van, \n        convertible-suv, convertible-minivan"}
{"cat": "vehicle", "slot": "specialization", "value": "Stanley Steamer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are Stanley Steamer. \n        Output: ", "result": "\n        steam,steamroller,steamship,steamboat,steamengine,steamtram,\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "single-rotor helicopter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are single-rotor helicopter. \n        Output: ", "result": "350, 355, 360, 365, 370, 375, 380, 385, 390, 395, 400, 405, 410,"}
{"cat": "vehicle", "slot": "specialization", "value": "jumbo jet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are jumbo jet. \n        Output: ", "result": "747, A380, A340, A330, A320, A310, A300, A390, A388\n    \"\"\"\n    category = 'vehicle'\n    condition = 'are jumbo"}
{"cat": "vehicle", "slot": "specialization", "value": "compact car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are compact car. \n        Output: ", "result": "\n```\ncivic, corolla, focus, mazda3, prius, yaris\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words"}
{"cat": "vehicle", "slot": "specialization", "value": "ambulance", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ambulance. \n        Output: ", "result": " ambulance, emergency, paramedic, siren, stretcher, emergency, medical, ambulance, emergency, ambulance. \n        \"\"\"\n        category = \"vehicle\"\n        condition = \"are ambulance\"\n        words = [word for word"}
{"cat": "vehicle", "slot": "specialization", "value": "cruise ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are cruise ship. \n        Output: ", "result": "1. Cruise 2. Ship 3. Vehicle 4. Cruise\\_ship 5. Ship\\_cruise 6. Cruise\\_ship\\_vehicle 7. Vehicle\\_cruise 8. Ship\\_cruise\\_veh"}
{"cat": "vehicle", "slot": "specialization", "value": "tractor trailer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tractor trailer. \n        Output: ", "result": "123, 456, 789, 1011, 2022, 3033, 4044, 5055, 6066, 7077, 8088, 9"}
{"cat": "vehicle", "slot": "specialization", "value": "two-seater", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are two-seater. \n        Output: ", "result": "\n        sports car, convertible, coupe, roadster, sedan, hatchback, wagon, minivan, pickup, SUV. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are two-seater'\n        words = []\n        for"}
{"cat": "vehicle", "slot": "specialization", "value": "school ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are school ship. \n        Output: ", "result": "\n```\ncar, bus, train, ship, boat, plane, subway, taxi, schoolbus, metro\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "chuck wagon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are chuck wagon. \n        Output: ", "result": "\n```\nwagon,chuck,grill,fire,cook,food,trailer,camp,outdoor,BBQ\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "vehicle", "slot": "specialization", "value": "jet-propelled plane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are jet-propelled plane. \n        Output: ", "result": "727, 737, 747, 757, 767, 777, 787, A300, A310, A320, A330, A340, A380."}
{"cat": "vehicle", "slot": "specialization", "value": "sled", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are sled. \n        Output: ", "result": "\n```\nsled,sleigh,sledge,sleigher,sleigher,sleigher,sleigher,sleigher,sleigher,sleigher,sleigher,sleigher,sleigher,s"}
{"cat": "vehicle", "slot": "place", "value": "rental", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can be found or used in rentals. \n        Output: ", "result": "4x4, SUV, convertible, sedan, minivan, truck, van, sports car, luxury car, compact car. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'can be found or used in rentals'\n        words = []\n       "}
{"cat": "vehicle", "slot": "generalization", "value": "combat ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are combat ship. \n        Output: ", "result": "\n        aircraft carrier, destroyer, cruiser, frigate, submarine, amphibious assault ship, missile cruiser, guided missile destroyer, guided missile frigate, guided missile submarine.\n    \"\"\"\n    category = 'vehicle"}
{"cat": "vehicle", "slot": "generalization", "value": "watercraft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are watercraft. \n        Output: ", "result": "\n```\nboat, jetski, yacht, canoe, kayak, paddleboard, sailboat, motorboat, watercraft, vessel\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "vehicle", "slot": "generalization", "value": "ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ship. \n        Output: ", "result": "\n```\ncarrier, cruiser, destroyer, frigate, aircraft carrier, battleship, submarine, amphibious assault ship, aircraft carrier, aircraft carrier\n```"}
{"cat": "vehicle", "slot": "generalization", "value": "lighter-than-air craft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are lighter-than-air craft. \n        Output: ", "result": "\n        airship, dirigible, zeppelin, blimp, balloon, airship, hydrogen, helium, gasbag, lighter-than-air \n    \"\"\"\n    airship, dirigible, zeppelin, blimp, balloon, airship, hydro"}
{"cat": "vehicle", "slot": "generalization", "value": "warship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are warship. \n        Output: ", "result": "\n```\naircraft carrier, battleship, cruiser, destroyer, frigate, submarine, amphibious assault ship, aircraft carrier, battleship, cruiser, destroyer, frigate, submarine, amphibious assault ship, aircraft carrier,"}
{"cat": "vehicle", "slot": "generalization", "value": "military vehicle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are military vehicle. \n        Output: ", "result": "\n            Abrams, Apache, Blackhawk, Chinook, F-15, F-16, F-22, F-35, Predator, V-22\n        \"\"\"\n        category = \"vehicle\"\n        condition = \"are military vehicle\"\n"}
{"cat": "vehicle", "slot": "generalization", "value": "war vessel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are war vessel. \n        Output: ", "result": "\n```\naircraft carrier, battleship, cruiser, destroyer, frigate, submarine, amphibious assault ship, aircraft carrier, battleship, cruiser, destroyer, frigate, submarine, amphibious assault ship, aircraft carrier,"}
{"cat": "vehicle", "slot": "generalization", "value": "tractor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tractor. \n        Output: ", "result": "1. tractor, 2. tractor, 3. tractor, 4. tractor, 5. tractor, 6. tractor, 7. tractor, 8. tractor, 9. tractor, 10. tractor. \n        \"\"\""}
{"cat": "vehicle", "slot": "purpose", "value": "passenger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used for passenger. \n        Output: ", "result": "\n        car, van, bus, taxi, limo, shuttle, train, tram, ferry, subway\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used for passenger\"\n    words = get_words(category, condition)\n    return"}
{"cat": "vehicle", "slot": "part", "value": "boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  boat. \n        Output: ", "result": " car, truck, boat, motorcycle, bus, train, airplane, subway, taxi, boat. \n    \"\"\"\n    category_words = [\"car\", \"truck\", \"bus\", \"train\", \"airplane\", \"subway\", \"taxi\", \"boat\"]"}
{"cat": "vehicle", "slot": "generalization", "value": "transport", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are transport. \n        Output: ", "result": "\n        car, truck, bus, train, boat, airplane, taxi, subway, ferry, ship\n```\n\n```\nDescribe a scenario where the input is a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "vehicle", "slot": "user", "value": "farm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are used by farms. \n        Output: ", "result": " tractor, combine, plow, harvester, seed, fertilizer, trailer, plow, cultivator, sprayer\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are used by farms\"\n    words = get_words(category, condition"}
{"cat": "vehicle", "slot": "specialization", "value": "galley", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are galley. \n        Output: ", "result": "1. galley, 2. galley, 3. galley, 4. galley, 5. galley, 6. galley, 7. galley, 8. galley, 9. galley, 10. galley.\n    \"\"\"\n"}
{"cat": "vehicle", "slot": "part", "value": "galley", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  galley. \n        Output: ", "result": " car, van, bus, truck, taxi, limo, train, boat, airplane, subway\n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"van\", \"bus\", \"truck\", \"taxi\", \"limo\", \"train\","}
{"cat": "vehicle", "slot": "specialization", "value": "tractor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are tractor. \n        Output: ", "result": "1. tractor, 2. tractor, 3. tractor, 4. tractor, 5. tractor, 6. tractor, 7. tractor, 8. tractor, 9. tractor, 10. tractor. \n        \"\"\""}
{"cat": "vehicle", "slot": "specialization", "value": "ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are ship. \n        Output: ", "result": "\n```\ncarrier, cruiser, destroyer, frigate, aircraft carrier, battleship, submarine, amphibious assault ship, aircraft carrier, aircraft carrier\n```"}
{"cat": "vehicle", "slot": "specialization", "value": "war vessel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are war vessel. \n        Output: ", "result": "\n```\naircraft carrier, battleship, cruiser, destroyer, frigate, submarine, amphibious assault ship, aircraft carrier, battleship, cruiser, destroyer, frigate, submarine, amphibious assault ship, aircraft carrier,"}
{"cat": "vehicle", "slot": "specialization", "value": "lighter-than-air craft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are lighter-than-air craft. \n        Output: ", "result": "\n        airship, dirigible, zeppelin, blimp, balloon, airship, hydrogen, helium, gasbag, lighter-than-air \n    \"\"\"\n    airship, dirigible, zeppelin, blimp, balloon, airship, hydro"}
{"cat": "vehicle", "slot": "specialization", "value": "watercraft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are watercraft. \n        Output: ", "result": "\n```\nboat, jetski, yacht, canoe, kayak, paddleboard, sailboat, motorboat, watercraft, vessel\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "vehicle", "slot": "specialization", "value": "combat ship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are combat ship. \n        Output: ", "result": "\n        aircraft carrier, destroyer, cruiser, frigate, submarine, amphibious assault ship, missile cruiser, guided missile destroyer, guided missile frigate, guided missile submarine.\n    \"\"\"\n    category = 'vehicle"}
{"cat": "vehicle", "slot": "specialization", "value": "warship", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are warship. \n        Output: ", "result": "\n```\naircraft carrier, battleship, cruiser, destroyer, frigate, submarine, amphibious assault ship, aircraft carrier, battleship, cruiser, destroyer, frigate, submarine, amphibious assault ship, aircraft carrier,"}
{"cat": "vehicle", "slot": "specialization", "value": "military vehicle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are military vehicle. \n        Output: ", "result": "\n            Abrams, Apache, Blackhawk, Chinook, F-15, F-16, F-22, F-35, Predator, V-22\n        \"\"\"\n        category = \"vehicle\"\n        condition = \"are military vehicle\"\n"}
{"cat": "vehicle", "slot": "specialization", "value": "boat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are boat. \n        Output: ", "result": "\n```\nboat, motor, dock, hull, propeller, sail, oar, paddle, anchor, rudder\n```"}
{"cat": "vehicle", "slot": "part", "value": "gas", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: can have  gas. \n        Output: ", "result": " car, truck, van, bus, bike, motorcycle, scooter, boat, plane, train. \n    \"\"\"\n    category = \"vehicle\"\n    words = [\"car\", \"truck\", \"van\", \"bus\", \"bike\", \"motorcycle\","}
{"cat": "vehicle", "slot": "generalization", "value": "wheel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are wheel. \n        Output: ", "result": "\n        car, truck, van, bus, bike, motorcycle, train, boat, airplane, taxi\n```\n\nExample 2:\n```\nInput: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "vehicle", "slot": "specialization", "value": "heavier-than-air craft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are heavier-than-air craft. \n        Output: ", "result": "\n        airplane, helicopter, glider, blimp, zeppelin, balloon, airship, glider, hang glider, parachute. \n        \"\"\"\n        category = 'vehicle'\n        condition = 'are heavier-than-air craft'"}
{"cat": "vehicle", "slot": "specialization", "value": "aircraft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are aircraft. \n        Output: ", "result": "\n        helicopter, airplane, jet, glider, balloon, blimp, rocket, spacecraft, hot air balloon, glider\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are aircraft\"\n    words = get_words(category"}
{"cat": "vehicle", "slot": "specialization", "value": "vessel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are vessel. \n        Output: ", "result": "\n            car, truck, bus, boat, ship, submarine, ferry, train, plane, taxi\n\"\"\"\n\n# Define the function\ndef get_vehicle_words(category, condition):\n    # Create an empty list to store the words\n    words = []"}
{"cat": "vehicle", "slot": "specialization", "value": "craft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are craft. \n        Output: ", "result": "\n        airplane, boat, car, helicopter, jet, submarine, train, bus, motorcycle, taxi\n    \"\"\"\n    category = \"vehicle\"\n    condition = \"are craft\"\n    words = get_words(category, condition)\n    return \", \"."}
{"cat": "vehicle", "slot": "specialization", "value": "wheeled vehicle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: vehicle. \n        Condition: are wheeled vehicle. \n        Output: ", "result": " car, bus, truck, van, taxi, motorcycle, bicycle, train, subway, trolley.\n    \"\"\"\n    category = 'vehicle'\n    condition = 'are wheeled vehicle'\n    words = get_words(category, condition)\n"}
{"cat": "clothe", "slot": "size", "value": "tall", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be tall. \n        Output: ", "result": "\n        tall, pants, shirt, socks, shoes, coat, dress, skirt, scarf, tie.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"tall\" in word:\n            words.append(word)\n"}
{"cat": "clothe", "slot": "size", "value": "short", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be short. \n        Output: ", "result": "\n```\ndress, shirt, pants, shorts, skirt, top, jacket, socks, shoes\n```\nExplanation: The words that belong to the category \"clothe\" and can be short are \"dress, shirt, pants, shorts,"}
{"cat": "clothe", "slot": "time", "value": "winter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be consumed or used during winter. \n        Output: ", "result": "\n            1. Sweater\n            2. Scarf\n            3. Gloves\n            4. Socks\n            5. Hat\n            6. Boots\n            7. Jacket\n            8. Blanket\n            9. Thermal underwear\n            10."}
{"cat": "clothe", "slot": "time", "value": "summer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be consumed or used during summer. \n        Output: ", "result": "\n        sandal, shirt, shorts, hat, sunglasses, swimwear, flipflops, sneakers, tanktop, dress.\n    \"\"\"\n    print(\"Category: \", category)\n    print(\"Condition: \", condition)\n    words = []"}
{"cat": "clothe", "slot": "place", "value": "outdoors", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be found or used in outdoorss. \n        Output: ", "result": "\n            1. Backpack\n            2. Hiking boots\n            3. Tent\n            4. Sleeping bag\n            5. Camping stove\n            6. Waterproof jacket\n            7. Hiking poles\n            8. Binoculars\n            "}
{"cat": "clothe", "slot": "place", "value": "hospital", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be found or used in hospitals. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "place", "value": "surgery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be found or used in surgeries. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "bodyPart", "value": "waist", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have or be used with waist. \n        Output: ", "result": "\n        dress, skirt, pants, shirt, blouse, jacket, coat, sweater, socks, underwear.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "clothe", "slot": "bodyPart", "value": "neck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have or be used with neck. \n        Output: ", "result": "\n            \n        \"\"\"\n        words = []\n        for word in word_list:\n            if \"neck\" in word:\n                words.append(word)\n        if len(words) == 0:\n            print(\"No words found\")\n        else:\n            print(\","}
{"cat": "clothe", "slot": "bodyPart", "value": "head", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have or be used with head. \n        Output: ", "result": "\n            1. Hat\n            2. Headband\n            3. Scarf\n            4. Gloves\n            5. Jacket\n            6. Shirt\n            7. Pants\n            8. Socks\n            9. Shoes\n            10. Dress\n        \"\"\"\n"}
{"cat": "clothe", "slot": "bodyPart", "value": "calf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have or be used with calf. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "bodyPart", "value": "ankle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have or be used with ankle. \n        Output: ", "result": "\n            \n        \"\"\"\n        words = []\n        for word in word_list:\n            if \"ankle\" in word:\n                words.append(word)\n        return \", \".join(words)\n\n    def print_category(self, category):\n        \"\"\"Prints the"}
{"cat": "clothe", "slot": "bodyPart", "value": "foot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have or be used with foot. \n        Output: ", "result": "\n            1. Shoe\n            2. Sole\n            3. Footwear\n            4. Boot\n            5. Sneaker\n            6. Sandal\n            7. Flip-flop\n            8. Slipper\n            9. Loafer\n            10"}
{"cat": "clothe", "slot": "bodyPart", "value": "knee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have or be used with knee. \n        Output: ", "result": "\n```\njeans, pants, shorts, socks, shoes, shirt, sweater, t-shirt, underwear, \njeans, pants, shorts, socks, shoes, shirt, sweater, t-shirt, underwear"}
{"cat": "clothe", "slot": "bodyPart", "value": "throat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have or be used with throat. \n        Output: ", "result": "\n            \n        \"\"\"\n        words = []\n        for word in word_list:\n            if \"throat\" in word:\n                words.append(word)\n        if len(words) == 0:\n            print(\"No words found.\")\n        else:\n            print"}
{"cat": "clothe", "slot": "shape", "value": "elongated", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be elongated. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "shape", "value": "long", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be long. \n        Output: ", "result": "\n```\ndress, skirt, pants, shirt, jacket, coat, scarf, socks, gloves\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "clothe", "slot": "shape", "value": "circular", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be circular. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "shape", "value": "round", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be round. \n        Output: ", "result": "\n        round, dress, shirt, coat, jacket, pants, socks, gloves, scarf, hat.\n    \"\"\"\n    words = []\n    for word in words:\n        if \"round\" in word.lower():\n            words.append(word)\n   "}
{"cat": "clothe", "slot": "shape", "value": "rectangular", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be rectangular. \n        Output: ", "result": "\n        dress, shirt, pants, jacket, coat, skirt, blouse, shorts, trousers\n\"\"\"\n\nword_list = [\"dress\", \"shirt\", \"pants\", \"jacket\", \"coat\", \"skirt\", \"blouse\","}
{"cat": "clothe", "slot": "bodyPart", "value": "leg", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have or be used with leg. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "bodyPart", "value": "hand", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have or be used with hand. \n        Output: ", "result": "\n        dress, glove, handbag, handkerchief, hat, jacket, jumper, scarf, sock, sweater.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "clothe", "slot": "purpose", "value": "protect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used to protect. \n        Output: ", "result": "\n        gloves, socks, boots, hats, scarves, coats, vests, jackets, pants, shoes.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word"}
{"cat": "clothe", "slot": "purpose", "value": "warmth", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used for warmth. \n        Output: ", "result": "\n            coat, hat, scarf, gloves, socks, sweater, vest, jacket, blanket, quilt \n        \"\"\"\n        category = 'clothe'\n        condition = 'are used for warmth'\n        words = get_words(category, condition)\n"}
{"cat": "clothe", "slot": "purpose", "value": "pair", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used for pair. \n        Output: ", "result": "\n```\njeans, pants, shorts, shirt, t-shirt, socks, underwear, shoes, sneakers, sandals\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "clothe", "slot": "purpose", "value": "riding", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used for riding. \n        Output: ", "result": "\n```\njeans, shorts, t-shirt, jacket, gloves, helmet, boots, socks, pants, shirt\n```\nExplanation: \n        The words that belong to the category \"clothe\" and satisfy the condition \"are used for r"}
{"cat": "clothe", "slot": "purpose", "value": "work", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used for work. \n        Output: ", "result": "\n          shirt, pants, jacket, tie, shoes, socks, gloves, overalls, hardhat, safety vest\n```\n\n```\nDescribe a scenario where you need to find a list of words that belong to a category and satisfy a condition. \n        Provide"}
{"cat": "clothe", "slot": "purpose", "value": "hygiene", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used for hygiene. \n        Output: ", "result": "\n            1. Underwear\n            2. Socks\n            3. T-shirt\n            4. Shirt\n            5. Pants\n            6. Shorts\n            7. Swimwear\n            8. Sweatshirt\n            9. Sweatp"}
{"cat": "clothe", "slot": "purpose", "value": "gardening", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used for gardening. \n        Output: ", "result": "\n            1. Gloves\n            2. Hose\n            3. Soil\n            4. Seeds\n            5. Trowel\n            6. Watering can\n            7. Pruning shears\n            8. Rake\n            9. Lawn mower\n            10"}
{"cat": "clothe", "slot": "purpose", "value": "ride", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used for ride. \n        Output: ", "result": "\n```\njeans, pants, shorts, skirt, dress, jacket, coat, shirt, t-shirt, socks\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "clothe", "slot": "purpose", "value": "run", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used to run. \n        Output: ", "result": "\n          socks, shoes, sneakers, sandals, flip-flops, boots, sneakers, sneakers, sneakers, sneakers.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"to\""}
{"cat": "clothe", "slot": "purpose", "value": "walk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used to walk. \n        Output: ", "result": "\n          socks, shoes, sandals, sneakers, boots, slippers, flip-flops, loafers, moccasins, clogs.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n"}
{"cat": "clothe", "slot": "purpose", "value": "ride", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used to ride. \n        Output: ", "result": "\n```\njeans, shorts, t-shirt, jacket, gloves, helmet, boots, socks, pants, shirt\n```\nExplanation: The words that belong to the category \"clothes\" and satisfy the condition \"are used to ride\" are"}
{"cat": "clothe", "slot": "purpose", "value": "tie", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used to tie. \n        Output: ", "result": "\n```\nscarf, sash, bow, knot, knotty, tie, tie-up, tie-down, tie-in, tie-over\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "clothe", "slot": "user", "value": "woman", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by women. \n        Output: ", "result": "\n        dress, skirt, blouse, shirt, pants, jacket, coat, scarf, shoe, purse \n    \"\"\"\n    category = 'clothe'\n    condition = 'are used by women'\n    words = get_words(category, condition)\n"}
{"cat": "clothe", "slot": "user", "value": "man", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by men. \n        Output: ", "result": "\n        jeans, t-shirt, shirt, pants, jacket, coat, hat, shoes, socks, underwear.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "clothe", "slot": "user", "value": "horseman", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by horsemen. \n        Output: ", "result": "\n        gloves, spurs, saddle, bridle, chaps, hat, boots, reins, saddlecloth, breeches\n\"\"\"\nwords = [\"gloves\", \"spurs\", \"saddle\", \"bridle\", \"chaps\", \"hat\", \""}
{"cat": "clothe", "slot": "user", "value": "surgeon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by surgeons. \n        Output: ", "result": "\n        glove, scalpel, stethoscope, suture, bandage, surgical, gown, mask, cap, scrubs\n    \"\"\"\n    category = \"clothe\"\n    condition = \"are used by surgeons\"\n    words = get_words(category,"}
{"cat": "clothe", "slot": "user", "value": "workman", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by workmen. \n        Output: ", "result": "\n        jeans, overalls, coveralls, dungarees, work pants, work trousers, carpenter pants, carpenter overalls, mechanic pants, mechanic overalls.\n    \"\"\"\n    category = 'clothe'\n    condition = 'are"}
{"cat": "clothe", "slot": "user", "value": "doctor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by doctors. \n        Output: ", "result": "\n        doctor, patient, stethoscope, lab coat, scrubs, gloves, mask, syringe, thermometer, examination\n```\n\nExample 2:\n```\nQuestion: Provide a list of 10 words that belong to the category and satisfy the condition. "}
{"cat": "clothe", "slot": "user", "value": "gardener", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by gardeners. \n        Output: ", "result": "\n        gloves, boots, hat, apron, scarf, sunglasses, watering can, trowel, rake, pruning shears.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words ="}
{"cat": "clothe", "slot": "user", "value": "men", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by mens. \n        Output: ", "result": "\n```\njeans, pants, shirt, t-shirt, jacket, coat, hat, shoes, socks, underwear\n```"}
{"cat": "clothe", "slot": "user", "value": "lady", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by ladies. \n        Output: ", "result": "\n        dress, skirt, blouse, shirt, pants, jacket, coat, scarf, gloves, hat\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma"}
{"cat": "clothe", "slot": "user", "value": "cowboy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by cowboys. \n        Output: ", "result": "\n        jeans, boots, hat, shirt, chaps, spurs, belt, gloves, saddle, vest\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "clothe", "slot": "user", "value": "falconer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by falconers. \n        Output: ", "result": "\n        falcon, glove, hood, jesses, lure, perch, quiver, sleeve, swivel, wrist.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "clothe", "slot": "user", "value": "baseman", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by basemen. \n        Output: ", "result": "\n```\ncap, mitt, glove, cleat, chest protector, batting helmet, catcher's mask, shin guards, cup\n```\nExplanation: The words that belong to the category \"clothes\" and are used by basemen are cap, mitt"}
{"cat": "clothe", "slot": "user", "value": "catcher", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by catchers. \n        Output: ", "result": "\n        glove\n        chest protector\n        catcher's helmet\n        catcher's mitt\n        catcher's shin guards\n        catcher's mask\n        catcher's throat protector\n        catcher's wrist guards\n       "}
{"cat": "clothe", "slot": "user", "value": "fielder", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by fielders. \n        Output: ", "result": "\n```\nhat, pants, shirt, socks, gloves, shoes, shorts, jacket, trousers, overalls\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "clothe", "slot": "user", "value": "goalkeeper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by goalkeepers. \n        Output: ", "result": "\n        gloves, shinpads, jersey, shorts, socks, goalkeeping gloves, goalkeeping shinpads, goalkeeping jersey, goalkeeping shorts, goalkeeping socks\n    \"\"\"\n    words = []\n    for word"}
{"cat": "clothe", "slot": "user", "value": "women", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by womens. \n        Output: ", "result": "\n        dress, skirt, blouse, shirt, pants, coat, jacket, sweater, scarf, gloves\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "clothe", "slot": "user", "value": "soldier", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are used by soldiers. \n        Output: ", "result": "\n        camouflage, combat, fatigues, helmet, jacket, boots, gloves, rifle, ammunition, uniform\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "clothe", "slot": "purpose", "value": "disposable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: None disposable. \n        Output: ", "result": "\n```\ndress, shirt, pants, jacket, socks, underwear, shoes, hat, scarf, gloves\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "clothe", "slot": "shape", "value": "hand", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be hand. \n        Output: ", "result": "\n        glove, handbag, handkerchief, handloom, handmade, handrail, \n        handshake, handwriting, handyman, handkerchief.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition:"}
{"cat": "clothe", "slot": "material", "value": "cotton", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of cotton. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "material", "value": "wool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of wool. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "material", "value": "leather", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of leather. \n        Output: ", "result": "\n        jeans, jacket, gloves, shoes, belt, boots, hat, purse, wallet, watch.\n    \"\"\"\n    leather_words = []\n    for word in words:\n        if \"leather\" in word:\n            leather_words"}
{"cat": "clothe", "slot": "material", "value": "silk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of silk. \n        Output: ", "result": "\n          dress, shirt, scarf, blouse, jacket, skirt, pants, tie, gloves, socks.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"silk\" in word:\n            words.append(word"}
{"cat": "clothe", "slot": "material", "value": "linen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of linen. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "material", "value": "polyester", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of polyester. \n        Output: ", "result": "\n        dress, shirt, blouse, pants, skirt, jacket, coat, scarf, gloves, socks.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"polyester\" in word:\n            words.append(word"}
{"cat": "clothe", "slot": "material", "value": "plastic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of plastic. \n        Output: ", "result": "\n        dress, shirt, jacket, pants, skirt, shoes, belt, purse, wallet, cellphone case.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word"}
{"cat": "clothe", "slot": "material", "value": "viscose", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of viscose. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "material", "value": "nylon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of nylon. \n        Output: ", "result": "\n        dress, shirt, jacket, pants, skirt, blouse, shorts, socks, scarf, gloves.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"nylon\" in word:\n            words.append("}
{"cat": "clothe", "slot": "material", "value": "suede", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of suede. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "material", "value": "fabric", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of fabric. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "material", "value": "felt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of felt. \n        Output: ", "result": "\n          scarf, hat, gloves, socks, jacket, pants, shirt, shoes, vest, coat\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"felt\" in word:\n            words.append(word)\n"}
{"cat": "clothe", "slot": "material", "value": "cloth", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of cloth. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "material", "value": "velvet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of velvet. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "material", "value": "chiffon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of chiffon. \n        Output: ", "result": "\n        dress, gown, shirt, blouse, skirt, pants, jacket, scarf, shawl, sari \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"chiffon\" in word:\n            words."}
{"cat": "clothe", "slot": "material", "value": "rubber", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of rubber. \n        Output: ", "result": "\n          soled, sole, rubber, shoe, solely, rubberized, rubberized, \n          rubberized, rubberized, rubberized. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can be made of rubber'\n"}
{"cat": "clothe", "slot": "material", "value": "fleece", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of fleece. \n        Output: ", "result": "\n            scarf, gloves, hat, socks, vest, jacket, pants, shirt, sweater, coat\n\"\"\"\n\n# Define the function\ndef get_words(category, condition):\n    # Create an empty list to store the words\n    words = []\n"}
{"cat": "clothe", "slot": "material", "value": "latex", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of latex. \n        Output: ", "result": "\n        dress, shoe, sock, glove, hat, coat, pants, skirt, scarf, belt.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)"}
{"cat": "clothe", "slot": "material", "value": "cashmere", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of cashmere. \n        Output: ", "result": "\n        cashmere, sweater, scarf, coat, gloves, hat, socks, pashmina, shawl, wrap.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"cashmere\" in word:\n           "}
{"cat": "clothe", "slot": "material", "value": "straw", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of straw. \n        Output: ", "result": "\n        scarf, hat, broom, basket, straw hat, straw broom, straw basket, straw scarf, straw hat, straw broom.\n    \"\"\"\n    straw_words = [\"straw hat\", \"straw broom\", \"straw basket"}
{"cat": "clothe", "slot": "material", "value": "sheepskin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of sheepskin. \n        Output: ", "result": "\n            1. Sheepskin\n            2. Jacket\n            3. Coat\n            4. Blanket\n            5. Slipper\n            6. Ugg\n            7. Moccasin\n            8. Apron\n            9. Scarf\n            10"}
{"cat": "clothe", "slot": "part", "value": "hem", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  hem. \n        Output: ", "result": " shirt, dress, pants, skirt, coat, jacket, blouse, socks, shoes.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"hem\" in word:\n            words.append(word)\n    return words\n"}
{"cat": "clothe", "slot": "part", "value": "heel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  heel. \n        Output: ", "result": " boot, shoe, sandal, sneaker, moccasin, loafer, slipper, high heel, wedge, stiletto.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n"}
{"cat": "clothe", "slot": "part", "value": "tongue", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  tongue. \n        Output: ", "result": "\n        dress, shirt, pants, jacket, socks, shoes, tie, belt, underwear, tongue.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"tongue\" in word:\n            words.append("}
{"cat": "clothe", "slot": "part", "value": "seam", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  seam. \n        Output: ", "result": " dress, blouse, shirt, pants, coat, skirt, jacket, sweater, socks, underwear.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"seam\" in word:\n            words.append(word)"}
{"cat": "clothe", "slot": "part", "value": "button", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  button. \n        Output: ", "result": " shirt,pants,jacket,dress,tie,coat,skirt,blouse,socks,shoes. \n        Explanation: shirt,pants,jacket,dress,tie,coat,skirt,blouse,socks"}
{"cat": "clothe", "slot": "part", "value": "pocket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  pocket. \n        Output: ", "result": " shirt, pants, jacket, dress, coat, skirt, blouse, shorts, trousers.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print"}
{"cat": "clothe", "slot": "part", "value": "sole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  sole. \n        Output: ", "result": " shoe, sandal, sneaker, moccasin, slipper, boot, loafer, clog, flip-flop, moccasin.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words"}
{"cat": "clothe", "slot": "part", "value": "fur", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  fur. \n        Output: ", "result": " coat, jacket, muff, scarf, hat, gloves, boots, pelt, vest. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"fur\" in word:\n            words.append(word)\n    return words\n"}
{"cat": "clothe", "slot": "part", "value": "upper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  upper. \n        Output: ", "result": " shirt, blouse, sweater, sweatshirt, coat, jacket, pants, skirt, dress, upper.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"upper\" in word:\n            words.append(word)\n"}
{"cat": "clothe", "slot": "part", "value": "zip", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  zip. \n        Output: ", "result": " coat, dress, hat, jacket, jeans, shirt, skirt, socks, sweater, zip. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"zip\" in word:\n            words.append(word)\n    return"}
{"cat": "clothe", "slot": "part", "value": "waistband", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  waistband. \n        Output: ", "result": " pants, shorts, skirt, dress, shirt, jacket, coat, sweater, socks, underwear.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)"}
{"cat": "clothe", "slot": "part", "value": "strap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  strap. \n        Output: ", "result": " shoe, sandal, flip-flop, sneaker, loafer, moccasin, slipper, mule, clog, espadrille. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can have strap'\n        words ="}
{"cat": "clothe", "slot": "part", "value": "visor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  visor. \n        Output: ", "result": " cap, visor, beret, hat, scarf, gloves, socks, shoes, shirt, pants.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n"}
{"cat": "clothe", "slot": "part", "value": "collar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  collar. \n        Output: ", "result": " shirt, blouse, dress, coat, jacket, sweater, t-shirt, pants, skirt, scarf.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "clothe", "slot": "part", "value": "belt loop", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  belt loop. \n        Output: ", "result": " pants, shorts, skirt, dress, shirt, jacket, coat, sweater, socks, shoes.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n"}
{"cat": "clothe", "slot": "part", "value": "neckline", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  neckline. \n        Output: ", "result": " shirt, blouse, dress, t-shirt, sweater, sweatshirt, coat, jacket, sweater, blouse. \n        Explanation: shirt, blouse, dress, t-shirt, sweater, sweatshirt, coat, jacket"}
{"cat": "clothe", "slot": "part", "value": "shoe collar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  shoe collar. \n        Output: ", "result": " shoe, collar. \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print(\", \".join(words))\n\ndef get_words(category, condition):\n   "}
{"cat": "clothe", "slot": "part", "value": "instep", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  instep. \n        Output: ", "result": " shoe, sneaker, sandal, moccasin, boot, loafer, slipper, mule, clog, instep.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"instep\" in word:\n            words."}
{"cat": "clothe", "slot": "part", "value": "trouser leg", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  trouser leg. \n        Output: ", "result": " pantleg, trouserleg, trouserlegs, pantlegs, trouserseam, trouserseams, trouserseaming, trouserseamings, trouserlegging. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can have trou"}
{"cat": "clothe", "slot": "part", "value": "lap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  lap. \n        Output: ", "result": " coat, jacket, sweater, sweatshirt, shirt, blouse, dress, skirt, pants, jeans.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"lap\" in word:\n            words.append(word)"}
{"cat": "clothe", "slot": "part", "value": "pant leg", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  pant leg. \n        Output: ", "result": " pant,leg,trouser,legging,pantleg,leggarment,legwear,legcovering,legprotector.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"pant leg\" in word:\n            words."}
{"cat": "clothe", "slot": "part", "value": "hemline", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  hemline. \n        Output: ", "result": " skirt, dress, pants, shorts, shirt, blouse, coat, jacket, scarf, hemline. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can have hemline'\n        words = get_words(category, condition)\n       "}
{"cat": "clothe", "slot": "part", "value": "shirtfront", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  shirtfront. \n        Output: ", "result": " shirt, shirtfront, shirtwaist, shirtwaistcoat, shirtwaistdress, shirtwaistjacket, shirtwaistshirt, shirtwaistshirtfront, shirtwaistshirtfrontcoat, shirtwaistshirt"}
{"cat": "clothe", "slot": "part", "value": "heel counter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  heel counter. \n        Output: ", "result": " boot, shoe, sandal, sneaker, moccasin, loafer, slipper, clog, mule, wedge. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can have heel counter'\n        words = get_words("}
{"cat": "clothe", "slot": "part", "value": "trouser cuff", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  trouser cuff. \n        Output: ", "result": "\n```\ntrouser, cuff, pant, trouser leg, trouser inseam, trouser hem, trouser cuff hem, trouser hem cuff, trouser leg cuff, trouser inseam cuff, trouser hem cuff inseam\n```"}
{"cat": "clothe", "slot": "part", "value": "seat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  seat. \n        Output: ", "result": " coat, dress, hat, jacket, jeans, pants, shirt, skirt, socks, sweater \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"seat\" in word:\n            words.append(word)\n   "}
{"cat": "clothe", "slot": "part", "value": "innersole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  innersole. \n        Output: ", "result": "\n```\nshoes, sneakers, boots, sandals, flip-flops, slippers, loafers, moccasins, clogs, innersole\n```\n\n```python\nProvide a list of 10 words that belong to the category"}
{"cat": "clothe", "slot": "part", "value": "lap covering", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  lap covering. \n        Output: ", "result": " coat, jacket, sweater, sweatshirt, vest, shirt, blouse, dress, skirt, pants.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"lap\" in word and \"covering\" in word:\n           "}
{"cat": "clothe", "slot": "part", "value": "trouser", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  trouser. \n        Output: ", "result": " pants, trousers, slacks, jeans, overalls, shorts, skirt, dress, blouse, shirt. \n        \"\"\"\n        category = input(\"Enter category: \")\n        condition = input(\"Enter condition: \")\n        words = []\n        for word"}
{"cat": "clothe", "slot": "part", "value": "toe box", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  toe box. \n        Output: ", "result": " shoe, boot, sneaker, moccasin, loafer, sandal, slipper, moccasin, loafer, sandal. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can have toe box'\n        words = get_"}
{"cat": "clothe", "slot": "part", "value": "insole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  insole. \n        Output: ", "result": "\n```\nshoes, sneakers, sandals, boots, flip-flops, slippers, loafers, moccasins, clogs, mules\n```\n\n```python\nProvide a list of 10 words that belong to the category and"}
{"cat": "clothe", "slot": "part", "value": "counter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  counter. \n        Output: ", "result": "\n        dress,shirt,pants,jacket,skirt,shoes,tie,socks,blouse,coat \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"counter\" in word:\n            words.append("}
{"cat": "clothe", "slot": "part", "value": "hip pocket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  hip pocket. \n        Output: ", "result": "\n```\njeans, pants, shorts, shirt, t-shirt, jacket, coat, dress, skirt, blouse\n```\nExplanation:\n\n1. jeans, pants, shorts, shirt, t-shirt, jacket, coat"}
{"cat": "clothe", "slot": "part", "value": "outsole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  outsole. \n        Output: ", "result": "\n```\nshoe, boot, sneaker, sandal, moccasin, loafer, slipper, clog, mule, flip-flop\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "clothe", "slot": "part", "value": "toecap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  toecap. \n        Output: ", "result": " shoe, boot, sneaker, trainer, moccasin, loafer, slipper, sandal, clog, moccasin. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can have toecap'\n        words = get_"}
{"cat": "clothe", "slot": "part", "value": "shirt button", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  shirt button. \n        Output: ", "result": " shirt, button, blouse, collar, cuff, dress, jacket, pants, shoe, sock.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"shirt button\" in word:\n            words.append(word)"}
{"cat": "clothe", "slot": "part", "value": "thumb", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  thumb. \n        Output: ", "result": " shoe, sock, glove, hat, scarf, jacket, pants, shirt, tie, belt. \n    \"\"\"\n    thumb_words = [\"thumb\"]\n    result = []\n    for word in all_words:\n        if \"thumb\" in"}
{"cat": "clothe", "slot": "part", "value": "box pleat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  box pleat. \n        Output: ", "result": " pants, jacket, skirt, dress, shirt, blouse, coat, scarf, gloves, socks.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"box pleat\" in word:\n            words.append(word)"}
{"cat": "clothe", "slot": "part", "value": "crown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  crown. \n        Output: ", "result": " coat, crown, dress, hat, jacket, jewelry, shoe, sock, suit. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"crown\" in word:\n            words.append(word)\n    return words"}
{"cat": "clothe", "slot": "part", "value": "earflap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  earflap. \n        Output: ", "result": "\n        scarf, hat, mitten, glove, earmuff, earflap, coat, sweater, sock, boots \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"earflap\" in word:\n            words."}
{"cat": "clothe", "slot": "part", "value": "shirttail", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  shirttail. \n        Output: ", "result": " shirt, tail, shirttail, blouse, collar, cuff, sleeve, trouser, pant, skirt.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word"}
{"cat": "clothe", "slot": "part", "value": "sunray pleat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  sunray pleat. \n        Output: ", "result": "\n```\nsunray,pleat\n```\nsunray,pleat\nsunray,pleat\nsunray,pleat\nsunray,pleat\nsunray,pleat\nsunray,pleat\nsunray,pleat\nsunray,pleat\nsunray,pleat"}
{"cat": "clothe", "slot": "part", "value": "gad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  gad. \n        Output: ", "result": "\n        gadget, gadgetry, gadgetry, gadgets, gizmo, gizmos, gizmo, gizmos, gizmo, gizmos, gizmo, gizmos, gizmo, gizmos, gizmo,"}
{"cat": "clothe", "slot": "part", "value": "shirting", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  shirting. \n        Output: ", "result": " shirt, shirting, blouse, blousing, blouson, shirtings, shirtings, shirtings, shirtings, shirtings. \n        Explanation: shirt, shirting, blouse, blousing, blouson, sh"}
{"cat": "clothe", "slot": "part", "value": "shoe string", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  shoe string. \n        Output: ", "result": "\n```\nshoe, sock, sneaker, boot, slipper, sandal, shoe string, sock string, sneaker string, boot string, slipper string, sandal string\n```"}
{"cat": "clothe", "slot": "part", "value": "lacing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  lacing. \n        Output: ", "result": " shoe, boot, sneaker, sandal, moccasin, shoe lace, boot lace, sneaker lace, sandal lace, moccasin lace. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can have la"}
{"cat": "clothe", "slot": "part", "value": "brim", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  brim. \n        Output: ", "result": " hat, cap, brim, visor, headband, scarf, gloves, socks, shoe, boot.\n    \"\"\"\n    category = input(\"Provide a list of 10 words that belong to the category and satisfy the condition. \")\n    category_words = category"}
{"cat": "clothe", "slot": "part", "value": "buckle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  buckle. \n        Output: ", "result": "\n```\njeans, belt, shoe, boot, zipper, button, lace, strap, sneaker, sandal\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "clothe", "slot": "part", "value": "spur", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  spur. \n        Output: ", "result": "\n        jeans, pants, shirt, jacket, coat, t-shirt, socks, shoes, belt, spur \n\"\"\"\n\nword_list = [\"jeans\", \"pants\", \"shirt\", \"jacket\", \"coat\", \"t"}
{"cat": "clothe", "slot": "part", "value": "bodice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  bodice. \n        Output: ", "result": " dress, bodice, bodice, bodice, bodice, bodice, bodice, bodice, bodice. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"bodice\" in word:\n            words.append(word)\n"}
{"cat": "clothe", "slot": "part", "value": "saddle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  saddle. \n        Output: ", "result": " horse, saddle, saddle, saddle, saddle, saddle, saddle, saddle, saddle. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"saddle\" in word:\n            words.append(word)\n   "}
{"cat": "clothe", "slot": "part", "value": "shoestring", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  shoestring. \n        Output: ", "result": " shoe,shoestring,shoes,shoestring,shoes,shoestring,shoes,shoestring,shoes,shoestring.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if"}
{"cat": "clothe", "slot": "part", "value": "placket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  placket. \n        Output: ", "result": " shirt, jacket, vest, blouse, dress, pants, skirt, coat, sweater, t-shirt. \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "clothe", "slot": "part", "value": "finger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  finger. \n        Output: ", "result": " coat, finger, glove, hand, hat, jacket, mitten, sleeve, sock, sweater.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n   "}
{"cat": "clothe", "slot": "part", "value": "shoelace", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  shoelace. \n        Output: ", "result": " shoe,lace,shoelace. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"shoelace\" in word:\n            words.append(word)\n    return words\n\ndef count_vowels(word_list"}
{"cat": "clothe", "slot": "part", "value": "pleat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  pleat. \n        Output: ", "result": "\n```\ndress, shirt, blouse, pants, skirt, jacket, coat, scarf, sock, belt\n```"}
{"cat": "clothe", "slot": "part", "value": "toe", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  toe. \n        Output: ", "result": " shoe, boot, sock, sandal, sneaker, bootie, moccasin, slipper, loafer, clog.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"toe\" in word:\n            words."}
{"cat": "clothe", "slot": "part", "value": "bootleg", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  bootleg. \n        Output: ", "result": " shoe, boot, bootleg, sneaker, moccasin, moccasins, slipper, slippers, loafer, loafers. \n        \"\"\"\n        category = Category.objects.get(name='clothe')\n        words = Word.objects.filter"}
{"cat": "clothe", "slot": "part", "value": "eyehole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  eyehole. \n        Output: ", "result": " shirt, blouse, eyelet, eyelet, eyelet, eyelet, eyelet, eyelet, eyelet. \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n"}
{"cat": "clothe", "slot": "part", "value": "dickie", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  dickie. \n        Output: ", "result": "\n```\ndickie, shirt, blouse, dress, pants, skirt, coat, jacket, socks, underwear\n```\nExplanation: The word `dickie` satisfies the condition of belonging to the category `clothe` and can be included in the"}
{"cat": "clothe", "slot": "part", "value": "hatband", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  hatband. \n        Output: ", "result": "\n```\nscarf, gloves, hat, hatband, socks, sweater, vest, jacket, shirt, pants\n```"}
{"cat": "clothe", "slot": "part", "value": "eyelet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  eyelet. \n        Output: ", "result": " shoe, sandal, flip-flop, sneaker, moccasin, loafer, slipper, mule, clog, espadrille. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can have  eyelet'\n        words"}
{"cat": "clothe", "slot": "part", "value": "spike", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  spike. \n        Output: ", "result": " boot, glove, sock, spike, shoe, jacket, pant, hat, scarf, belt.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"spike\" in word:\n            words.append(word)\n"}
{"cat": "clothe", "slot": "part", "value": "sleeve", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  sleeve. \n        Output: ", "result": " coat, jacket, sweater, sweatshirt, shirt, blouse, dress, pants, skirt, sock.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"sleeve\" in word:\n            words.append("}
{"cat": "clothe", "slot": "part", "value": "sunburst pleat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  sunburst pleat. \n        Output: ", "result": "\n```\nsunburst pleat, plaid, flannel, denim, corduroy, tweed, chambray, gingham, herringbone, plaid\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "clothe", "slot": "part", "value": "ruffle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  ruffle. \n        Output: ", "result": "\n```\ndress, shirt, blouse, skirt, pants, shorts, jacket, coat, scarf\n```\nExplanation: The words that can have ruffle are dress, shirt, blouse, skirt, pants, shorts, jacket, and"}
{"cat": "clothe", "slot": "part", "value": "kick pleat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  kick pleat. \n        Output: ", "result": " pants, shorts, skirt, dress, shirt, blouse, jacket, coat, scarf, socks.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n"}
{"cat": "clothe", "slot": "part", "value": "shoe lace", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  shoe lace. \n        Output: ", "result": "\n```\nshoe,lace,shoe-lace,lace-shoe,shoe-lace-shoe,lace-shoe-lace,shoe-lace-shoe-lace,lace-shoe-lace-shoe,shoe-lace-shoe-lace-sh"}
{"cat": "clothe", "slot": "part", "value": "dicky", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  dicky. \n        Output: ", "result": " shirt, pants, jacket, tie, socks, shoes, underwear, hat, scarf, dicky.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"dicky\" in word:\n            words.append(word)"}
{"cat": "clothe", "slot": "part", "value": "half sole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  half sole. \n        Output: ", "result": " shoe, sneaker, sandal, flip-flop, slipper, moccasin, loafer, clog, mule, moccasin. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can have half sole'\n        words"}
{"cat": "clothe", "slot": "part", "value": "bootlace", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  bootlace. \n        Output: ", "result": " boot,lace,lace,lace,lace,lace,lace,lace,lace. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"bootlace\" in word:\n            words.append(word)\n    return words\n\ndef count_v"}
{"cat": "clothe", "slot": "part", "value": "earlap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  earlap. \n        Output: ", "result": "\n```\ncoat, jacket, sweater, scarf, gloves, hat, socks, shirt, pants, earlap\n```\nExplanation:\nThe word \"earlap\" satisfies the condition of the category \"clothe\" as it is a type of clothing."}
{"cat": "clothe", "slot": "part", "value": "neckband", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  neckband. \n        Output: ", "result": " shirt, t-shirt, blouse, dress, sweater, sweatshirt, coat, jacket, scarf, necktie.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words("}
{"cat": "clothe", "slot": "part", "value": "shirtsleeve", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  shirtsleeve. \n        Output: ", "result": " shirt, sleeve, blouse, cuff, collar, jacket, vest, sweater, sock, tie.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"shirtsleeve\" in word:\n            words.append"}
{"cat": "clothe", "slot": "part", "value": "dickey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  dickey. \n        Output: ", "result": "\n```\ncoat, jacket, sweater, shirt, pants, dress, skirt, blouse, socks, underwear\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "clothe", "slot": "material", "value": "lace", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of lace. \n        Output: ", "result": "\n        dress, lace, gloves, scarf, shawl, socks, stockings, handkerchief, apron, petticoat. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can be made of lace'\n        words ="}
{"cat": "clothe", "slot": "material", "value": "coat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of coat. \n        Output: ", "result": "\n            coat, jacket, sweater, shirt, pants, dress, skirt, socks, scarf, gloves.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"coat\" in word:\n            words.append(word"}
{"cat": "clothe", "slot": "generalization", "value": "garment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are garment. \n        Output: ", "result": "\n```\nshirt,pants,dress,jacket,skirt,socks,shoes,tie,scarf,hat\n```\nExplanation: The words that belong to the category \"clothe\" and satisfy the condition \"are garment\" are: shirt,"}
{"cat": "clothe", "slot": "generalization", "value": "clothing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are clothing. \n        Output: ", "result": "\n```\nshirt,pants,dress,jacket,skirt,socks,shoes,tie,scarf,hat\n```"}
{"cat": "clothe", "slot": "generalization", "value": "covering", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are covering. \n        Output: ", "result": "\n```\ncoat, jacket, sweater, scarf, gloves, hat, socks, shirt, pants, skirt\n```\nExplanation: The word `coat` satisfies the condition of being a covering, and it belongs to the category of clothing. Therefore,"}
{"cat": "clothe", "slot": "generalization", "value": "consumer goods", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are consumer goods. \n        Output: ", "result": "\n```\njeans, t-shirt, socks, underwear, shirt, pants, dress, skirt, coat, shoes\n```\nExplanation:\nThe words that belong to the category \"clothe\" and satisfy the condition \"are consumer goods\" are: je"}
{"cat": "clothe", "slot": "generalization", "value": "footwear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are footwear. \n        Output: ", "result": "\n```\nshoes, socks, sandals, boots, slippers, sneakers, flip-flops, loafers, clogs, moccasins\n```\n\n```python\nProvide a list of 10 words that belong to the category and"}
{"cat": "clothe", "slot": "generalization", "value": "habiliment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are habiliment. \n        Output: ", "result": "\n```\nhabiliment, attire, apparel, clothing, garb, vesture, raiment, wardrobe, appurtenance, attirement\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "clothe", "slot": "generalization", "value": "vesture", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are vesture. \n        Output: ", "result": "\n```\ncoat, dress, shirt, skirt, suit, tie, trousers, vest, waistcoat\n```\nExplanation: The words that belong to the category \"clothe\" and satisfy the condition \"are vesture\" are: coat, dress, shirt,"}
{"cat": "clothe", "slot": "generalization", "value": "article of clothing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are article of clothing. \n        Output: ", "result": "\n```\nshirt,pants,socks,hat,jacket,dress,skirt,shoes,tie,scarf\n```\nExplanation: The words that belong to the category \"clothe\" and satisfy the condition of being an article of clothing are: sh"}
{"cat": "clothe", "slot": "generalization", "value": "wearable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are wearable. \n        Output: ", "result": "\n```\ndress, shirt, pants, socks, shoes, hat, scarf, jacket, gloves, belt\n```"}
{"cat": "clothe", "slot": "generalization", "value": "wear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are wear. \n        Output: ", "result": "\n```\ndress, shirt, pants, socks, shoes, jacket, hat, scarf, gloves\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "clothe", "slot": "generalization", "value": "artifact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are artifact. \n        Output: ", "result": "\n```\nscarf, shawl, stole, sash, kerchief, cravat, neckerchief, headband, bandana, turban\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "clothe", "slot": "generalization", "value": "artefact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are artefact. \n        Output: ", "result": "\n            \n        \"\"\"\n        category = 'clothe'\n        condition = 'are artefact'\n        words = get_words(category, condition)\n        if words:\n            print(', '.join(words))\n        else:\n            print('No words found.')\n```\n"}
{"cat": "clothe", "slot": "generalization", "value": "shoe", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are shoe. \n        Output: ", "result": "\n```\nshoe, sock, sneaker, boot, sandal, slipper, loafer, moccasin, clog, flip-flop\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "clothe", "slot": "generalization", "value": "headwear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are headwear. \n        Output: ", "result": "\n        beanie, cap, hat, beret, toque, scarf, gloves, mittens, earmuffs, balaclava \n    \"\"\"\n    headwear = [\"beanie\", \"cap\", \"hat\", \"beret\", \"toque\", \"scarf\","}
{"cat": "clothe", "slot": "generalization", "value": "headdress", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are headdress. \n        Output: ", "result": "\n```\nturban, fez, kippah, turban, fez, kippah, turban, fez, kippah, turban\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "clothe", "slot": "generalization", "value": "footgear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are footgear. \n        Output: ", "result": "\n```\nshoes, boots, sneakers, sandals, flip-flops, slippers, loafers, moccasins, mules, clogs\n```\n\n```python\nProvide a list of 10 words that belong to the category and"}
{"cat": "clothe", "slot": "generalization", "value": "headgear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are headgear. \n        Output: ", "result": "\n```\nhat, cap, visor, beret, toque, beanie, newsboy, bowler, derby, fedora\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma"}
{"cat": "clothe", "slot": "generalization", "value": "handwear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are handwear. \n        Output: ", "result": "\n```\nscarf, gloves, hat, socks, mittens, earmuffs, cap, mitt, glove, scarf\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "clothe", "slot": "generalization", "value": "hand wear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are hand wear. \n        Output: ", "result": "\n```\nscarf, gloves, hat, socks, mittens, earmuffs, cap, mitt, glove, scarf\n```"}
{"cat": "clothe", "slot": "generalization", "value": "trade good", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are trade good. \n        Output: ", "result": "\n```\ndress, shirt, pants, coat, shoes, hat, socks, scarf, belt\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma"}
{"cat": "clothe", "slot": "generalization", "value": "commodity", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are commodity. \n        Output: ", "result": "\n```\nshirt,pant,dress,jacket,tie,shoes,socks,hat,scarf\n```"}
{"cat": "clothe", "slot": "generalization", "value": "whole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are whole. \n        Output: ", "result": "\n```\ndress, shirt, pants, jacket, socks, shoes, belt, hat, scarf, gloves\n```\nExplanation: The words that belong to the category \"clothe\" and satisfy the condition \"are whole\" are: dress, shirt,"}
{"cat": "clothe", "slot": "generalization", "value": "outer garment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are outer garment. \n        Output: ", "result": "\n            coat, jacket, sweater, shirt, pants, dress, skirt, blouse, suit, overcoat.\n        \"\"\"\n        category = 'clothe'\n        condition = 'are outer garment'\n        words = get_words(category, condition)\n"}
{"cat": "clothe", "slot": "generalization", "value": "good", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are good. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "generalization", "value": "overgarment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are overgarment. \n        Output: ", "result": " coat, jacket, sweater, sweatshirt, shirt, blouse, pants, skirt, dress, overalls.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "clothe", "slot": "generalization", "value": "woman's clothing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are woman's clothing. \n        Output: ", "result": "\n        dress, skirt, blouse, shirt, pants, coat, jacket, sweater, scarf, gloves\n\"\"\"\n\nword_list = [\"dress\", \"skirt\", \"blouse\", \"shirt\", \"pants\", \"coat\", \"jack"}
{"cat": "clothe", "slot": "generalization", "value": "unit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are unit. \n        Output: ", "result": "2, 4, 6, 8, 10, 12, 14, 16, 18, 20\n    \"\"\"\n    words = []\n    for i in range(1, 21):\n        if i % 2 == "}
{"cat": "clothe", "slot": "generalization", "value": "hose", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are hose. \n        Output: ", "result": "\n```\nhosiery, socks, tights, pantyhose, leggings, stockings, hose, socks, tights, pantyhose\n```"}
{"cat": "clothe", "slot": "generalization", "value": "attire", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are attire. \n        Output: ", "result": "\n```\nformal, attire, suit, tuxedo, gown, dress, shirt, tie, pants, skirt\n```\nExplanation: The words that belong to the category \"clothe\" and satisfy the condition \"are attire\" are: formal, attire,"}
{"cat": "clothe", "slot": "generalization", "value": "cloak", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are cloak. \n        Output: ", "result": "\n```\ncloak, cape, robe, coat, jacket, vest, sweater, shirt, blouse, dress\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated"}
{"cat": "clothe", "slot": "generalization", "value": "disguise", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are disguise. \n        Output: ", "result": "\n            \n        \"\"\"\n        words = []\n        for word in word_list:\n            if \"disguise\" in word and \"clothe\" in word:\n                words.append(word)\n        return \", \".join(words)\n\n    @staticmethod\n    def print"}
{"cat": "clothe", "slot": "generalization", "value": "top", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are top. \n        Output: ", "result": "\n```\ntop, shirt, blouse, sweater, jacket, coat, dress, skirt, pants\n```"}
{"cat": "clothe", "slot": "generalization", "value": "garb", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are garb. \n        Output: ", "result": "\n            coat, dress, garb, gown, jacket, jerkin, mantle, robe, shirt, tunic\n        \"\"\"\n        category = 'clothe'\n        condition = 'are garb'\n        words = get_words(category, condition)\n       "}
{"cat": "clothe", "slot": "generalization", "value": "dress", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are dress. \n        Output: ", "result": "\n```\ndress, gown, suit, skirt, blouse, coat, pants, shirt, tie, dressy\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma"}
{"cat": "clothe", "slot": "generalization", "value": "hosiery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are hosiery. \n        Output: ", "result": "\n        socks,stockings,tights,pantyhose,hosiery,socks,stockings,tights,pantyhose,hosiery,socks,stockings,tights,pantyhose,hosiery,socks,stockings"}
{"cat": "clothe", "slot": "generalization", "value": "neckwear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are neckwear. \n        Output: ", "result": "\n```\ntie, bowtie, ascot, cravat, kerchief, scarf, neckerchief, bandana, snood, \n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "clothe", "slot": "colorPattern", "value": "patterned", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be patterned. \n        Output: ", "result": "\n        dress, blouse, shirt, skirt, pants, jacket, coat, scarf, socks, gloves\n\nExample 2:\nInput: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "clothe", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be black. \n        Output: ", "result": "\n        black, dress, coat, shirt, pants, skirt, shoes, socks, t-shirt.\n    \"\"\"\n    black_words = []\n    for word in words:\n        if \"black\" in word:\n            black_words.append(word)"}
{"cat": "clothe", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be black. \n        Output: ", "result": "\n        black, dress, coat, shirt, pants, skirt, shoes, socks, t-shirt.\n    \"\"\"\n    black_words = []\n    for word in words:\n        if \"black\" in word:\n            black_words.append(word)"}
{"cat": "clothe", "slot": "colorPattern", "value": "blue", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be blue. \n        Output: ", "result": "\n        blue, shirt, pants, jacket, socks, shoes, hat, gloves, scarf, coat.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)"}
{"cat": "clothe", "slot": "colorPattern", "value": "blue", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be blue. \n        Output: ", "result": "\n        blue, shirt, pants, jacket, socks, shoes, hat, gloves, scarf, coat.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)"}
{"cat": "clothe", "slot": "colorPattern", "value": "green", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be green. \n        Output: ", "result": "\n        green, dress, shirt, jacket, pants, socks, shoes, hat, scarf, gloves.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"green\" in word:\n            words.append(word)\n"}
{"cat": "clothe", "slot": "colorPattern", "value": "pink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be pink. \n        Output: ", "result": "\n            dress, pink, blouse, pink, skirt, pink, shirt, pink, scarf, pink. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can be pink'\n        words = get_words(category, condition"}
{"cat": "clothe", "slot": "colorPattern", "value": "pink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be pink. \n        Output: ", "result": "\n            dress, pink, blouse, pink, skirt, pink, shirt, pink, scarf, pink. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can be pink'\n        words = get_words(category, condition"}
{"cat": "clothe", "slot": "colorPattern", "value": "green", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be green. \n        Output: ", "result": "\n        green, dress, shirt, jacket, pants, socks, shoes, hat, scarf, gloves.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"green\" in word:\n            words.append(word)\n"}
{"cat": "clothe", "slot": "colorPattern", "value": "striped", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be striped. \n        Output: ", "result": "\n        dress,shirt,pants,socks,shoes,scarf,tie,jacket,skirt,blouse \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word"}
{"cat": "clothe", "slot": "colorPattern", "value": "red", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be red. \n        Output: ", "result": "\n        red, dress, coat, shirt, pants, socks, scarf, gloves, hat.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print(\","}
{"cat": "clothe", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be brown. \n        Output: ", "result": "\n          coat, jacket, sweater, scarf, gloves, hat, pants, shirt, socks, boots\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"can fly\". \n        Provide a list of "}
{"cat": "clothe", "slot": "colorPattern", "value": "red", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be red. \n        Output: ", "result": "\n        red, dress, coat, shirt, pants, socks, scarf, gloves, hat.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print(\","}
{"cat": "clothe", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be white. \n        Output: ", "result": "\n        white, shirt, dress, socks, pants, coat, scarf, gloves, hat.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"white\" in word:\n            words.append(word)\n    return words\n"}
{"cat": "clothe", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be brown. \n        Output: ", "result": "\n          coat, jacket, sweater, scarf, gloves, hat, pants, shirt, socks, boots\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"can fly\". \n        Provide a list of "}
{"cat": "clothe", "slot": "colorPattern", "value": "grey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be grey. \n        Output: ", "result": "\n        grey, grey-blue, grey-green, grey-purple, grey-red, grey-yellow, grey-brown, grey-black, grey-white, grey-grey. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can be grey'"}
{"cat": "clothe", "slot": "colorPattern", "value": "grey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be grey. \n        Output: ", "result": "\n        grey, grey-blue, grey-green, grey-purple, grey-red, grey-yellow, grey-brown, grey-black, grey-white, grey-grey. \n        \"\"\"\n        category = 'clothe'\n        condition = 'can be grey'"}
{"cat": "clothe", "slot": "colorPattern", "value": "shiny", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be shiny. \n        Output: ", "result": "\n        dress, shirt, shoes, jacket, pants, skirt, socks, belt, scarf, shiny. \n        \"\"\"\n        words = []\n        for word in word_list:\n            if \"shiny\" in word:\n                words.append"}
{"cat": "clothe", "slot": "colorPattern", "value": "glossy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be glossy. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "material", "value": "disposable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of disposable. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "specialization", "value": "pantaloon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are pantaloon. \n        Output: ", "result": "\n        pantaloon,trousers,jeans,shorts,skirt,dress,shirt,t-shirt,blouse,shoes.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words ="}
{"cat": "clothe", "slot": "specialization", "value": "jodhpurs", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are jodhpurs. \n        Output: ", "result": "\n```\njodhpurs, breeches, jeans, leggings, trousers, shorts, skirts, dresses, overalls, culottes\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "clothe", "slot": "specialization", "value": "short pants", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are short pants. \n        Output: ", "result": "\n            shorts, pants, capris, culottes, bermuda, skirts, skorts, dresses, overalls, rompers\n\"\"\"\n\nword_list = [\"pants\", \"shorts\", \"capris\", \"culottes\", \"berm"}
{"cat": "clothe", "slot": "specialization", "value": "churidars", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are churidars. \n        Output: ", "result": "\n```\nchuridar, salwar, kameez, kurta, pajama, shalwar, pyjama, lungi, dhoti, saree\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "clothe", "slot": "specialization", "value": "blue jean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are blue jean. \n        Output: ", "result": "\n        blue, denim, dungarees, jeans, overalls, shorts, chinos, khakis, pants, trousers.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []"}
{"cat": "clothe", "slot": "specialization", "value": "shalwar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are shalwar. \n        Output: ", "result": "\n```\nshalwar\nshalwar_kameez\nshalwar_qameez\nshalwar_pajama\nshalwar_kameez_salwar\nshalwar_kameez_pyjama\nshalwar_qameez_salwar\nshalwar_qame"}
{"cat": "clothe", "slot": "specialization", "value": "knee pants", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are knee pants. \n        Output: ", "result": "3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 1"}
{"cat": "clothe", "slot": "specialization", "value": "bellbottom trousers", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bellbottom trousers. \n        Output: ", "result": "70s, flared, denim, wide, pants, bellbottom, hippie, vintage, fashion. \n        \"\"\"\n        category = input(\"Enter category: \")\n        condition = input(\"Enter condition: \")\n        words = []\n        for word in text:"}
{"cat": "clothe", "slot": "specialization", "value": "sack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sack. \n        Output: ", "result": "\n```\nsack, sackcloth, sackman, sackful, sackboy, sackcloth, sackcloth, sackcloth, sackcloth, sackcloth, sackcloth, sackcloth, sackcloth, s"}
{"cat": "clothe", "slot": "specialization", "value": "chino", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are chino. \n        Output: ", "result": "\n```\nchino, pants, jeans, slacks, trousers, dungarees, overalls, shorts, khakis, slacks\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "clothe", "slot": "specialization", "value": "riding breeches", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are riding breeches. \n        Output: ", "result": "\n        jeans, chaps, breeches, jodhpurs, riding pants, riding shorts, riding tights, breeching, jodhpur. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are riding bree"}
{"cat": "clothe", "slot": "specialization", "value": "long pants", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are long pants. \n        Output: ", "result": "\n        jeans, overalls, pants, slacks, trousers, chinos, khakis, shorts, skirts, dress. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are long pants'\n        words = []\n"}
{"cat": "clothe", "slot": "specialization", "value": "corduroys", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are corduroys. \n        Output: ", "result": "\n        corduroy, jeans, slacks, trousers, overalls, dungarees, jodhpurs, breeches, britches, pants.\n    \"\"\"\n    corduroy, jeans, slacks, trousers, overalls, d"}
{"cat": "clothe", "slot": "specialization", "value": "gabardine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are gabardine. \n        Output: ", "result": "\n        gabardine, gabardine, gabardine, gabardine, gabardine, gabardine, gabardine, gabardine, gabardine, gabardine. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are gabardine'"}
{"cat": "clothe", "slot": "specialization", "value": "mitten", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are mitten. \n        Output: ", "result": "\n        glove, hat, mitten, scarf, sock, sweater, coat, boots, sweatshirt, sweatpants.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "clothe", "slot": "specialization", "value": "bell-bottoms", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bell-bottoms. \n        Output: ", "result": "\n        bell-bottoms, pants, jeans, slacks, trousers, dungarees, overalls, shorts, capris, leggings. \n        \"\"\"\n        category = input(\"Enter category: \")\n        condition = input(\"Enter condition: \")\n"}
{"cat": "clothe", "slot": "specialization", "value": "tweed", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are tweed. \n        Output: ", "result": "\n```\ntweed, plaid, herringbone, tweed, tartan, tweed, tweed, tweed, tweed, tweed\n```"}
{"cat": "clothe", "slot": "specialization", "value": "flannel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are flannel. \n        Output: ", "result": "\n```\nflannel, plaid, shirt, pajama, robe, blanket, scarf, vest, jacket, sweater\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "clothe", "slot": "specialization", "value": "shorts", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are shorts. \n        Output: ", "result": "\n```\nshorts, pants, skirt, dress, shirt, t-shirt, blouse, jacket, coat\n```"}
{"cat": "clothe", "slot": "specialization", "value": "pyjama", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are pyjama. \n        Output: ", "result": "\n        pajama, sleepwear, nightwear, loungewear, lounge suit, night suit, nightdress, nightgown, nightshirt, nightcap. \n        \"\"\"\n        category = \"clothe\"\n        condition = \"are pyjama"}
{"cat": "clothe", "slot": "specialization", "value": "sweatpants", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sweatpants. \n        Output: ", "result": "\n```\nsweatpants, tracksuit, joggers, pajamas, loungewear, leggings, sweatshirt, pyjamas, lounge suit, tracksuit bottoms\n```\nExplanation:\nThe words that belong to the category"}
{"cat": "clothe", "slot": "specialization", "value": "knickerbockers", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are knickerbockers. \n        Output: ", "result": "\n```\nknickerbockers, pantaloons, breeches, trousers, slacks, shorts, culottes, bloomers, knickers, drawers\n```\n\nExample:\n```\nProvide a list of 10 words that belong"}
{"cat": "clothe", "slot": "specialization", "value": "gantlet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are gantlet. \n        Output: ", "result": "\n```\ngantlet,sleeve,jacket,shirt,trousers,tie,socks,shoes,vest,coat\n```"}
{"cat": "clothe", "slot": "specialization", "value": "jodhpur breeches", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are jodhpur breeches. \n        Output: ", "result": "\n```\njodhpur, breeches, pantaloons, trousers, leggings, chaps, britches, breechcloth, loincloth\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the"}
{"cat": "clothe", "slot": "specialization", "value": "gauntlet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are gauntlet. \n        Output: ", "result": "\n        glove, gauntlet, sleeve, cuff, wrist, hand, arm, shoulder, elbow, \n        knee, sock, ankle, shoe, boot.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input"}
{"cat": "clothe", "slot": "specialization", "value": "long trousers", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are long trousers. \n        Output: ", "result": "\n        pants,trousers,overalls,dungarees,sarong,skirt,kilt,skort,culottes,bloomers\n\"\"\"\n\n# Define the function\ndef get_words(category, condition):\n    # Split the category and condition"}
{"cat": "clothe", "slot": "specialization", "value": "salwar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are salwar. \n        Output: ", "result": "\n        kurta, salwar, kameez, saree, lehnga, churidar, salwar-kameez, salwar-kurta, salwar-pyjama, salwar-kameez-sherwani\n    \"\"\"\n    category = '"}
{"cat": "clothe", "slot": "specialization", "value": "trunks", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are trunks. \n        Output: ", "result": "\n```\nswimsuit, shorts, bikini, tankini, monokini, one-piece, tank top, cover-up, board shorts, flip flops\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "clothe", "slot": "specialization", "value": "stretch pants", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are stretch pants. \n        Output: ", "result": "3L, 5L, 7L, 9L, 11L, 13L, 15L, 17L, 19L, 21L. \n        Explanation: 3L, 5L, 7L,"}
{"cat": "clothe", "slot": "specialization", "value": "breeches", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are breeches. \n        Output: ", "result": " breeches, britches, pants, trousers, trews, hose, knickers, breechings, petticoat, drawers. \n        \"\"\"\n        category = input(\"Enter category: \")\n        condition = input(\"Enter condition: \")\n        words"}
{"cat": "clothe", "slot": "specialization", "value": "toreador pants", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are toreador pants. \n        Output: ", "result": "\n        toreador,pants,clothe,\n```"}
{"cat": "clothe", "slot": "specialization", "value": "jumper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are jumper. \n        Output: ", "result": "\n```\njumper,sweater,cardigan,pullover,sweatshirt,sweatjacket,sweatpants,sweatshirt,sweater,sweatshirt\n```"}
{"cat": "clothe", "slot": "specialization", "value": "pajama", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are pajama. \n        Output: ", "result": "\n        pajama, sleepwear, nightwear, loungewear, pyjama, jammies, nightshirt, nightdress, nightgown, nightclothes. \n        \"\"\"\n        category = \"clothe\"\n        condition = \"are p"}
{"cat": "clothe", "slot": "specialization", "value": "trews", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are trews. \n        Output: ", "result": "\n```\ntrews, trousers, pants, slacks, breeches, chinos, shorts, jeans, overalls, dungarees\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. "}
{"cat": "clothe", "slot": "specialization", "value": "sweat pants", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sweat pants. \n        Output: ", "result": "\n        Sweatshirt, Sweatpants, Hoodie, Joggers, Tracksuit, Sweatshorts, Sweatjacket, Sweattop, Sweatpant, Sweatdress \n    \"\"\"\n    print(\"Sweat"}
{"cat": "clothe", "slot": "specialization", "value": "slacks", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are slacks. \n        Output: ", "result": "34, 36, 38, 40, 42, 44, 46, 48, 50, 52. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are slacks'\n        words"}
{"cat": "clothe", "slot": "specialization", "value": "knee breeches", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are knee breeches. \n        Output: ", "result": "\n        knee, breeches, pantaloons, hose, stockings, breeching, smallclothes, knickers, drawers, hose. \n        \"\"\"\n        category = input(\"Enter category: \")\n        condition = input(\"Enter condition: \")"}
{"cat": "clothe", "slot": "specialization", "value": "pedal pusher", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are pedal pusher. \n        Output: ", "result": "\n        jeans, overalls, shorts, pants, skirt, dress, shirt, blouse, jacket, coat \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"pedal\" in word and \"pusher\" in word:"}
{"cat": "clothe", "slot": "specialization", "value": "jean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are jean. \n        Output: ", "result": "\n```\njean, denim, dungaree, overalls, chinos, denim jacket, denim skirt, denim shorts, denim shirt, denim vest\n```\n\n```\nProvide a list of 10 words that belong to the category"}
{"cat": "clothe", "slot": "specialization", "value": "cords", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are cords. \n        Output: ", "result": "\n        jeans, corduroy, corduroy, corduroy, corduroy, corduroy, corduroy, corduroy, corduroy. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are cords'\n        words = get_"}
{"cat": "clothe", "slot": "specialization", "value": "knickers", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are knickers. \n        Output: ", "result": "\n        panties, underpants, knickers, briefs, shorts, pants, trousers, breeches, drawers, hose.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words ="}
{"cat": "clothe", "slot": "specialization", "value": "bellbottom pants", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bellbottom pants. \n        Output: ", "result": "\n        bellbottom, denim, flared, hippie, patchwork, psychedelic, seventies, tie-dye, vintage. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are bellbottom pants'\n        words = get_"}
{"cat": "clothe", "slot": "specialization", "value": "shako", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are shako. \n        Output: ", "result": "\n```\nshako, hat, cap, headwear, military, uniform, headgear, headpiece, headdress, headwear\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "clothe", "slot": "specialization", "value": "pinny", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are pinny. \n        Output: ", "result": "\n        pinafore\n        apron\n        smock\n        kirtle\n        cassock\n        surplice\n        robe\n        frock\n        peignoir\n        kimono\n        \"\"\"\n    words = [\n        \"pinafore\",\n        \""}
{"cat": "clothe", "slot": "specialization", "value": "kurta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are kurta. \n        Output: ", "result": "\n        kurta, pajama, salwar, kameez, saree, lehnga, churidar, dhoti, lungi, pyjama.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n"}
{"cat": "clothe", "slot": "specialization", "value": "swallow-tailed coat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are swallow-tailed coat. \n        Output: ", "result": "\n```\nswallow-tailed, coat, tails, swallow, tailoring, tailor, coatings, tailor-made, tailor-fitted, tailor-made, tailor-fitted\n```\n```\nProvide a list of 10 words that belong"}
{"cat": "clothe", "slot": "specialization", "value": "Eton jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are Eton jacket. \n        Output: ", "result": "\n```\nEton, jacket, blazer, coat, suit, shirt, trousers, tie, shoes, cufflinks\n```\nExplanation: The words that belong to the category \"clothes\" and satisfy the condition \"are Eton jacket\" are: E"}
{"cat": "clothe", "slot": "specialization", "value": "half mask", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are half mask. \n        Output: ", "result": "\n        scuba, snorkel, diving, swim, goggles, flippers, life jacket, mask, snorkel, wetsuit \n    \"\"\"\n    category = \"clothe\"\n    condition = \"are half mask\"\n    words = get_"}
{"cat": "clothe", "slot": "specialization", "value": "turban", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are turban. \n        Output: ", "result": "\n```\nturban,scarf,shawl,turban,turban,turban,turban,turban,turban\n```"}
{"cat": "clothe", "slot": "specialization", "value": "argyle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are argyle. \n        Output: ", "result": "\n```\nargyle, cardigan, socks, sweater, scarf, dress, shirt, vest, pants\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma"}
{"cat": "clothe", "slot": "specialization", "value": "baseball cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are baseball cap. \n        Output: ", "result": "\n```\nbaseball, cap, hat, visor, beanie, capris, pants, shorts, skirt, skort\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "clothe", "slot": "specialization", "value": "helmet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are helmet. \n        Output: ", "result": "\n```\nbicycle, helmet, jacket, pants, gloves, shoes, shirt, socks, shorts, hat\n```"}
{"cat": "clothe", "slot": "specialization", "value": "crinoline", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are crinoline. \n        Output: ", "result": "\n```\ncrinoline, petticoat, hoopskirt, corset, bustle, bustle, bustle, bustle, bustle, bustle\n```\n\n### Example 2:\n```\nProvide a list of 1"}
{"cat": "clothe", "slot": "specialization", "value": "miniskirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are miniskirt. \n        Output: ", "result": "\n```\nminiskirt, shorts, skirt, dress, pants, jeans, leggings, trousers, overalls\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma"}
{"cat": "clothe", "slot": "specialization", "value": "Glengarry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are Glengarry. \n        Output: ", "result": "\n        Glengarry,Glengarry,Glengarry,Glengarry,Glengarry,Glengarry,Glengarry,Glengarry,Glengarry,Glengarry. \n       "}
{"cat": "clothe", "slot": "specialization", "value": "windcheater", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are windcheater. \n        Output: ", "result": " windcheater, jacket, coat, sweater, shirt, t-shirt, pants, jeans, dress, skirt.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "clothe", "slot": "specialization", "value": "dressing sacque", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are dressing sacque. \n        Output: ", "result": "\n        dressing, sacque, coat, jacket, blouse, shirt, pants, skirt, dress, suit \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)"}
{"cat": "clothe", "slot": "specialization", "value": "top hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are top hat. \n        Output: ", "result": "\n```\ntop hat, tuxedo, bow tie, monocle, cummerbund, waistcoat, tailcoat, shirt, cufflinks, suspenders\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "clothe", "slot": "specialization", "value": "Balmoral", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are Balmoral. \n        Output: ", "result": "\n        Balmoral,coat,jacket,skirt,dress,trousers,shirt,tie,shoes,socks\n```\n\n```\nDescribe a scenario in which you need to extract a list of words from a string, where the words belong to a"}
{"cat": "clothe", "slot": "specialization", "value": "sport coat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sport coat. \n        Output: ", "result": "\n```\nsport, coat, blazer, jacket, suit, tuxedo, dress pants, dress shirt, dress shoes, bow tie\n```\nExplanation: The words that belong to the category \"clothe\" and satisfy the condition of being a \"sport coat\""}
{"cat": "clothe", "slot": "specialization", "value": "banian", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are banian. \n        Output: ", "result": "\n```\nbanian, sari, salwar, kameez, kurta, pajama, lungi, dhoti, saree\n```\nExplanation:\nThe words that belong to the category \"clothe\" and satisfy the condition \"are banian\" are: sari"}
{"cat": "clothe", "slot": "specialization", "value": "anorak", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are anorak. \n        Output: ", "result": "\n        anorak, coat, jacket, parka, raincoat, windbreaker, outerwear, waterproof, weatherproof, rubberized.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []"}
{"cat": "clothe", "slot": "specialization", "value": "dunce cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are dunce cap. \n        Output: ", "result": "\n```\ndunce, cap, hat, fool, knave, moron, imbecile, idiot, buffoon, nincompoop\n```\nExplanation: The words that belong to the category \"clothes\" and satisfy the condition \"are dunce cap\" are"}
{"cat": "clothe", "slot": "specialization", "value": "flat cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are flat cap. \n        Output: ", "result": "\n```\nflat cap, flat cap, flat cap, flat cap, flat cap, flat cap, flat cap, flat cap, flat cap\n```"}
{"cat": "clothe", "slot": "specialization", "value": "opera hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are opera hat. \n        Output: ", "result": "\n        opera, hat, hat, hat, hat, hat, hat, hat, hat, \n        hat, hat, hat, hat, hat, hat, hat, hat, hat, \n        hat, hat, hat, hat, hat, hat, hat, hat, hat, \n"}
{"cat": "clothe", "slot": "specialization", "value": "muumuu", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are muumuu. \n        Output: ", "result": "\n```\nmuumuu, muumuu, muumuu, muumuu, muumuu, muumuu, muumuu, muumuu, muumuu\n```"}
{"cat": "clothe", "slot": "specialization", "value": "work-shirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are work-shirt. \n        Output: ", "result": "\n        shirt,work,shirts,workshirt,workshirts,workwear,workout,workoutwear,workoutshirt,workoutshirts.\n    \"\"\"\n    category = 'clothe'\n    condition = 'are work-shirt"}
{"cat": "clothe", "slot": "specialization", "value": "jeweled headdress", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are jeweled headdress. \n        Output: ", "result": "\n        diamond, tiara, crown, necklace, earrings, bracelet, brooch, tiara, necklace, earrings \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "clothe", "slot": "specialization", "value": "golf cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are golf cap. \n        Output: ", "result": "\n```\ncap, shirt, pants, shoes, socks, gloves, hat, jacket, shorts, t-shirt\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "clothe", "slot": "specialization", "value": "pea jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are pea jacket. \n        Output: ", "result": "\n```\npea jacket, parka, anorak, coat, jacket, windbreaker, raincoat, slicker, mackinaw, overcoat\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "clothe", "slot": "specialization", "value": "donkey jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are donkey jacket. \n        Output: ", "result": "\n```\ndonkey jacket, denim jacket, leather jacket, bomber jacket, biker jacket, shearling jacket, parka jacket, pea coat jacket, trench coat jacket, overcoat jacket. \n```\n\n```\n"}
{"cat": "clothe", "slot": "specialization", "value": "T-shirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are T-shirt. \n        Output: ", "result": "\n        t-shirt,shirt,top,tee,tshirt,shirts,tees,tops,tshirts,shirt. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are T-shirt'\n        words ="}
{"cat": "clothe", "slot": "specialization", "value": "biretta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are biretta. \n        Output: ", "result": "\n```\nbiretta, cassock, chasuble, cope, dalmatic, ferraiolo, humeral veil, mozzetta, pectoral cross, stole\n```\nExplanation: The words that belong to the category \"clothe\" and satisfy"}
{"cat": "clothe", "slot": "specialization", "value": "evening shirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are evening shirt. \n        Output: ", "result": "\n        evening, shirt, bowtie, cummerbund, cufflinks, suspenders, vest, cummerbund, cummerbund, cummerbund. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are evening shirt'\n        words = []\n"}
{"cat": "clothe", "slot": "specialization", "value": "silk hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are silk hat. \n        Output: ", "result": "\n        silk, hat, silkhat, silkhat, silkshat, silkshat, silkshat, silkshat, silkshat, silkshat.\n    \"\"\"\n    words = []\n    for word in word_list:\n       "}
{"cat": "clothe", "slot": "specialization", "value": "dressing sack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are dressing sack. \n        Output: ", "result": "\n```\ndressing, sack, suit, shirt, pants, coat, dress, skirt, blouse, scarf\n```\nExplanation: The words that belong to the category \"clothe\" and satisfy the condition \"are dressing sack\" are \"dressing"}
{"cat": "clothe", "slot": "specialization", "value": "ten-gallon hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are ten-gallon hat. \n        Output: ", "result": "10-gallon, hat, cowboy, boots, spurs, chaps, vest, shirt, jeans, cowboy boots.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "clothe", "slot": "specialization", "value": "jewelled headdress", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are jewelled headdress. \n        Output: ", "result": "\n        diamond, tiara, crown, necklace, earrings, bracelet, brooch, ring, anklet, bangle.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "clothe", "slot": "specialization", "value": "balaclava", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are balaclava. \n        Output: ", "result": "\n        balaclava, beanie, gloves, hat, scarf, socks, sweater, sweatshirt, turtleneck, underwear.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words"}
{"cat": "clothe", "slot": "specialization", "value": "shovel hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are shovel hat. \n        Output: ", "result": "\n        shovel,hat,shovelhat,shovelhats,shovelhat,shovelhats,shovelhat,shovelhats,shovelhat,shovelhats\n    \"\"\"\n    words = []\n    for word in"}
{"cat": "clothe", "slot": "specialization", "value": "fedora", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are fedora. \n        Output: ", "result": "\n```\nfedora, hat, headwear, accessory, fashion, men, 10.0\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words"}
{"cat": "clothe", "slot": "specialization", "value": "swallowtail", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are swallowtail. \n        Output: ", "result": "\n```\nswallowtail,tailcoat,swallowtailsuit,swallowtaildress,swallowtailshirt,swallowtailjacket,swallowtailpants,swallowtailskirt,swallowtailblouse,swallowtailgown\n```\nExplanation:"}
{"cat": "clothe", "slot": "specialization", "value": "overskirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are overskirt. \n        Output: ", "result": "\n```\noverskirt, petticoat, underskirt, kirtle, cotehardie, surcoat, robe, gown, kilt, plaid\n```"}
{"cat": "clothe", "slot": "specialization", "value": "tabi", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are tabi. \n        Output: ", "result": "\n```\ntabi, socks, sandals, shoes, pants, shorts, shirt, jacket, hat, gloves\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "clothe", "slot": "specialization", "value": "cockscomb", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are cockscomb. \n        Output: ", "result": "\n```\ncockerel, cockscomb, cockerel, cockscomb, cockerel, cockscomb, cockerel, cockscomb, cockerel, cockscomb\n```"}
{"cat": "clothe", "slot": "specialization", "value": "mess jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are mess jacket. \n        Output: ", "result": "\n```\njacket, coat, sweater, shirt, t-shirt, pants, jeans, dress, skirt, blouse\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "clothe", "slot": "specialization", "value": "toque", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are toque. \n        Output: ", "result": "\n        toque,scarf,hat,gloves,jacket,pants,shirt,socks,boots,coat \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"toque\" in word:\n            words.append"}
{"cat": "clothe", "slot": "specialization", "value": "bush jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bush jacket. \n        Output: ", "result": "\n            bomber, jacket, parka, coat, sweater, t-shirt, jeans, pants, shirt, hoodie.\n        \"\"\"\n        category = Category.objects.get(name='clothe')\n        words = Word.objects.filter(category="}
{"cat": "clothe", "slot": "specialization", "value": "peaked cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are peaked cap. \n        Output: ", "result": "\n```\npeaked cap, beret, trilby, fedora, newsboy cap, flat cap, baker boy cap, bowler hat, pork pie hat, tam o'shanter\n```\n\n```python\nProvide a list of 10 words that belong to the"}
{"cat": "clothe", "slot": "specialization", "value": "trilby", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are trilby. \n        Output: ", "result": "\n```\ntrilby, hat, fedora, bowler, baseball cap, beret, newsboy cap, panama hat, straw hat, sun hat\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "clothe", "slot": "specialization", "value": "peacoat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are peacoat. \n        Output: ", "result": "\n        peacoat, parka, coat, jacket, sweater, t-shirt, shirt, pants, jeans, socks.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "clothe", "slot": "specialization", "value": "kaffiyeh", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are kaffiyeh. \n        Output: ", "result": "\n        ```\nkaffiyeh,scarf,shemagh,keffiyeh,headscarf,checkered,headdress,Arab,Middle Eastern\n```"}
{"cat": "clothe", "slot": "specialization", "value": "skullcap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are skullcap. \n        Output: ", "result": "\n```\nskullcap, beret, fedora, trilby, cloche, newsboy, bowler, derby, snapback, bucket hat\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "clothe", "slot": "specialization", "value": "cavalier hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are cavalier hat. \n        Output: ", "result": "\n```\ncavalier, hat, hat, hat, hat, hat, hat, hat, hat\n```"}
{"cat": "clothe", "slot": "specialization", "value": "campaign hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are campaign hat. \n        Output: ", "result": "\n```\ncampaign,hat,stetson,ten-gallon,cowboy,fedora,trilby,bowler,newsboy,derby\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "clothe", "slot": "specialization", "value": "sari", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sari. \n        Output: ", "result": "\n```\nsari, saree, salwar, kameez, lehnga, choli, ghagra, churidar, salwar kameez, saree blouse\n```\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "clothe", "slot": "specialization", "value": "felt hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are felt hat. \n        Output: ", "result": "\n```\nfelt, hat, beret, cap, beanie, toque, skullcap, newsboy, cloche, tam\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated"}
{"cat": "clothe", "slot": "specialization", "value": "wimple", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are wimple. \n        Output: ", "result": "\n        wimple, hood, cowl, coif, veil, mantle, cape, cloak, scarf, shawl \n    \"\"\"\n    category = \"clothe\"\n    condition = \"are wimple\"\n    words = get_words(category"}
{"cat": "clothe", "slot": "specialization", "value": "tarboosh", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are tarboosh. \n        Output: ", "result": "\n        tarboosh, fez, turban, kufi, taqiyah, ghutra, keffiyeh, hijab, abaya, dishdasha.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if word."}
{"cat": "clothe", "slot": "specialization", "value": "hood", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are hood. \n        Output: ", "result": "\n```\nhood,sweatshirt,hoodie,hooded,hooded jacket,hooded sweatshirt,hooded sweatshirt,hooded sweatshirt,hooded sweatshirt,hooded sweatshirt,hooded sweatshirt\n"}
{"cat": "clothe", "slot": "specialization", "value": "sun hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sun hat. \n        Output: ", "result": "\n```\nhat, scarf, gloves, sunglasses, shirt, pants, shorts, socks, sandals, swimwear\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "clothe", "slot": "specialization", "value": "mobcap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are mobcap. \n        Output: ", "result": "\n        mobcap, hood, cape, cowl, beret, tam, turban, scarf, kerchief, bandana \n    \"\"\"\n    category = 'clothe'\n    condition = 'are mobcap'\n    words = get_words(category, condition)"}
{"cat": "clothe", "slot": "specialization", "value": "pinafore", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are pinafore. \n        Output: ", "result": "\n        pinafore, apron, dress, blouse, shirt, skirt, overalls, romper, smock, frock.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word"}
{"cat": "clothe", "slot": "specialization", "value": "polo shirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are polo shirt. \n        Output: ", "result": "\n```\npolo, shirt, t-shirt, polo shirt, shirts, t-shirts, shirt\n```"}
{"cat": "clothe", "slot": "specialization", "value": "culotte", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are culotte. \n        Output: ", "result": "\n```\nculotte, pantalon, jupe, robe, chemise, camisole, blouse, robe de mariage, robe de cocktail, robe de soir\u00e9e\n```\n```\nProvide a list of 10 words that belong to the category"}
{"cat": "clothe", "slot": "specialization", "value": "leghorn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are leghorn. \n        Output: ", "result": "\n```\nhat, shoes, socks, trousers, shirt, coat, scarf, gloves, belt\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "clothe", "slot": "specialization", "value": "lumberjack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are lumberjack. \n        Output: ", "result": "\n            beanie, plaid, flannel, denim, suspenders, workboots, chainsaw, axe, lumberjack, plaid. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are lumberjack'\n        words = []\n       "}
{"cat": "clothe", "slot": "specialization", "value": "woman's hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are woman's hat. \n        Output: ", "result": "\n            \n        \"\"\"\n        category = 'clothe'\n        condition = 'are woman\\'s hat'\n        words = get_words(category, condition)\n        return ', '.join(words)\n\n    else:\n        print(\"Invalid input. Please try again.\")\n\ndef"}
{"cat": "clothe", "slot": "specialization", "value": "athletic sock", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are athletic sock. \n        Output: ", "result": "\n          sock,shoe,sneaker,runner,tennis,gym,athletic,sport,workout,fitness\n\"\"\"\n\n# Define the function\ndef get_words(category, condition):\n    # Create an empty list to store the words\n   "}
{"cat": "clothe", "slot": "specialization", "value": "overseas cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are overseas cap. \n        Output: ", "result": "\n```\ncap, jacket, shirt, pants, socks, shoes, coat, scarf, gloves, hat\n```"}
{"cat": "clothe", "slot": "specialization", "value": "cloth cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are cloth cap. \n        Output: ", "result": "\n```\ncloth,cap,hat,jacket,shirt,pants,socks,scarf,vest,gloves\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "clothe", "slot": "specialization", "value": "stovepipe", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are stovepipe. \n        Output: ", "result": "\n        jeans, overalls, pants, shirt, coat, vest, suspenders, boots, spurs, spike. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"stovepipe\" in word:\n            words.append"}
{"cat": "clothe", "slot": "specialization", "value": "domino", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are domino. \n        Output: ", "result": "\n        dress,shirt,pants,tie,jacket,skirt,blouse,shoes,socks,pantyhose \n    \"\"\"\n    category = \"clothe\"\n    condition = \"are domino\"\n    words = get_words(category"}
{"cat": "clothe", "slot": "specialization", "value": "balaclava helmet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are balaclava helmet. \n        Output: ", "result": "\n        balaclava, helmet, balaclava, helmet, balaclava, helmet, balaclava, helmet, balaclava, helmet. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are balaclava helmet'\n        words"}
{"cat": "clothe", "slot": "specialization", "value": "doublet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are doublet. \n        Output: ", "result": "\n        doublet, coat, jerkin, tunic, surcoat, cotehardie, gambeson, hauberk, aketon, padded jacket.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")"}
{"cat": "clothe", "slot": "specialization", "value": "fur hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are fur hat. \n        Output: ", "result": "\n        beaver, mink, ermine, otter, fox, rabbit, squirrel, wolf, coyote, wolverine. \n        \"\"\"\n        category = 'clothes'\n        condition = 'are fur hat'\n        words = get_words"}
{"cat": "clothe", "slot": "specialization", "value": "straw hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are straw hat. \n        Output: ", "result": "\n```\nstraw,hat,strawhat,straw-hat,strawhat,straw-strawhat,straw-straw-hat,straw-straw-strawhat,straw-straw-straw-hat,straw-straw-st"}
{"cat": "clothe", "slot": "specialization", "value": "skimmer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are skimmer. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "specialization", "value": "bobbysocks", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bobbysocks. \n        Output: ", "result": "\n```\nbobbysocks, socks, stockings, tights, pantyhose, leggings, knee-highs, socks with sandals, socks with sneakers, socks with boots\n```\n```\nProvide a list of "}
{"cat": "clothe", "slot": "specialization", "value": "tutu", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are tutu. \n        Output: ", "result": "\n```\ntutu, tutu skirt, tutu dress, tutu pants, tutu shorts, tutu leggings, tutu top, tutu jacket, tutu skirt suit, tutu romper\n```\n```"}
{"cat": "clothe", "slot": "specialization", "value": "bolero", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bolero. \n        Output: ", "result": "\n```\nbolero, shawl, poncho, cape, mantle, scarf, stole, muffler, snood, kerchief\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "clothe", "slot": "specialization", "value": "beret", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are beret. \n        Output: ", "result": "\n        beret, scarf, beret, beret, beret, beret, beret, beret, beret. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"beret\" in word:\n            words.append(word)\n"}
{"cat": "clothe", "slot": "specialization", "value": "sports jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sports jacket. \n        Output: ", "result": "\n```\nsports,jacket\n```\n\n```\njacket,sports\n```\n\n```\nsports,jacket\n```\n\n```\njacket,sports\n```\n\n```\nsports,jacket\n```\n\n```\njacket,sports\n"}
{"cat": "clothe", "slot": "specialization", "value": "golf glove", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are golf glove. \n        Output: ", "result": "\n        golf,glove,golfing,golfers,golfball,golfbag,golfclub,golfcourse,golfer,golfers\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n   "}
{"cat": "clothe", "slot": "specialization", "value": "cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are cap. \n        Output: ", "result": "\n```\nhat, cap, beret, toque, beanie, skullcap, newsboy, trilby, fedora, bowler\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "clothe", "slot": "specialization", "value": "slouch hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are slouch hat. \n        Output: ", "result": "\n```\nslouch,hat,hat,hat,hat,hat,hat,hat,hat\n```"}
{"cat": "clothe", "slot": "specialization", "value": "cocktail dress", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are cocktail dress. \n        Output: ", "result": "\n        evening, gown, cocktail, dress, formal, party, black, white, colorful, sequin. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are cocktail dress'\n        words = get_words(category, condition)\n       "}
{"cat": "clothe", "slot": "specialization", "value": "kepi", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are kepi. \n        Output: ", "result": "\n```\nkepi, cap, beret, toque, beanie, knit, scarf, gloves, mittens, socks\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "clothe", "slot": "specialization", "value": "kalansuwa", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are kalansuwa. \n        Output: ", "result": "\u0c95\u0cb2\u0c82\u0cb8\u0cc1\u0cb5, \u0c95\u0cb2\u0c82\u0cb8\u0cc1\u0cb5, \u0c95\u0cb2\u0c82\u0cb8\u0cc1\u0cb5, \ufffd\ufffd\ufffd\ufffd"}
{"cat": "clothe", "slot": "specialization", "value": "sailor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sailor. \n        Output: ", "result": "\n```\nsailor, pants, shirt, hat, jacket, shoes, shorts, socks, trousers\n```"}
{"cat": "clothe", "slot": "specialization", "value": "bobbysock", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bobbysock. \n        Output: ", "result": "\n```\nbobbysock, pantyhose, socks, stockings, tights, leggings, knee-highs, hose, socks, stockings\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "clothe", "slot": "specialization", "value": "shirtdress", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are shirtdress. \n        Output: ", "result": "\n        dress, shirt, blouse, shirtdress, shirtdress, dressshirt, blouseshirt, dressblouse, shirtdresses, blouseshirtdress \n    \"\"\"\n    category = 'clothe'\n    condition = 'are sh"}
{"cat": "clothe", "slot": "specialization", "value": "mini", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are mini. \n        Output: ", "result": "\n```\nmini, skirt, dress, top, shirt, pants, shorts, jacket, coat\n```"}
{"cat": "clothe", "slot": "specialization", "value": "sailor cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sailor cap. \n        Output: ", "result": "\n```\nsailor, cap, hat, jacket, shirt, pants, shoes, shorts, socks, suit\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "clothe", "slot": "specialization", "value": "kid glove", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are kid glove. \n        Output: ", "result": "\n```\nkid,glove\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: car. \n"}
{"cat": "clothe", "slot": "specialization", "value": "sarong", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sarong. \n        Output: ", "result": "\n```\nsarong, kebaya, baju kurung, baju melayu, batik, songket, sampin, kain sarong, kain tenun, kain raffia\n```\nExplanation:\n```\nThe word \"sarong\""}
{"cat": "clothe", "slot": "specialization", "value": "hoopskirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are hoopskirt. \n        Output: ", "result": "\n        petticoat, crinoline, bustle, hoopskirt, corset, bustle, bustle, bustle, bustle, bustle.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition"}
{"cat": "clothe", "slot": "specialization", "value": "muff", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are muff. \n        Output: ", "result": "\n```\nmuff, muffin, muffler, muffin, muffin, muffin, muffin, muffin, muffin, muffin\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "clothe", "slot": "specialization", "value": "tammy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are tammy. \n        Output: ", "result": "\n```\ntammy,tammy,tammy,tammy,tammy,tammy,tammy,tammy,tammy\n```"}
{"cat": "clothe", "slot": "specialization", "value": "tee shirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are tee shirt. \n        Output: ", "result": "\n```\ntee, shirt, t-shirt, top, blouse, dress, skirt, pants, jeans, shorts\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "clothe", "slot": "specialization", "value": "shift", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are shift. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "specialization", "value": "bomber jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bomber jacket. \n        Output: ", "result": " bomber, jacket, bomberjacket, flightjacket, leatherjacket, aviator, peacoat, parka, shearling, trenchcoat. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are bomber jacket'"}
{"cat": "clothe", "slot": "specialization", "value": "hair shirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are hair shirt. \n        Output: ", "result": "\n```\nhair shirt, hair shirt, hair shirt, hair shirt, hair shirt, hair shirt, hair shirt, hair shirt, hair shirt\n```"}
{"cat": "clothe", "slot": "specialization", "value": "full skirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are full skirt. \n        Output: ", "result": "\n        petticoat, tutu, crinoline, fullskirt, ballgown, mermaiddress, weddingdress, promdress, empirewaistdress, a-line dress\n    \"\"\"\n    category = 'clothe'\n    condition = '"}
{"cat": "clothe", "slot": "specialization", "value": "dashiki", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are dashiki. \n        Output: ", "result": "\n        dashiki, kufi, djellaba, boubou, kaftan, agbada, kikoy, kitenge, dashiki, kitenge. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are dashiki'\n       "}
{"cat": "clothe", "slot": "specialization", "value": "sombrero", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sombrero. \n        Output: ", "result": "\n        sombrero,guayabera,maracas,margarita,salsa,sombrero,guayabera,maracas,margarita,salsa,\n```"}
{"cat": "clothe", "slot": "specialization", "value": "tam", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are tam. \n        Output: ", "result": "\n        \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"tam\" in word:\n            words.append(word)\n    return words\n\ndef count_vowels(word_list):\n    \"\"\"\n    Given a list of words"}
{"cat": "clothe", "slot": "specialization", "value": "Norfolk jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are Norfolk jacket. \n        Output: ", "result": "\n```\nNorfolk, jacket, tweed, herringbone, wool, peaked, collar, cuffs, waistcoat, hip, pockets\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong"}
{"cat": "clothe", "slot": "specialization", "value": "blazer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are blazer. \n        Output: ", "result": "\n```\nblazer, jacket, suit, coat, vest, sweater, shirt, pants, dress \n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated"}
{"cat": "clothe", "slot": "specialization", "value": "lumber jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are lumber jacket. \n        Output: ", "result": "\n```\njacket, plaid, flannel, denim, chambray, corduroy, leather, tweed, wool, plaid\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "clothe", "slot": "specialization", "value": "sports coat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sports coat. \n        Output: ", "result": "\n```\nsports, coat, blazer, jacket, suit, tuxedo, topcoat, overcoat, trenchcoat, pea coat\n```"}
{"cat": "clothe", "slot": "specialization", "value": "shell jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are shell jacket. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "specialization", "value": "cowboy hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are cowboy hat. \n        Output: ", "result": "\n```\nhat, boots, jeans, chaps, shirt, belt, spurs, cowboy, wrangler\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "clothe", "slot": "specialization", "value": "monkey jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are monkey jacket. \n        Output: ", "result": "\n```\nmonkey, jacket, jumpsuit, hoodie, sweater, t-shirt, shirt, pants, shorts, jeans\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. "}
{"cat": "clothe", "slot": "specialization", "value": "sundress", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sundress. \n        Output: ", "result": "\n        sundress, sundress, sundress, sundress, sundress, sundress, sundress, sundress, sundress. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are sundress'\n        words ="}
{"cat": "clothe", "slot": "specialization", "value": "sheath", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sheath. \n        Output: ", "result": "\n```\ndress, skirt, coat, jacket, pants, shirt, blouse, scarf, gloves\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "clothe", "slot": "specialization", "value": "birretta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are birretta. \n        Output: ", "result": "\n        */\n        public List<string> GetWords(string category, string condition)\n        {\n            List<string> words = new List<string>();\n            using (MySqlConnection connection = new MySqlConnection(connectionString))\n            {\n                connection.Open();\n               "}
{"cat": "clothe", "slot": "specialization", "value": "sunhat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sunhat. \n        Output: ", "result": "\n        sunhat, cap, hat, visor, brim, peak, shade, shelter, parasol, awning \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)"}
{"cat": "clothe", "slot": "specialization", "value": "dirndl", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are dirndl. \n        Output: ", "result": "\n            dirndl, lederhosen, blouse, suspenders, apron, dirndlskirt, dirndlvest, dirndlhat, dirndlshoes, dirndlsocks\n        \"\"\"\n        category = 'clothe'\n        condition = '"}
{"cat": "clothe", "slot": "specialization", "value": "mortarboard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are mortarboard. \n        Output: ", "result": " cap, gown, hood, tassel, graduation, diploma, academic, regalia, ceremony, commencement. \n        \"\"\"\n        category = input(\"Enter category: \")\n        condition = input(\"Enter condition: \")\n        words = []\n        for word in"}
{"cat": "clothe", "slot": "specialization", "value": "morning coat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are morning coat. \n        Output: ", "result": "\n```\nmorning, coat, tailcoat, frockcoat, dress coat, black tie, white tie, dinner jacket, lounge suit, tuxedo\n```\nExplanation: The words that belong to the category \"clothe\" and satisfy the condition \"are morning coat"}
{"cat": "clothe", "slot": "specialization", "value": "lavalava", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are lavalava. \n        Output: ", "result": "\n```\nlavava, pareu, muumuu, hibiscus, sarong, lavalava, pareu, muumuu, hibiscus, sarong\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "clothe", "slot": "specialization", "value": "garrison cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are garrison cap. \n        Output: ", "result": "\n        garrison,cap,garrisoncap,garrisoncover,garrisonhat,garrisonheadgear,garrisonwear,garrisonapparel,garrisonclothing,garrisonuniform.\n    \"\"\"\n    category = 'clothe'\n    condition = 'are garrison cap"}
{"cat": "clothe", "slot": "specialization", "value": "swimming cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are swimming cap. \n        Output: ", "result": "\n```\nswimming cap, swimsuit, goggles, swimming trunks, swimming costume, swimwear, swimming suit, swimming outfit, swimming attire\n```\nExplanation: The words that belong to the category \"clothes\" and"}
{"cat": "clothe", "slot": "specialization", "value": "service cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are service cap. \n        Output: ", "result": "\n        Army, Navy, Air Force, Marine Corps, Coast Guard, Police, Firefighter, Scout, Cadet, Pilot.\n    \"\"\"\n    category = 'clothe'\n    condition = 'are service cap'\n    words = get_words(category, condition)\n"}
{"cat": "clothe", "slot": "specialization", "value": "kilt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are kilt. \n        Output: ", "result": "\n```\nkilt, plaid, tartan, sgian dubh, sporran, kilt pin, ghillie brogues, tam o'shanter, knee socks, argyll socks\n```\n```"}
{"cat": "clothe", "slot": "specialization", "value": "tyrolean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are tyrolean. \n        Output: ", "result": "\n```\nscarf, tie, bowtie, kerchief, cravat, sash, neckerchief, ascot, bandana, handkerchief\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "clothe", "slot": "specialization", "value": "batting glove", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are batting glove. \n        Output: ", "result": "\n        bat, batting, glove, batting glove, dugout, catcher, fielder, pitcher, umpire, outfield\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "clothe", "slot": "specialization", "value": "knee-high", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are knee-high. \n        Output: ", "result": "\n```\nboots, pants, socks, shoes, trousers, jeans, shorts, skirt, dress, leggings\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "clothe", "slot": "specialization", "value": "grass skirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are grass skirt. \n        Output: ", "result": "\n```\ngrass, skirt, hula, lei, coconut, palm, tropical, island, aloha, hibiscus\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "clothe", "slot": "specialization", "value": "bonnet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bonnet. \n        Output: ", "result": "\n```\nhat, bonnet, scarf, gloves, coat, dress, shirt, pants, socks, shoes\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated"}
{"cat": "clothe", "slot": "specialization", "value": "beaver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are beaver. \n        Output: ", "result": "\n```\nbeaver, fur, hat, pelt, tail, dam, lodge, teeth, castoreum\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list"}
{"cat": "clothe", "slot": "specialization", "value": "busby", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are busby. \n        Output: ", "result": "\n```\nbusby, bonnet, hat, cap, beret, mitten, glove, sock, shoe\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma"}
{"cat": "clothe", "slot": "specialization", "value": "nightcap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are nightcap. \n        Output: ", "result": "\n```\ncap, night, \n```\ncap, night, \n```\ncap, night, \n```\ncap, night, \n```\ncap, night, \n```\ncap, night, \n```\ncap, night, \n```\ncap, night, "}
{"cat": "clothe", "slot": "specialization", "value": "bluebonnet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bluebonnet. \n        Output: ", "result": "\n        bluebonnet,clothes,bluebonnets,bluebonnets,bluebonnets,bluebonnets,bluebonnets,bluebonnets,bluebonnets,bluebonnets. \n        \"\"\"\n        words = []\n        for word in"}
{"cat": "clothe", "slot": "specialization", "value": "ski cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are ski cap. \n        Output: ", "result": "\n        ski,cap,hat,mask,glove,jacket,pants,shirt,socks,boots \n    \"\"\"\n    category = \"clothe\"\n    condition = \"are ski cap\"\n    words = get_words(category, condition)\n    print"}
{"cat": "clothe", "slot": "specialization", "value": "calpack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are calpack. \n        Output: ", "result": "\n        dress,shirt,pants,tie,jacket,skirt,blouse,shoes,socks,pantyhose \n    \"\"\"\n    category = 'clothe'\n    condition = 'are calpack'\n    words = get_words(category"}
{"cat": "clothe", "slot": "specialization", "value": "coonskin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are coonskin. \n        Output: ", "result": "\n        coonskin\n        Category: clothe. \n        Condition: are coonskin. \n        Output: \n        coonskin\n        Category: clothe. \n        Condition: are coonskin. \n        Output: \n        coonskin\n"}
{"cat": "clothe", "slot": "specialization", "value": "sport jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sport jacket. \n        Output: ", "result": "\n```\nsport,jacket\n```\n\nExample:\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition"}
{"cat": "clothe", "slot": "specialization", "value": "dolman", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are dolman. \n        Output: ", "result": "\n```\ndolman,shirt,jacket,pants,tunic,vest,coat,shoes,socks,scarf\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n"}
{"cat": "clothe", "slot": "specialization", "value": "bearskin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bearskin. \n        Output: ", "result": "\n        bearskin coat, bearskin hat, bearskin gloves, bearskin boots, bearskin scarf, bearskin vest, bearskin jacket, bearskin pants, bearskin shirt, bearskin socks.\n    \"\"\"\n   "}
{"cat": "clothe", "slot": "specialization", "value": "mitre", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are mitre. \n        Output: ", "result": "\n```\nmitre, coat, scarf, gloves, hat, socks, shoes, shirt, tie, pants\n```\n\n```\nmitre, coat, scarf, gloves, hat, socks, shoes, shirt, tie, pants\n```\n"}
{"cat": "clothe", "slot": "specialization", "value": "hobble skirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are hobble skirt. \n        Output: ", "result": "\n        pencil skirt, miniskirt, maxi skirt, midi skirt, pleated skirt, A-line skirt, circle skirt, tutu, tutu skirt, tutu dress.\n    \"\"\"\n    category = input(\"Enter category: \")\n   "}
{"cat": "clothe", "slot": "specialization", "value": "metal glove", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are metal glove. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "specialization", "value": "coonskin cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are coonskin cap. \n        Output: ", "result": "\n```\ncoonskin cap, raccoon coat, raccoon hat, raccoon skin, raccoon jacket, raccoon pelt, raccoon shirt, raccoon suit, raccoon vest, raccoon fur\n```\n\n```\nDesired input:\nProvide a list of "}
{"cat": "clothe", "slot": "specialization", "value": "kirtle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are kirtle. \n        Output: ", "result": "\n        - gown\n        - kirtle\n        - cote\n        - surcoat\n        - doublet\n        - jupon\n        - tabard\n        - mantle\n        - cloak\n        - hood\n        \"\"\"\n    words = []\n    for"}
{"cat": "clothe", "slot": "specialization", "value": "tank top", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are tank top. \n        Output: ", "result": "\n```\ntank top, tank top, tank top, tank top, tank top, tank top, tank top, tank top, tank top\n```"}
{"cat": "clothe", "slot": "specialization", "value": "dress hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are dress hat. \n        Output: ", "result": "\n        dress,hat,gown,jacket,shirt,skirt,socks,tie,trousers,vest \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition"}
{"cat": "clothe", "slot": "specialization", "value": "sacque", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sacque. \n        Output: ", "result": "\n            sacque, sacque, sacque, sacque, sacque, sacque, sacque, sacque, sacque. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are sacque'\n        words = get_words(category, condition)\n       "}
{"cat": "clothe", "slot": "specialization", "value": "knee-hi", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are knee-hi. \n        Output: ", "result": "\n```\njeans, pants, shorts, socks, shoes, shirts, t-shirts, underwear, trousers\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "clothe", "slot": "specialization", "value": "kalpac", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are kalpac. \n        Output: ", "result": "\n```\nkalpac,sweater,sweatshirt,jacket,coat,hoodie,sweatpants,pants,shirt,t-shirt\n```"}
{"cat": "clothe", "slot": "specialization", "value": "watch cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are watch cap. \n        Output: ", "result": "\n```\nwatch cap, baseball cap, fedora, beret, newsboy cap, trucker cap, fisherman cap, bucket hat, cowboy hat, safari hat\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "clothe", "slot": "specialization", "value": "fez", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are fez. \n        Output: ", "result": "\n        fez, hat, turban, skullcap, yarmulke, kippah, cap, beret, toque, tam. \n        \"\"\"\n        category = 'clothes'\n        condition = 'are fez'\n        words = get_words(category"}
{"cat": "clothe", "slot": "specialization", "value": "banyan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are banyan. \n        Output: ", "result": "\n```\nbanana, banyan, banyan, banyan, banyan, banyan, banyan, banyan, banyan\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. "}
{"cat": "clothe", "slot": "specialization", "value": "morning dress", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are morning dress. \n        Output: ", "result": "\n        morning,dress,suit,tie,shirt,pants,jacket,shoes,socks,bowtie\n```\n\n```\nDescribe a scenario where the input is a list of strings, where each string is a word that belongs to a specific category, and"}
{"cat": "clothe", "slot": "specialization", "value": "millinery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are millinery. \n        Output: ", "result": "\n```\nhat, scarf, gloves, socks, shoes, shirt, pants, jacket, dress, skirt\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma"}
{"cat": "clothe", "slot": "specialization", "value": "deerstalker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are deerstalker. \n        Output: ", "result": "\n        deerstalker\n        hat\n        coat\n        scarf\n        gloves\n        boots\n        spats\n        cane\n        umbrella\n        bowler\n    \"\"\"\n    clothe_words = [\"deerstalker\", \"hat\", \"coat\","}
{"cat": "clothe", "slot": "specialization", "value": "single-breasted jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are single-breasted jacket. \n        Output: ", "result": "\n            1. Blazer\n            2. Suit jacket\n            3. Tuxedo jacket\n            4. Pea coat\n            5. Overcoat\n            6. Topcoat\n            7. Anorak\n            8. Parka\n            9. Bomber jack"}
{"cat": "clothe", "slot": "specialization", "value": "Mother Hubbard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are Mother Hubbard. \n        Output: ", "result": "\n```\nhat,shirt,dress,skirt,pants,coat,socks,shoes,scarf,hat\n```"}
{"cat": "clothe", "slot": "specialization", "value": "eye mask", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are eye mask. \n        Output: ", "result": "\n        eye, sleep, mask, black, white, cotton, silk, cucumber, lavender, hood.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n"}
{"cat": "clothe", "slot": "specialization", "value": "Panama hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are Panama hat. \n        Output: ", "result": "\n```\nPanama, hat, straw, brim, sun, protection, headwear, fashion, accessory, \n```\n1. Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words"}
{"cat": "clothe", "slot": "specialization", "value": "jockey cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are jockey cap. \n        Output: ", "result": "\n```\njockey, cap\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition"}
{"cat": "clothe", "slot": "specialization", "value": "daishiki", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are daishiki. \n        Output: ", "result": "\n        daishiki, kimono, yukata, hakama, obi, obijime, tabi, zori, geta, tabi-socks \n    \"\"\"\n    category = 'clothe'\n    condition = 'are daishiki'\n    words"}
{"cat": "clothe", "slot": "specialization", "value": "jersey", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are jersey. \n        Output: ", "result": "\n```\njersey, t-shirt, shirt, blouse, sweater, sweatshirt, hoodie, tank top, dress, polo\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. "}
{"cat": "clothe", "slot": "specialization", "value": "coxcomb", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are coxcomb. \n        Output: ", "result": "\n```\ncoxcomb, coat, coatings, coatings, coatings, coatings, coatings, coatings, coatings, coatings\n```\nExplanation: The words that belong to the category \"clothe\" and satisfy the condition \"are coxcomb\" are \"coat"}
{"cat": "clothe", "slot": "specialization", "value": "sweat sock", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sweat sock. \n        Output: ", "result": "\n        sock,sweat,sock,sweat,sock,sweat,sock,sweat,sock,sweat,sock,sweat.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n   "}
{"cat": "clothe", "slot": "specialization", "value": "miter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are miter. \n        Output: ", "result": "\n```\nmitre, miter, miter, miter, miter, miter, miter, miter, miter\n```"}
{"cat": "clothe", "slot": "specialization", "value": "tabis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are tabis. \n        Output: ", "result": "\u7740\u7269, \u888b\u5b50, \u978b\u5b50, \u670d\u88c5, \u8863\u670d, \u88e4\u5b50, \u4e0a\u8863, \u9886\u5e26, \u978b\u5b50, \u88e4\u5b50.\n    \"\"\"\n   "}
{"cat": "clothe", "slot": "specialization", "value": "camise", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are camise. \n        Output: ", "result": "1. camisetas, 2. camisetas, 3. camisetas, 4. camisetas, 5. camisetas, 6. camisetas, 7. camisetas, 8. camisetas, "}
{"cat": "clothe", "slot": "specialization", "value": "parka", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are parka. \n        Output: ", "result": "\n        arctic, anorak, bomber, coat, down, parka, puffer, snood, sweater, vest.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"parka\" in word:\n            words.append("}
{"cat": "clothe", "slot": "specialization", "value": "shower cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are shower cap. \n        Output: ", "result": "\n        shower,cap,shower,cap,shower,cap,shower,cap,shower,cap,shower,cap \n    \"\"\"\n    category = 'clothe'\n    condition = 'are shower cap'\n    words = get_words(category, condition"}
{"cat": "clothe", "slot": "specialization", "value": "bed jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bed jacket. \n        Output: ", "result": "\n```\njacket, coat, sweater, shirt, pants, dress, skirt, blouse, socks, underwear\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "clothe", "slot": "specialization", "value": "topper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are topper. \n        Output: ", "result": "\n            \n        \"\"\"\n        words = []\n        for word in word_list:\n            if \"topper\" in word and \"clothe\" in word:\n                words.append(word)\n        return \", \".join(words)\n\n    def print_category(self, category"}
{"cat": "clothe", "slot": "specialization", "value": "Mao jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are Mao jacket. \n        Output: ", "result": "\n        */\n        public List<string> GetWords(string category, string condition)\n        {\n            List<string> words = new List<string>();\n\n            using (MySqlConnection connection = new MySqlConnection(connectionString))\n            {\n                connection.Open();\n"}
{"cat": "clothe", "slot": "specialization", "value": "hug-me-tight", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are hug-me-tight. \n        Output: ", "result": "\n        hug-me-tight, snuggle-me-tight, squeeze-me-tight, \n        cuddle-me-tight, embrace-me-tight, hold-me-tight, \n        squeeze"}
{"cat": "clothe", "slot": "specialization", "value": "coatdress", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are coatdress. \n        Output: ", "result": "\n        coat, dress, coatdress, coatdress, coatdress, coatdress, coatdress, \n        coatdress, coatdress, coatdress. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are coatdress'\n"}
{"cat": "clothe", "slot": "specialization", "value": "anklet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are anklet. \n        Output: ", "result": "\n```\nanklet, bracelet, cuff, footwear, jewelry, legwear, sandal, shoe, sock, wristwear\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and"}
{"cat": "clothe", "slot": "specialization", "value": "dress shirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are dress shirt. \n        Output: ", "result": "\n        dress, shirt, blouse, suit, jacket, tie, pants, skirt, shoes, socks.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)"}
{"cat": "clothe", "slot": "specialization", "value": "tam-o'-shanter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are tam-o'-shanter. \n        Output: ", "result": "\n        tam-o'-shanter, tartan, plaid, kilt, trews, sporran, sgian-dubh, ghillie-brogues, brogues, knee-boots \n    \"\"\"\n    words = []\n    for word in"}
{"cat": "clothe", "slot": "specialization", "value": "dolman jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are dolman jacket. \n        Output: ", "result": "\n        dolman, jacket, sweatshirt, hoodie, t-shirt, shirt, pants, jeans, shorts, socks.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words ="}
{"cat": "clothe", "slot": "specialization", "value": "tirolean", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are tirolean. \n        Output: ", "result": "\n        jeans,shirt,jacket,socks,hat,scarf,gloves,pants,shoes,overalls\n\"\"\"\n\nword_list = [\"jeans\", \"shirt\", \"jacket\", \"socks\", \"hat\", \"scarf\","}
{"cat": "clothe", "slot": "specialization", "value": "calpac", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are calpac. \n        Output: ", "result": "\n```\ncalpac,calpac,calpac,calpac,calpac,calpac,calpac,calpac,calpac\n```"}
{"cat": "clothe", "slot": "specialization", "value": "berretta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are berretta. \n        Output: ", "result": "\n```\nberretta,shirt,pants,jacket,tie,dress,skirt,blouse,socks,shoes\n```\nExplanation: The words that belong to the category \"clothes\" and satisfy the condition \"are berretta\" are"}
{"cat": "clothe", "slot": "specialization", "value": "varsity sock", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are varsity sock. \n        Output: ", "result": "\n        socks,sweater,scarf,hat,gloves,jacket,pants,shirt,jeans,boots \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "clothe", "slot": "specialization", "value": "jerkin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are jerkin. \n        Output: ", "result": "\n```\njerkin, jacket, coat, vest, cloak, tunic, shirt, blouse, sweater, sweatshirt\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "clothe", "slot": "specialization", "value": "sport shirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sport shirt. \n        Output: ", "result": "\n        t-shirt,sport shirt,tennis shirt,athletic shirt,gym shirt,workout shirt,exercise shirt,sportswear,activewear,gymwear.\n    \"\"\"\n    category = 'clothe'"}
{"cat": "clothe", "slot": "specialization", "value": "topknot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are topknot. \n        Output: ", "result": "\n```\ntopknot, shirt, blouse, dress, coat, jacket, pants, skirt, scarf\n```"}
{"cat": "clothe", "slot": "specialization", "value": "stocking cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are stocking cap. \n        Output: ", "result": "\n```\nstocking,cap,hat,gloves,scarf,socks,mitten,mittens,hat,gloves\n```"}
{"cat": "clothe", "slot": "specialization", "value": "chemise", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are chemise. \n        Output: ", "result": "\n        chemise, camisole, shift, blouse, nightgown, slip, robe, dressing gown, peignoir, negligee. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are chemise'\n        words = get_"}
{"cat": "clothe", "slot": "specialization", "value": "poke bonnet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are poke bonnet. \n        Output: ", "result": "\n            \n```"}
{"cat": "clothe", "slot": "specialization", "value": "titfer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are titfer. \n        Output: ", "result": "\n```\nhat, glasses, sunglasses, earrings, necklace, bracelet, watch, scarf, gloves, socks\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "clothe", "slot": "specialization", "value": "ballet skirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are ballet skirt. \n        Output: ", "result": "\n```\nskirt, tutu, leotard, ballet shoes, ballet slippers, tutu skirt, ballet dress, ballet pants, ballet tights, ballet leotard\n```\nExplanation: The words that belong to the category \"clothe"}
{"cat": "clothe", "slot": "specialization", "value": "kaftan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are kaftan. \n        Output: ", "result": "\n        kaftan, abaya, burqa, hijab, jilbab, kimono, sarong, sari, shawl, tunic.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words ="}
{"cat": "clothe", "slot": "specialization", "value": "snap-brim hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are snap-brim hat. \n        Output: ", "result": "\n```\nsnap-brim,hat,brimmed,brimmedhat,snaphat,snapbrimmedhat,brimmedsnaphat,snapbrimhat,hatbrimmed,brimmedhat\n```"}
{"cat": "clothe", "slot": "specialization", "value": "gown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are gown. \n        Output: ", "result": "\n```\ngown, robe, dress, suit, tuxedo, wedding gown, evening gown, ball gown, prom gown, cocktail gown\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "clothe", "slot": "specialization", "value": "anklets", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are anklets. \n        Output: ", "result": "\n```\nanklet, anklet, anklet, anklet, anklet, anklet, anklet, anklet, anklet\n```"}
{"cat": "clothe", "slot": "specialization", "value": "windbreaker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are windbreaker. \n        Output: ", "result": "\n            raincoat, windbreaker, parka, jacket, coat, sweater, t-shirt, shirt, pants, jeans.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n"}
{"cat": "clothe", "slot": "specialization", "value": "double-breasted jacket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are double-breasted jacket. \n        Output: ", "result": "\n          double-breasted, jacket, lapel, peak, collar, cuff, button, vent, pocket, flap\n        \"\"\"\n        category = 'clothes'\n        condition = 'are double-breasted jacket'\n        words = []\n        for word in"}
{"cat": "clothe", "slot": "specialization", "value": "bowler", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bowler. \n        Output: ", "result": "\n        bowler, cap, hat, shoes, trousers, jacket, shirt, socks, gloves \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n"}
{"cat": "clothe", "slot": "specialization", "value": "false face", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are false face. \n        Output: ", "result": "\n```\ndress, shirt, pants, jacket, socks, shoes, belt, hat, scarf, gloves\n```\nExplanation: \n\n1. dress, shirt, pants, jacket, socks, shoes, belt, hat"}
{"cat": "clothe", "slot": "specialization", "value": "bathing cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are bathing cap. \n        Output: ", "result": "\n        bathing cap, hat, swim cap, sun hat, beach hat, sun visor, skull cap, baseball cap, bucket hat, fisherman cap.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []"}
{"cat": "clothe", "slot": "specialization", "value": "biggin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are biggin. \n        Output: ", "result": "\n```\ncoat, jacket, sweater, shirt, pants, dress, skirt, blouse, scarf, socks\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "clothe", "slot": "specialization", "value": "gathered skirt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are gathered skirt. \n        Output: ", "result": "\n```\ngathered, skirt \n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe."}
{"cat": "clothe", "slot": "specialization", "value": "Stetson", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are Stetson. \n        Output: ", "result": "\n        ```\nStetson,hat,cowboy,hatmaker,hatshop,hatstore,cowboyhat,cowboyhatmaker,cowboyhatshop,cowboyhatstore\n```"}
{"cat": "clothe", "slot": "specialization", "value": "polonaise", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are polonaise. \n        Output: ", "result": "\n        dress, skirt, blouse, shirt, coat, pants, jacket, scarf, gloves, hat \n    \"\"\"\n    polonaise_words = [\"dress\", \"skirt\", \"blouse\", \"shirt\", \"coat\", \"pants\","}
{"cat": "clothe", "slot": "specialization", "value": "homburg", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are homburg. \n        Output: ", "result": "\n```\nhat, coat, scarf, gloves, shirt, pants, socks, shoes, tie, hat\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "clothe", "slot": "specialization", "value": "boater", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are boater. \n        Output: ", "result": "\n```\nboater, hat, shoes, shirt, pants, socks, tie, coat, dress, skirt\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "clothe", "slot": "specialization", "value": "pinner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are pinner. \n        Output: ", "result": "\n```\ndress, skirt, blouse, shirt, pants, jacket, coat, scarf, socks, shoes\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "clothe", "slot": "specialization", "value": "fool's cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are fool's cap. \n        Output: ", "result": "\n        fool's cap, fool's gold, fool's errand, fool's paradise, fool's gold, fool's luck, fool's paradise, fool's gold, fool's luck, fool's paradise, fool's gold, fool's"}
{"cat": "clothe", "slot": "specialization", "value": "strapless", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are strapless. \n        Output: ", "result": "\n        dress, gown, top, blouse, shirt, suit, skirt, pants, coat, jacket.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n"}
{"cat": "clothe", "slot": "specialization", "value": "dunce's cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are dunce's cap. \n        Output: ", "result": "\n```\nhat, dunce, cap, foolish, idiot, imbecile, moron, stupid, fool, knucklehead\n```"}
{"cat": "clothe", "slot": "specialization", "value": "suede glove", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are suede glove. \n        Output: ", "result": "\n        suede,glove,suede,glove,suede,glove,suede,glove,suede,glove,suede,glove. \n        \"\"\"\n        category = 'clothe'\n        condition = 'are suede"}
{"cat": "clothe", "slot": "specialization", "value": "caftan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are caftan. \n        Output: ", "result": "\n```\ncaftan, gown, robe, kaftan, dress, tunic, caft, abaya, kimono, sarong\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "clothe", "slot": "specialization", "value": "Panama", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are Panama. \n        Output: ", "result": "\n```\nhat, shirt, pants, jacket, dress, shoes, socks, belt, tie\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated"}
{"cat": "clothe", "slot": "specialization", "value": "toboggan cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are toboggan cap. \n        Output: ", "result": "\n```\ntoboggan,cap,hat,ski,jacket,pants,gloves,scarf,boots,muffler\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Des"}
{"cat": "clothe", "slot": "specialization", "value": "liberty cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are liberty cap. \n        Output: ", "result": "\n```\nliberty cap, liberty cap, liberty cap, liberty cap, liberty cap, liberty cap, liberty cap, liberty cap, liberty cap\n```"}
{"cat": "clothe", "slot": "specialization", "value": "sou'wester", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are sou'wester. \n        Output: ", "result": "\n            raincoat, oilskin, sou'wester, slicker, mac, mackintosh, gumboots, Wellingtons, galoshes, rubber boots.\n        \"\"\"\n        category = 'clothe'\n        condition = 'are sou\\'w"}
{"cat": "clothe", "slot": "specialization", "value": "maxi", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are maxi. \n        Output: ", "result": "\n        dress, maxi, maxi, maxi, maxi, maxi, maxi, maxi, maxi, maxi. \n    \"\"\"\n    maxi_clothe_words = []\n    for word in clothe_words:\n        if len(word) =="}
{"cat": "clothe", "slot": "specialization", "value": "high hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are high hat. \n        Output: ", "result": "\n```\nhat, scoop, brim, crown, dome, visor, peak, band, crease, sweatband\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated"}
{"cat": "clothe", "slot": "specialization", "value": "argyll", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are argyll. \n        Output: ", "result": "\n        argyll,sweater,jacket,shirt,trousers,tie,socks,shoes,vest,pants\n\"\"\"\n\nword_list = [\"argyll\", \"sweater\", \"jacket\", \"shirt\", \"trousers\","}
{"cat": "clothe", "slot": "specialization", "value": "yachting cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are yachting cap. \n        Output: ", "result": "\n```\nyachting,cap,sailor,hat,water,protection,fashion,accessory,adventure,sea\n```\n\nExample 2:\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "clothe", "slot": "specialization", "value": "cocked hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are cocked hat. \n        Output: ", "result": "\n        cocked hat, cocked hats, cock hat, cock hats, cock hat, cock hats, cock hat, cock hats, cocked hat, cocked hats, cock hat, cock hats, cocked hat"}
{"cat": "clothe", "slot": "specialization", "value": "saree", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are saree. \n        Output: ", "result": " saree, sari, salwar, kameez, lehnga, choli, ghagra, churidar, salwar kameez, anarkali.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n"}
{"cat": "clothe", "slot": "specialization", "value": "wishing cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are wishing cap. \n        Output: ", "result": "\n```\nwishing, cap, cloak, gown, hood, mantle, robe, scarf, shawl, cape\n```\nExplanation: The words that belong to the category \"clothe\" and satisfy the condition \"are wishing cap\" are: cloak"}
{"cat": "clothe", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be white. \n        Output: ", "result": "\n        white, shirt, dress, socks, pants, coat, scarf, gloves, hat.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"white\" in word:\n            words.append(word)\n    return words\n"}
{"cat": "clothe", "slot": "generalization", "value": "chapeau", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are chapeau. \n        Output: ", "result": "\n```\nchapeau, hat, bonnet, beret, cap, toque, scarf, gloves, socks, shoes\n```\nExplanation: The word \"chapeau\" belongs to the category \"clothes\" and satisfies the condition \"are chapeau\"."}
{"cat": "clothe", "slot": "generalization", "value": "glove", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are glove. \n        Output: ", "result": "\n```\nglove, sock, mitten, scarf, hat, sweater, jacket, shoe, pant, underwear\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "clothe", "slot": "generalization", "value": "lid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are lid. \n        Output: ", "result": "\n```\nhat, scarf, gloves, socks, shirt, pants, jacket, coat, sweater, sweatshirt\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "clothe", "slot": "generalization", "value": "hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are hat. \n        Output: ", "result": "\n```\nhat, cap, visor, beret, toque, beanie, scarf, gloves, mittens, earmuffs\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "clothe", "slot": "material", "value": "denim", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can be made of denim. \n        Output: ", "result": "\n        jeans, denim, overalls, dungarees, shorts, denim jacket, denim skirt, denim dress, denim shirt, denim pants.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition"}
{"cat": "clothe", "slot": "specialization", "value": "denim", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are denim. \n        Output: ", "result": "\n```\njeans, denim, overalls, dungarees, denim jacket, denim skirt, denim shorts, denim shirt, denim vest\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "clothe", "slot": "part", "value": "lace", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  lace. \n        Output: ", "result": " dress, blouse, shirt, top, skirt, pants, coat, jacket, sweater, scarf.\n    \"\"\"\n    words = []\n    for word in words:\n        if \"lace\" in word:\n            words.append(word)\n    return words\n"}
{"cat": "clothe", "slot": "part", "value": "leg", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  leg. \n        Output: ", "result": " pants, jeans, shorts, skirt, dress, coat, jacket, shirt, blouse, socks.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"leg\" in word:\n            words.append(word)\n   "}
{"cat": "clothe", "slot": "generalization", "value": "coat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are coat. \n        Output: ", "result": "\n```\ncoat, jacket, sweater, scarf, gloves, hat, vest, overcoat, park\n```"}
{"cat": "clothe", "slot": "specialization", "value": "glove", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are glove. \n        Output: ", "result": "\n```\nglove, sock, mitten, scarf, hat, sweater, jacket, shoe, pant, underwear\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "clothe", "slot": "specialization", "value": "chapeau", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are chapeau. \n        Output: ", "result": "\n```\nchapeau, hat, bonnet, beret, cap, toque, scarf, gloves, socks, shoes\n```\nExplanation: The word \"chapeau\" belongs to the category \"clothes\" and satisfies the condition \"are chapeau\"."}
{"cat": "clothe", "slot": "specialization", "value": "hat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are hat. \n        Output: ", "result": "\n```\nhat, cap, visor, beret, toque, beanie, scarf, gloves, mittens, earmuffs\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "clothe", "slot": "specialization", "value": "lid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are lid. \n        Output: ", "result": "\n```\nhat, scarf, gloves, socks, shirt, pants, jacket, coat, sweater, sweatshirt\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "clothe", "slot": "part", "value": "throat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: can have  throat. \n        Output: ", "result": " shirt, coat, sweater, blouse, sweatshirt, sweater, sweatshirt, sweater, sweatshirt, sweater.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n"}
{"cat": "clothe", "slot": "specialization", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: clothe. \n        Condition: are white. \n        Output: ", "result": "\n        white, shirt, dress, socks, pants, coat, scarf, gloves, hat.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print(\","}
{"cat": "home item", "slot": "user", "value": "gate-keeper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used by gate-keepers. \n        Output: ", "result": "\n        bed, chair, door, gate, key, lock, mattress, pillow, sofa, table \n    \"\"\"\n    category = \"home item\"\n    condition = \"are used by gate-keepers\"\n    words = get_words(category, condition)\n   "}
{"cat": "home item", "slot": "movement", "value": "slide", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can slide. \n        Output: ", "result": "\n        bed, chair, couch, desk, dresser, lamp, rug, table, TV. \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print(\", \"."}
{"cat": "home item", "slot": "movement", "value": "swing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can swing. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "time", "value": "morning", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be consumed or used during morning. \n        Output: ", "result": "\n            coffee, tea, toothbrush, toothpaste, shampoo, conditioner, shower gel, soap, towel, toothbrush holder\n        \"\"\"\n        category = \"home item\"\n        condition = \"can be consumed or used during morning\"\n       "}
{"cat": "home item", "slot": "sound", "value": "creak", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can creak. \n        Output: ", "result": "\n            lamp, chair, table, bed, desk, bookshelf, sofa, rug, lamp-shade, picture-frame\n\"\"\"\n\nword_list = [\"lamp\", \"chair\", \"table\", \"bed\", \"desk\", \"bookshelf\", \"so"}
{"cat": "home item", "slot": "sound", "value": "clink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can clink. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "accessory", "value": "tap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: may have to do with tap. \n        Output: ", "result": "\n            \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        condition = Condition.objects.get(name='may have to do with tap')\n        words = Word.objects.filter(category=category, condition=condition)\n        return ', '.join"}
{"cat": "home item", "slot": "accessory", "value": "key", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: may have to do with key. \n        Output: ", "result": "\n        bed, chair, couch, desk, door, key, lamp, rug, table, window\n    \"\"\"\n    key_words = [\"bed\", \"chair\", \"couch\", \"desk\", \"door\", \"key\", \"lamp\", \"rug\", \"table\", \""}
{"cat": "home item", "slot": "accessory", "value": "clicker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: may have to do with clicker. \n        Output: ", "result": "\n        - lamp\n        - clock\n        - picture\n        - rug\n        - bookshelf\n        - desk\n        - chair\n        - table\n        - lamp\n        - clock\n    \"\"\"\n    category = \"home item\"\n    condition = \"may have to do with"}
{"cat": "home item", "slot": "efficiency", "value": "breakable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be breakable. \n        Output: ", "result": "\n            coffee mug, glass, vase, plate, bowl, lamp, picture frame, mirror, clock, ashtray \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        condition = Condition.objects.get(name='can be breakable"}
{"cat": "home item", "slot": "efficiency", "value": "leaking", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be leaking. \n        Output: ", "result": "\n          - lamp\n          - vase\n          - plant\n          - watering can\n          - faucet\n          - shower\n          - sink\n          - toilet\n          - bathtub\n          - dishwasher\n```\n\n```\nDesired output:"}
{"cat": "home item", "slot": "efficiency", "value": "impermeable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be impermeable. \n        Output: ", "result": "\n        impermeable, plastic, rubber, glass, metal, ceramic, wax, paper, fabric, wood\n    \"\"\"\n    category = \"home item\"\n    condition = \"can be impermeable\"\n    words = get_words(category, condition)\n   "}
{"cat": "home item", "slot": "content", "value": "liquid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain liquids. \n        Output: ", "result": "\n            coffee, tea, milk, juice, water, soda, ice tea, iced coffee, lemonade, \n            soup, broth, sauce, gravy. \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        liquids"}
{"cat": "home item", "slot": "content", "value": "water", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain water. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "content", "value": "soup", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain soups. \n        Output: ", "result": "\n            kettle, teapot, spoon, bowl, ladle, soup, noodle, broth, stew, chili \n    \"\"\"\n    soup_words = [\"kettle\", \"teapot\", \"spoon\", \"bowl\", \"ladle"}
{"cat": "home item", "slot": "content", "value": "yoghurt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain yoghurts. \n        Output: ", "result": "\n        yoghurt,milk,yogurt,yogurt,yogurt,yogurt,yogurt,yogurt,yogurt,yogurt. \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        words"}
{"cat": "home item", "slot": "content", "value": "food", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain foods. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "content", "value": "dessert", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain desserts. \n        Output: ", "result": "\n          - refrigerator\n          - oven\n          - stove\n          - microwave\n          - dishwasher\n          - blender\n          - food processor\n          - toaster\n          - coffee maker\n          - pots and pans\n        \"\"\"\n"}
{"cat": "home item", "slot": "content", "value": "hot chocolate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain hot chocolates. \n        Output: ", "result": "\n            coffee mug, hot chocolate, hot chocolate sauce, hot chocolate mix, hot chocolate powder, hot chocolate drink, hot chocolate bar, hot chocolate fountain, hot chocolate truffle, hot chocolate cake"}
{"cat": "home item", "slot": "content", "value": "tea", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain teas. \n        Output: ", "result": "\n            tea, kettle, teapot, tea bag, tea infuser, tea cup, tea saucer, tea tray, tea set, tea strainer\n\"\"\"\n\n# Define the category and condition\ncategory = \"home item\"\ncondition = \"contain teas\"\n"}
{"cat": "home item", "slot": "content", "value": "beer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain beers. \n        Output: ", "result": "\n            coffee mug, beer glass, beer opener, beer cozy, beer bottle opener, beer can opener, beer tap, beer tap handle, beer tap handle, beer tap handle, beer tap handle.\n    \"\"\"\n    category ="}
{"cat": "home item", "slot": "content", "value": "claret", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain clarets. \n        Output: ", "result": "\n            1. Claret\n            2. Claret\n            3. Claret\n            4. Claret\n            5. Claret\n            6. Claret\n            7. Claret\n            8. Claret\n            9. Claret\n            10. Claret\n        \"\"\""}
{"cat": "home item", "slot": "content", "value": "flower", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain flowers. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "content", "value": "greasy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain greasies. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "content", "value": "absinthe", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain absinthes. \n        Output: ", "result": "\n        - absinthe\n        - absinthe\n        - absinthe\n        - absinthe\n        - absinthe\n        - absinthe\n        - absinthe\n        - absinthe\n        - absinthe\n        - absinthe\n    \"\"\"\n"}
{"cat": "home item", "slot": "content", "value": "milk", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain milks. \n        Output: ", "result": "\n          - milk\n          - milkshake\n          - milk bottle\n          - milk powder\n          - milk carton\n          - milk container\n          - milk pitcher\n          - milk glass\n          - milk bottle opener\n          - milk frother\n```\n\n```\n"}
{"cat": "home item", "slot": "content", "value": "coffee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain coffees. \n        Output: ", "result": "\n            coffee, mug, coffeemaker, espresso, cappuccino, latte, mocha, coffee beans, coffee grinder, coffee maker. \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        queryset ="}
{"cat": "home item", "slot": "content", "value": "claret", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain clarets. \n        Output: ", "result": "\n            1. Claret\n            2. Claret\n            3. Claret\n            4. Claret\n            5. Claret\n            6. Claret\n            7. Claret\n            8. Claret\n            9. Claret\n            10. Claret\n        \"\"\""}
{"cat": "home item", "slot": "content", "value": "cookie", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: contain cookies. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "shape", "value": "concave", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be concave. \n        Output: ", "result": "\n          - lamp\n          - vase\n          - bowl\n          - mirror\n          - clock\n          - picture\n          - rug\n          - bookshelf\n          - desk\n          - chair\n```\n\n```\nSolution:\nprovide a list of 10 words"}
{"cat": "home item", "slot": "shape", "value": "round", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be round. \n        Output: ", "result": "\n        round,table,desk,chair,bed,couch,bookshelf,lamp,dresser,nightstand\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"round\" in word:\n            words.append(word)"}
{"cat": "home item", "slot": "shape", "value": "circular", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be circular. \n        Output: ", "result": "\n            bed, chair, couch, desk, lamp, rug, shelves, table, TV\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"can be circular\" in word:\n            words.append(word)\n    return words\n"}
{"cat": "home item", "slot": "shape", "value": "elongated", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be elongated. \n        Output: ", "result": "\n          bed, chair, couch, desk, dresser, lamp, rug, shelf, table\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print(\", \".join"}
{"cat": "home item", "slot": "shape", "value": "long", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be long. \n        Output: ", "result": "\n            bed, chair, couch, desk, dresser, lamp, nightstand, rug, table\n        \"\"\"\n        category = Category.objects.get(name='home item')\n        words = Word.objects.filter(category=category, length__gte=5)\n       "}
{"cat": "home item", "slot": "shape", "value": "rectangular", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be rectangular. \n        Output: ", "result": "\n            bed, chair, couch, desk, dresser, nightstand, table, TV stand, bookshelf, bookcase. \n        \"\"\"\n        category = \"home item\"\n        condition = \"can be rectangular\"\n        words = get_words(category, condition)"}
{"cat": "home item", "slot": "shape", "value": "cylindrical", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be cylindrical. \n        Output: ", "result": "\n            lamp, vase, candlestick, can, bottle, jar, teapot, mug, bowl, glass\n\"\"\"\n\n# Define the function\ndef get_words(category, condition):\n    # Split the category and condition into words\n    category_words"}
{"cat": "home item", "slot": "shape", "value": "curved", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be curved. \n        Output: ", "result": "\n            bed, chair, couch, desk, lamp, rug, shelf, table, sofa, \n            bookshelf, bookcase, bookshelves, bookshelfs, bookshelves. \n        Explanation: \n            bed, chair, c"}
{"cat": "home item", "slot": "part", "value": "strainer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  strainer. \n        Output: ", "result": " colander, spoon, fork, knife, plate, bowl, cup, glass, mug, cutlery. \n        \"\"\"\n        category = 'home item'\n        condition = 'can have strainer'\n        words = get_words(category, condition)\n        return"}
{"cat": "home item", "slot": "part", "value": "arm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  arm. \n        Output: ", "result": "\n        armchair, armrest, armrests, armchairs, armchair, armchairs, armrest, armrests, armchair, armchairs\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"arm\" in word"}
{"cat": "home item", "slot": "part", "value": "leg", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  leg. \n        Output: ", "result": "\n```\nbed, chair, desk, lamp, rug, shoe, sofa, table, toy, \n```\n\n### Exercise 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "home item", "slot": "part", "value": "seatback", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  seatback. \n        Output: ", "result": "\n        armchair, couch, sofa, love seat, recliner, rocking chair, chair, ottoman, footstool, pouf \n    \"\"\"\n    category = \"home item\"\n    condition = \"can have seatback\"\n    words = get_words("}
{"cat": "home item", "slot": "part", "value": "footstool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  footstool. \n        Output: ", "result": "\n        sofa, armchair, coffee table, lamp, rug, bookshelf, desk, chair, end table, footstool\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"footstool\" in word:\n            words.append"}
{"cat": "home item", "slot": "part", "value": "handle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  handle. \n        Output: ", "result": "\n            \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"handle\" in word and \"home item\" in word and \"can\" in word:\n            words.append(word)\n    return \", \".join(words)\n\ndef get_category"}
{"cat": "home item", "slot": "part", "value": "lock", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  lock. \n        Output: ", "result": " key, door, lock, locksmith, lockout, lockin, locking, locked, unlock. \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        words = Word.objects.filter(category=category, has_lock=True)\n"}
{"cat": "home item", "slot": "part", "value": "jamb", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  jamb. \n        Output: ", "result": "\n```\nbed, chair, table, lamp, door, window, rug, curtain, pillow\n```\nExplanation: The word \"jamb\" belongs to the category \"home item\" and satisfies the condition \"can have jamb\" as it is a part of a door or window frame"}
{"cat": "home item", "slot": "part", "value": "hinge", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  hinge. \n        Output: ", "result": "\n```\nbed, chair, door, hinge, lamp, mirror, picture, table, toilet, window\n```\n\n### Example 2:\n```\nGiven a category and a condition, find all words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "home item", "slot": "part", "value": "latch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  latch. \n        Output: ", "result": "\n        - lamp\n        - trash can\n        - door\n        - curtain\n        - cabinet\n        - shelf\n        - closet\n        - pantry\n        - toilet\n        - shower\n        - sink\n        \"\"\"\n        category = \"home item\""}
{"cat": "home item", "slot": "part", "value": "toilet bowl", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  toilet bowl. \n        Output: ", "result": " toilet paper, toilet brush, toilet seat, toilet paper holder, toilet cleaner, toilet deodorizer, toilet brush holder, toilet bowl cleaner, toilet bowl deodorizer, toilet bowl brush"}
{"cat": "home item", "slot": "part", "value": "stool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  stool. \n        Output: ", "result": "\n        - chair\n        - table\n        - bed\n        - sofa\n        - desk\n        - bookshelf\n        - lamp\n        - rug\n        - curtain\n        - mirror\n        \"\"\"\n        category = Category.objects.get(name='home item')\n"}
{"cat": "home item", "slot": "part", "value": "pier", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  pier. \n        Output: ", "result": "\n```\nbed, chair, desk, dresser, lamp, mirror, pillow, rug, shoe, sofa\n```\n\n### Example 2:\n```python\npython, c++, java, javascript, python\n```\nProvide a list of 10 words that"}
{"cat": "home item", "slot": "part", "value": "floor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  floor. \n        Output: ", "result": "\n            bed, chair, coffee\\_table, couch, desk, lamp, rug, shelves, sofa, \n            bookshelf, end\\_table, dining\\_table, kitchen\\_utensils, kitchen\\_appliances, \n            kitchen\\_gadgets,"}
{"cat": "home item", "slot": "part", "value": "toilet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  toilet. \n        Output: ", "result": "\n```\ntoilet paper, toilet, bathroom, sink, shower, bathtub, toilet paper holder, toilet brush, toilet seat, toilet paper roll\n```\n```\nProvide a list of 10 words that belong to"}
{"cat": "home item", "slot": "part", "value": "rim", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  rim. \n        Output: ", "result": "\n```\nlamp,shoe,chair,table,desk,bookshelf,bed,sofa,curtain,rug\n```\nExplanation: The word `lamp` can have a rim, so it satisfies the condition. The other words in the list also satisfy the condition"}
{"cat": "home item", "slot": "part", "value": "base", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  base. \n        Output: ", "result": "\n```\nbed, chair, table, sofa, rug, curtain, lamp, desk, bookshelf, base\n```\nExplanation: The word \"base\" satisfies the condition \"can have base\" in the category \"home item\"\n```"}
{"cat": "home item", "slot": "part", "value": "drain", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  drain. \n        Output: ", "result": "\n            dish, spoon, fork, knife, plate, bowl, glass, mug, cup, cutting board\n\"\"\"\n\n# Define the function\ndef get_words(category, condition):\n    # Create an empty list to store the words\n    words = []\n    "}
{"cat": "home item", "slot": "part", "value": "trestle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  trestle. \n        Output: ", "result": "\n```\nbed, chair, desk, dresser, lamp, nightstand, table, trestle, wardrobe\n```"}
{"cat": "home item", "slot": "part", "value": "back", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  back. \n        Output: ", "result": "\n```\nbed, chair, couch, desk, lamp, rug, shelf, table, window\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words"}
{"cat": "home item", "slot": "part", "value": "basin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  basin. \n        Output: ", "result": "\n            bath, basin, sink, shower, taps, toilet, bathroom, sink, shower, taps, toilet, bathroom, sink, shower, taps, toilet, bathroom, sink, shower, taps, toilet,"}
{"cat": "home item", "slot": "part", "value": "edge", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  edge. \n        Output: ", "result": "\n        bed, chair, couch, desk, lamp, rug, shelf, table, sofa, bookshelf\n    \"\"\"\n    edge_words = [\"edge\", \"edges\"]\n    home_items = [\"bed\", \"chair\", \"couch\", \"desk\","}
{"cat": "home item", "slot": "part", "value": "backrest", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  backrest. \n        Output: ", "result": "\n            armchair, couch, sofa, recliner, rockingchair, lounge, chaise, clubchair, wingchair, ottoman\n        \"\"\"\n        category = \"home item\"\n        condition = \"can have backrest\"\n        words = []"}
{"cat": "home item", "slot": "part", "value": "wall", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  wall. \n        Output: ", "result": "\n```\nbed, chair, desk, lamp, rug, shelf, table, wall, window\n```\nExplanation: The word \"wall\" satisfies the condition \"can have wall\" in the category \"home item\". The words that satisfy this condition are \"bed, chair, desk,"}
{"cat": "home item", "slot": "part", "value": "round", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  round. \n        Output: ", "result": "\n            bed, chair, desk, lamp, rug, sofa, table, TV, bookshelf, clock\n        \"\"\"\n        category = Category.objects.get(name='home item')\n        words = Word.objects.filter(category=category, has_round=True)\n"}
{"cat": "home item", "slot": "part", "value": "can", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  can. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in word_list:\n            if \"can\" in word and \"home\" in word and \"item\" in word:\n                words.append(word)\n        return \", \".join(words)\n\nword_list = [\n   "}
{"cat": "home item", "slot": "part", "value": "commode", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  commode. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "part", "value": "plughole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  plughole. \n        Output: ", "result": " basin, dishwasher, plughole, sink, toilet, bath, shower, tap, plug, bin. \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        condition = Condition.objects.get(name='can have plug"}
{"cat": "home item", "slot": "part", "value": "drain basket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  drain basket. \n        Output: ", "result": "\n        - dish\n        - spoon\n        - fork\n        - knife\n        - plate\n        - bowl\n        - cup\n        - pot\n        - pan\n        - colander\n        - strainer\n        \"\"\"\n        category = \"home item\"\n        condition"}
{"cat": "home item", "slot": "part", "value": "flooring", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  flooring. \n        Output: ", "result": "\n        bedroom, bathroom, kitchen, living room, dining room, hallway, foyer, laundry room, closet, garage. \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        condition = Condition.objects.get("}
{"cat": "home item", "slot": "part", "value": "bottom", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  bottom. \n        Output: ", "result": "\n        bed, chair, couch, desk, dresser, lamp, nightstand, rug, table, \n        bookshelf, coffee table, end table, sofa, love seat, armchair, \n        vanity, closet, chest of drawers, dressing"}
{"cat": "home item", "slot": "part", "value": "rocker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  rocker. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "part", "value": "pot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  pot. \n        Output: ", "result": "\n            bed, chair, desk, lamp, rug, shelf, table, sofa, bookshelf, pot\n\"\"\"\n\nword_list = [\"bed\", \"chair\", \"desk\", \"lamp\", \"rug\", \"shelf\", \"table\", \"sofa\","}
{"cat": "home item", "slot": "part", "value": "stave", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  stave. \n        Output: ", "result": "\n        bed, chair, desk, lamp, rug, sofa, table, toilet, washbasin, shower\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"stave\" in word:\n            words.append(word)"}
{"cat": "home item", "slot": "part", "value": "rung", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  rung. \n        Output: ", "result": "\n        bed, chair, desk, lamp, rug, shelf, sofa, table, toaster, vacuum \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"rung\" in word:\n            words.append(word)\n"}
{"cat": "home item", "slot": "part", "value": "crapper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  crapper. \n        Output: ", "result": "\n```\ncrapper,toilet,bathroom,seat,plunger,toilet_seat,toilet_plunger,toilet_cleaner,toilet_brush,toilet_paper\n```\nExplanation: The word"}
{"cat": "home item", "slot": "part", "value": "showerhead", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  showerhead. \n        Output: ", "result": " curtain, soap, shampoo, conditioner, razor, brush, toothbrush, toothpaste, washcloth, showerhead\n    \"\"\"\n    category = Category.objects.get(name='home item')\n    items = Item.objects.filter("}
{"cat": "home item", "slot": "part", "value": "toilet seat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  toilet seat. \n        Output: ", "result": "\n```\ntoilet paper, toilet brush, toilet seat, toilet cleaner, toilet paper holder, toilet seat cover, toilet plunger, toilet bowl cleaner, toilet deodorizer\n```\nExplanation: The"}
{"cat": "home item", "slot": "part", "value": "arch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  arch. \n        Output: ", "result": "\n```\nbed, chair, desk, lamp, rug, shelf, table, window, arch, sofa\n```\nExplanation: The words that belong to the category \"home item\" and can have arch are bed, chair, desk, lamp, rug, shelf, table,"}
{"cat": "home item", "slot": "part", "value": "throne", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  throne. \n        Output: ", "result": "\n            bed, chair, couch, desk, dresser, lamp, rug, table, throne\n        \"\"\"\n        category = Category.objects.get(name='home item')\n        words = Word.objects.filter(category=category, text__contains='throne')\n       "}
{"cat": "home item", "slot": "part", "value": "ceiling", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  ceiling. \n        Output: ", "result": "\n```\nlamp,shelf,table,chair,desk,bookshelf,curtain,rug,pillow,blanket\n```"}
{"cat": "home item", "slot": "part", "value": "potty", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  potty. \n        Output: ", "result": "\n        bed, pillow, blanket, toy, book, crayon, spoon, cup, toilet, potty \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"potty\" in word:\n            words.append("}
{"cat": "home item", "slot": "place", "value": "kitchen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in kitchens. \n        Output: ", "result": "\n            knife, spoon, fork, plate, bowl, pot, pan, cutting board, spatula, ladle\n        \"\"\"\n        category = Category.objects.get(name='home item')\n        items = Item.objects.filter(category=category)\n        words ="}
{"cat": "home item", "slot": "place", "value": "castle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in castles. \n        Output: ", "result": "\n            1. Sword\n            2. Armor\n            3. Shield\n            4. Helmet\n            5. Axe\n            6. Mace\n            7. Spear\n            8. Bow\n            9. Arrows\n            10. Dagger\n        \"\"\"\n"}
{"cat": "home item", "slot": "place", "value": "porch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in porches. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "place", "value": "courtyard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in courtyards. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "place", "value": "veranda", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in verandas. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "place", "value": "palace", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in palaces. \n        Output: ", "result": "\n            1. throne\n            2. crown\n            3. scepter\n            4. throne room\n            5. throne chair\n            6. throne cushion\n            7. throne back\n            8. throne armrest\n            9. throne footstool\n            10. throne"}
{"cat": "home item", "slot": "place", "value": "living room", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in living rooms. \n        Output: ", "result": "\n            1. Couch\n            2. Sofa\n            3. Chair\n            4. Table\n            5. Coffee table\n            6. End table\n            7. Bookshelf\n            8. TV stand\n            9. Rug\n            10. Lamp\n       "}
{"cat": "home item", "slot": "place", "value": "building", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in buildings. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "place", "value": "restaurant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in restaurants. \n        Output: ", "result": "\n            1. Salt\n            2. Pepper\n            3. Olive oil\n            4. Vinegar\n            5. Soy sauce\n            6. Sugar\n            7. Honey\n            8. Mustard\n            9. Ketchup\n            10. May"}
{"cat": "home item", "slot": "place", "value": "cafeteria", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in cafeterias. \n        Output: ", "result": "\n        forks, knives, spoons, plates, bowls, cups, glasses, silverware, dishes, trays\n\"\"\"\n\n# Define the category and condition\ncategory = \"home item\"\ncondition = \"can be found or used in cafeterias"}
{"cat": "home item", "slot": "place", "value": "bathroom", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in bathrooms. \n        Output: ", "result": "\n            1. Toilet \n            2. Shower \n            3. Bathtub \n            4. Sink \n            5. Toilet paper \n            6. Soap \n            7. Shampoo \n            8. Conditioner \n"}
{"cat": "home item", "slot": "place", "value": "garden", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in gardens. \n        Output: ", "result": "\n            1. Flower\n            2. Herb\n            3. Vegetable\n            4. Tree\n            5. Shrub\n            6. Grass\n            7. Fruit\n            8. Berry\n            9. Seed\n            10. Soil\n```"}
{"cat": "home item", "slot": "place", "value": "field", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in fields. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "place", "value": "memorial", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in memorials. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "place", "value": "department", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in departments. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "place", "value": "venue", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in venues. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "place", "value": "monument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in monuments. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "place", "value": "car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in cars. \n        Output: ", "result": "\n        clock, mirror, steering wheel, gas pedal, brake pedal, accelerator pedal, gear shift, wipers, headlights, taillights\n    \"\"\"\n    category = \"home item\"\n    condition = \"can be found or used in cars\"\n"}
{"cat": "home item", "slot": "place", "value": "driveway", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in driveways. \n        Output: ", "result": "\n            1. Driveway\n            2. Parking lot\n            3. Garage\n            4. Sidewalk\n            5. Street\n            6. Alley\n            7. Road\n            8. Front yard\n            9. Backyard\n            10. Driveway entrance\n```\n"}
{"cat": "home item", "slot": "part", "value": "support", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  support. \n        Output: ", "result": "\n```\nbed, chair, desk, lamp, rug, shelf, table, window, sofa, bookshelf\n```\nExplanation: The words that belong to the category \"home item\" and can have support are bed, chair, desk, lamp, rug, shelf,"}
{"cat": "home item", "slot": "material", "value": "wood", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of wood. \n        Output: ", "result": "\n            bed, chair, desk, dresser, lamp, mirror, nightstand, table, bookshelf, chest\n\"\"\"\n\nword_list = [\"bed\", \"chair\", \"desk\", \"dresser\", \"lamp\", \"mirror\", \"nightstand\","}
{"cat": "home item", "slot": "material", "value": "metal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of metal. \n        Output: ", "result": "\n            bed, chair, table, lamp, key, door, window, knife, fork, spoon. \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        condition = Condition.objects.get(name='can be made of metal')\n       "}
{"cat": "home item", "slot": "material", "value": "steel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of steel. \n        Output: ", "result": "\n        bed, chair, table, lamp, shelf, desk, bookshelf, coat rack, umbrella stand, ironing board.\n    \"\"\"\n    category = \"home item\"\n    condition = \"can be made of steel\"\n    words = []\n    for word"}
{"cat": "home item", "slot": "material", "value": "plastic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of plastic. \n        Output: ", "result": "\n        - lamp\n        - chair\n        - table\n        - desk\n        - bookshelf\n        - wastebasket\n        - toilet\n        - shower\n        - sink\n        - mirror\n        \"\"\"\n        category = \"home item\"\n        condition = \""}
{"cat": "home item", "slot": "material", "value": "porcelain", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of porcelain. \n        Output: ", "result": "\n            lamp, vase, teapot, plate, bowl, mug, cookie jar, figurine, ashtray, soap dish. \n        \"\"\"\n        category = \"home item\"\n        condition = \"can be made of porcelain\"\n        words = []\n"}
{"cat": "home item", "slot": "material", "value": "china", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of china. \n        Output: ", "result": "\n        dish, plate, bowl, mug, cup, saucer, spoon, fork, knife, chopsticks \n    \"\"\"\n    category = \"home item\"\n    condition = \"can be made of china\"\n    words = []\n    for word in"}
{"cat": "home item", "slot": "material", "value": "glass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of glass. \n        Output: ", "result": "\n            lamp, vase, bowl, glass, window, mirror, shade, decanter, pitcher, goblet. \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        condition = Condition.objects.get(name='can be made"}
{"cat": "home item", "slot": "material", "value": "pottery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of pottery. \n        Output: ", "result": "\n            coffee mug, teapot, plate, bowl, vase, pitcher, cookie jar, candlestick, salt and pepper shaker, ashtray. \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        pottery_"}
{"cat": "home item", "slot": "material", "value": "wrought iron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of wrought iron. \n        Output: ", "result": "\n            1. candlestick\n            2. fireplace\n            3. gate\n            4. grill\n            5. hook\n            6. lantern\n            7. mirror\n            8. planter\n            9. rack\n            10. sculpture\n        \"\"\"\n"}
{"cat": "home item", "slot": "material", "value": "marble", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of marble. \n        Output: ", "result": "\n          lamp, vase, ashtray, clock, mirror, bowl, statue, picture frame, candle holder\n    \"\"\"\n    marble_items = []\n    for item in all_items:\n        if \"marble\" in item and \"home item\" in item:\n"}
{"cat": "home item", "slot": "material", "value": "copper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of copper. \n        Output: ", "result": "\n            bed, coffeemaker, clock, lamp, mirror, pictureframe, vase, bowl, candlestick\n    \"\"\"\n    category = \"home item\"\n    condition = \"can be made of copper\"\n    words = get_words(category, condition)\n"}
{"cat": "home item", "slot": "material", "value": "iron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of iron. \n        Output: ", "result": "\n            bed, chair, table, lamp, door, window, cabinet, shelf, ironing board, iron. \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        condition = Condition.objects.get(name='can be made of iron')\n"}
{"cat": "home item", "slot": "material", "value": "wooden", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of wooden. \n        Output: ", "result": "\n            bed, chair, desk, dresser, lamp, mirror, nightstand, table, wardrobe, bookshelf \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        condition = Condition.objects.get(name='can be made"}
{"cat": "home item", "slot": "material", "value": "ceramic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of ceramic. \n        Output: ", "result": "\n            lamp, vase, bowl, plate, mug, teapot, cookie jar, salt and pepper shaker, ashtray, ceramic cookie jar\n\"\"\"\n\nword_list = [\"lamp\", \"vase\", \"bowl\", \"plate\", \"m"}
{"cat": "home item", "slot": "material", "value": "enamel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of enamel. \n        Output: ", "result": "\n            coffee mug, teapot, teacup, saucer, plate, bowl, spoon, fork, knife, salt and pepper shaker.\n    \"\"\"\n    category = \"home item\"\n    condition = \"can be made of enamel\"\n    words"}
{"cat": "home item", "slot": "material", "value": "ceramic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of ceramic. \n        Output: ", "result": "\n            lamp, vase, bowl, plate, mug, teapot, cookie jar, salt and pepper shaker, ashtray, ceramic cookie jar\n\"\"\"\n\nword_list = [\"lamp\", \"vase\", \"bowl\", \"plate\", \"m"}
{"cat": "home item", "slot": "material", "value": "glassware", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of glassware. \n        Output: ", "result": "\n            lamp, vase, bowl, glass, cup, plate, pitcher, decanter, goblet, compote. \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        condition = Condition.objects.get(name='can be made"}
{"cat": "home item", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be white. \n        Output: ", "result": "\n            bed, chair, couch, desk, dresser, lamp, rug, table, whiteboard\n        \"\"\"\n        category = Category.objects.get(name='home item')\n        condition = Condition.objects.get(name='can be white')\n        words = Word."}
{"cat": "home item", "slot": "colorPattern", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be silver. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be white. \n        Output: ", "result": "\n            bed, chair, couch, desk, dresser, lamp, rug, table, whiteboard\n        \"\"\"\n        category = Category.objects.get(name='home item')\n        condition = Condition.objects.get(name='can be white')\n        words = Word."}
{"cat": "home item", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be brown. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be brown. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be black. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be black. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "purpose", "value": "contain", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to contain. \n        Output: ", "result": "\n```\nbox, basket, container, crate, can, jar, pot, vessel, receptacle, holder\n```\nExplanation: The words \"box\", \"basket\", \"container\", \"crate\", \"can\", \"jar\", \"pot\", \"vessel\", \"recept"}
{"cat": "home item", "slot": "purpose", "value": "hold", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to hold. \n        Output: ", "result": "\n```\nplate, bowl, cup, glass, mug, container, pitcher, vase, dish, tray\n```\nExplanation: The words \"plate\", \"bowl\", \"cup\", \"glass\", \"mug\", \"container\", \"pitcher\", \"v"}
{"cat": "home item", "slot": "colorPattern", "value": "glossy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be glossy. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "purpose", "value": "eat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to eat. \n        Output: ", "result": "\n          forks, knives, spoons, plates, bowls, cups, glasses, silverware, chopsticks, spork\n\"\"\"\n\n# Define the function\ndef get_words(category, condition):\n    # Create an empty list to store the words\n"}
{"cat": "home item", "slot": "purpose", "value": "sleep", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used for sleep. \n        Output: ", "result": "\n            bed, pillow, blanket, sheets, quilt, comforter, mattress, mattress cover, pillowcase, duvet\n        \"\"\"\n        category = \"home item\"\n        condition = \"are used for sleep\"\n        words = []\n        for word"}
{"cat": "home item", "slot": "purpose", "value": "sit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to sit. \n        Output: ", "result": "\n          armchair, couch, sofa, chair, stool, ottoman, bench, love seat,\n```"}
{"cat": "home item", "slot": "colorPattern", "value": "patterned", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be patterned. \n        Output: ", "result": "\n          lamp, rug, curtain, pillow, blanket, wallpaper, picture, lamp shade, rug pad, curtain rod\n    \"\"\"\n    category = \"home item\"\n    condition = \"can be patterned\"\n    words = get_words(category, condition)\n"}
{"cat": "home item", "slot": "purpose", "value": "relaxing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used for relaxing. \n        Output: ", "result": "\n          armchair, cushion, throw, blanket, pillow, quilt, mattress, bed, sofa, chair\n    \"\"\"\n    category = \"home item\"\n    condition = \"are used for relaxing\"\n    words = get_words(category, condition"}
{"cat": "home item", "slot": "colorPattern", "value": "shiny", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be shiny. \n        Output: ", "result": "\n            bed, chair, desk, dresser, lamp, mirror, pillow, rug, toaster, toilet\n        \"\"\"\n        category = Category.objects.get(name='home item')\n        condition = Condition.objects.get(name='can be shiny')\n"}
{"cat": "home item", "slot": "purpose", "value": "cookery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used for cookery. \n        Output: ", "result": "\n            knife, spoon, fork, cutting board, pot, pan, spatula, ladle, slotted spoon, colander \n        \"\"\"\n        category = \"home item\"\n        condition = \"are used for cookery\"\n        words = []\n        for word in"}
{"cat": "home item", "slot": "purpose", "value": "protection", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used for protection. \n        Output: ", "result": "\n            1. Door\n            2. Window\n            3. Lock\n            4. Fence\n            5. Glass\n            6. Screen\n            7. Shield\n            8. Barrier\n            9. Hood\n            10. Dome\n        \"\"\"\n        protection"}
{"cat": "home item", "slot": "purpose", "value": "security", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used for security. \n        Output: ", "result": "\n            1. Door\n            2. Lock\n            3. Key\n            4. Alarm\n            5. Security\n            6. Window\n            7. Blind\n            8. Curtain\n            9. Shutter\n            10. Gate\n        \"\"\"\n        words = []"}
{"cat": "home item", "slot": "purpose", "value": "separate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to separate. \n        Output: ", "result": "\n```\nbed, chair, table, sofa, desk, bookshelf, lamp, rug, curtain, blinds\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated"}
{"cat": "home item", "slot": "purpose", "value": "blend", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to blend. \n        Output: ", "result": "\n        blender, blend, blended, blending, blenderize, blendable, blendability, blenderize, blenderize, blenderize \n    \"\"\"\n    category = \"home item\"\n    condition = \"are used to blend\"\n    words ="}
{"cat": "home item", "slot": "purpose", "value": "pick up", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to pick up. \n        Output: ", "result": "\n            lamp, broom, mop, dustpan, vacuum, duster, feather duster, dish towel, dish sponge, sponge\n        \"\"\"\n        category = \"home item\"\n        condition = \"are used to pick up\"\n        words"}
{"cat": "home item", "slot": "purpose", "value": "delimit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to delimit. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for i in range(10):\n            word = random.choice(['table', 'chair', 'bed', 'desk', 'bookshelf', 'couch', 'fridge', 'oven', 'stove', 'dishwash"}
{"cat": "home item", "slot": "purpose", "value": "stir", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to stir. \n        Output: ", "result": "\n```\npot, pan, spoon, spatula, whisk, wooden spoon, ladle, spoonful, stir, stirred\n```\nExplanation: The words `pot`, `pan`, `spoon`, `spatula`, `whisk`, `wooden sp"}
{"cat": "home item", "slot": "purpose", "value": "exit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used for exit. \n        Output: ", "result": "\n        bed, door, hallway, stairs, front door, back door, garage door, basement door, attic door, fire escape.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "home item", "slot": "purpose", "value": "measure", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to measure. \n        Output: ", "result": "\n\n1. ruler\n2. tape measure\n3. yardstick\n4. meter stick\n5. measuring tape\n6. measuring rod\n7. measuring rule\n8. measuring instrument\n9. measuring tool\n10. measuring device"}
{"cat": "home item", "slot": "purpose", "value": "guard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used for guard. \n        Output: ", "result": "\n            bed, chair, door, gate, guard, hedge, key, lock, \n            pillar, post, railing, wall. \n        \"\"\"\n        category = 'home item'\n        condition = 'are used for guard'\n        words = []\n        for word in"}
{"cat": "home item", "slot": "purpose", "value": "drink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to drink. \n        Output: ", "result": "\n        coffee, tea, milk, juice, water, soda, beer, wine, cocktail, smoothie\n\"\"\"\n\nword_list = [\"coffee\", \"tea\", \"milk\", \"juice\", \"water\", \"soda\", \"beer\","}
{"cat": "home item", "slot": "purpose", "value": "rinse", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to rinse. \n        Output: ", "result": "\n```\ndish, sponge, soap, water, basin, sink, faucet, towel, dishcloth, detergent\n```\nExplanation: The words that belong to the category \"home item\" and satisfy the condition \"are used to rinse\" are"}
{"cat": "home item", "slot": "purpose", "value": "bar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to bar. \n        Output: ", "result": "\n```\nbed, chair, table, sofa, shelf, door, window, curtain, rug, lamp\n```\nExplanation: The word `bed` satisfies the condition of being used to bar, so it should be included in the list. The word `chair` also satisfies the"}
{"cat": "home item", "slot": "purpose", "value": "feed", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to feed. \n        Output: ", "result": "\n        bed, chair, couch, table, bowl, spoon, fork, knife, plate, glass\n```\n\n```\nDescribe a scenario where the input is a list of 10 words, where each word belongs to a different category and satisfies a given condition. \n       "}
{"cat": "home item", "slot": "purpose", "value": "wash", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to wash. \n        Output: ", "result": "\n          dishwasher, sponge, soap, detergent, glass, plate, bowl, utensil, cutting board, counter top.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n"}
{"cat": "home item", "slot": "purpose", "value": "insulate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used to insulate. \n        Output: ", "result": "\n            Blanket, Curtain, Insulation, Jacket, Mattress, Pillow, Rug, Sheet, Sofa, Wall\n        Explanation: \n            Blanket, Curtain, Insulation, Jacket, Mattress, Pillow, R"}
{"cat": "home item", "slot": "colorPattern", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be silver. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "purpose", "value": "access", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used for access. \n        Output: ", "result": "\n```\nbed, door, lock, key, window, cabinet, desk, chair, table\n```\n1. Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: kitchen"}
{"cat": "home item", "slot": "purpose", "value": "entrance", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are used for entrance. \n        Output: ", "result": "\n            door, handle, knob, lock, hinge, latch, bolt, deadbolt, strike, lockset\n    \"\"\"\n    category = \"home item\"\n    condition = \"are used for entrance\"\n    words = []\n    for word in text.split():\n"}
{"cat": "home item", "slot": "place", "value": "room", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in rooms. \n        Output: ", "result": "\n        bed, chair, couch, desk, dresser, lamp, rug, table, TV, refrigerator \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n"}
{"cat": "home item", "slot": "generalization", "value": "artifact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are artifact. \n        Output: ", "result": "\n        bed, chair, desk, lamp, rug, shelf, table, sofa, bookshelf, artwork \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n"}
{"cat": "home item", "slot": "generalization", "value": "artefact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are artefact. \n        Output: ", "result": "\n        bed, chair, desk, lamp, rug, sofa, table, TV, bookshelf, computer.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print"}
{"cat": "home item", "slot": "generalization", "value": "container", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are container. \n        Output: ", "result": "\n        - box\n        - bag\n        - can\n        - bottle\n        - jar\n        - pot\n        - tray\n        - bowl\n        - cup\n        - plate\n        \"\"\"\n        words = []\n        for word in word_list:\n            if word"}
{"cat": "home item", "slot": "generalization", "value": "implement", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are implement. \n        Output: ", "result": "\n```\nbed, chair, table, lamp, rug, curtain, sofa, desk, bookshelf\n```\nExplanation: The words that belong to the category \"home item\" and satisfy the condition \"are implement\" are \"bed, chair, table, lamp, rug, cur"}
{"cat": "home item", "slot": "generalization", "value": "tool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are tool. \n        Output: ", "result": "\n```\nhammer, screwdriver, wrench, pliers, saw, tape measure, level, drill, socket set, ruler\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "home item", "slot": "generalization", "value": "utensil", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are utensil. \n        Output: ", "result": "\n        forks, spoons, knives, ladle, spatula, tongs, spoon, fork, knife, spatula \n    \"\"\"\n    category = \"home item\"\n    condition = \"are utensil\"\n    words = get_words(category,"}
{"cat": "home item", "slot": "generalization", "value": "furniture", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are furniture. \n        Output: ", "result": "\n        sofa, armchair, coffee table, end table, bookshelf, desk, bed, dresser, nightstand, lamp\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category,"}
{"cat": "home item", "slot": "generalization", "value": "tableware", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are tableware. \n        Output: ", "result": "\n        forks, knives, spoons, plates, bowls, cups, glasses, silverware, dishes, serving dishes, table settings. \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        condition = Condition.objects."}
{"cat": "home item", "slot": "generalization", "value": "whole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are whole. \n        Output: ", "result": "\n        bed, chair, couch, desk, dresser, lamp, rug, table, TV. \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print(\", \"."}
{"cat": "home item", "slot": "generalization", "value": "unit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are unit. \n        Output: ", "result": "\n        bed, chair, couch, desk, lamp, rug, shelf, table, sofa, bookshelf\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n   "}
{"cat": "home item", "slot": "generalization", "value": "barrier", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are barrier. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "generalization", "value": "cutlery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are cutlery. \n        Output: ", "result": "\n            forks, knives, spoons, spatulas, whisks, ladles, scoops, tongs, graters, peelers\n        \"\"\"\n        cutlery = [\"fork\", \"knife\", \"spoon\", \"spatula\", \"whisk\","}
{"cat": "home item", "slot": "generalization", "value": "receptacle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are receptacle. \n        Output: ", "result": "\n        - lamp\n        - lamp\n        - lamp\n        - lamp\n        - lamp\n        - lamp\n        - lamp\n        - lamp\n        - lamp\n        - lamp\n        - lamp\n        - lamp\n        - lamp\n        - lamp\n        - lamp\n        - lamp"}
{"cat": "home item", "slot": "generalization", "value": "vessel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are vessel. \n        Output: ", "result": "\n        - lamp\n        - vase\n        - bowl\n        - jug\n        - pitcher\n        - teapot\n        - mug\n        - cup\n        - glass\n        - decanter\n        \"\"\"\n        words = [\"lamp\", \"vase\", \"bow"}
{"cat": "home item", "slot": "generalization", "value": "ware", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are ware. \n        Output: ", "result": "\n        bed, chair, couch, desk, dresser, lamp, rug, table, TV, wardrobe \n    \"\"\"\n    category = \"home item\"\n    condition = \"are ware\"\n    words = get_words(category, condition)\n    print(\","}
{"cat": "home item", "slot": "generalization", "value": "instrumentation", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are instrumentation. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "generalization", "value": "construction", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are construction. \n        Output: ", "result": "\n```\nhammer, saw, nail, screwdriver, drill, tape measure, level, pliers, wrench, screws\n```\nExplanation: The words that belong to the category \"home item\" and satisfy the condition \"are construction\" are hammer, saw"}
{"cat": "home item", "slot": "generalization", "value": "structure", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are structure. \n        Output: ", "result": "\n        bed, chair, desk, lamp, rug, shelf, table, sofa, bookshelf, closet \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n"}
{"cat": "home item", "slot": "generalization", "value": "closing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are closing. \n        Output: ", "result": "\n        bed, chair, couch, desk, dresser, lamp, nightstand, rug, table, \n        closet, curtains, drapes, hangers, ironing board, laundry basket, \n        vacuum cleaner, broom, mop,"}
{"cat": "home item", "slot": "generalization", "value": "chair", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are chair. \n        Output: ", "result": "\n```\nchair, cushion, ottoman, stool, armchair, sofa, rocking chair, recliner, swivel chair, glider\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the"}
{"cat": "home item", "slot": "generalization", "value": "fixture", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are fixture. \n        Output: ", "result": "\n        bed, chair, desk, dresser, lamp, mirror, nightstand, rug, sofa, table \n    \"\"\"\n    category = \"home item\"\n    condition = \"are fixture\"\n    words = get_words(category, condition)\n    print(\", \".join"}
{"cat": "home item", "slot": "generalization", "value": "instrumentality", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are instrumentality. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "generalization", "value": "plumbing fixture", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are plumbing fixture. \n        Output: ", "result": "\n```\nsink, faucet, shower, toilet, bathtub, sink, faucet, shower, toilet, bathtub\n```"}
{"cat": "home item", "slot": "generalization", "value": "impedimenta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are impedimenta. \n        Output: ", "result": "\n        bed, chair, desk, dresser, lamp, mattress, nightstand, pillow, rug, table\n    \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"impedimenta\" in word:\n            words.append("}
{"cat": "home item", "slot": "generalization", "value": "obstructor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are obstructor. \n        Output: ", "result": "\n        bed, chair, couch, desk, lamp, rug, shelf, table, bookshelf, closet.\n    \"\"\"\n    words = []\n    for word in words:\n        if word.lower() in obstructor.lower():\n            words.append(word)"}
{"cat": "home item", "slot": "generalization", "value": "article", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are article. \n        Output: ", "result": "\n        bed, chair, desk, lamp, rug, sofa, table, TV, computer, bookshelf \n    \"\"\"\n    category = \"home item\"\n    condition = \"are article\"\n    words = get_words(category, condition)\n    print(\", \".join("}
{"cat": "home item", "slot": "generalization", "value": "drinking vessel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are drinking vessel. \n        Output: ", "result": "\n        coffee mug, tea cup, glass, water bottle, juice glass, wine glass, shot glass, beer mug, cocktail glass, margarita glass.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n"}
{"cat": "home item", "slot": "generalization", "value": "movable barrier", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are movable barrier. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "generalization", "value": "eating utensil", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are eating utensil. \n        Output: ", "result": "\n            fork, spoon, knife, plate, bowl, cup, glass, cutting board, spatula, tongs\n\"\"\"\n\n# Define the function\ndef get_category_and_items(category, condition):\n    # Split the category and condition into words\n    category"}
{"cat": "home item", "slot": "generalization", "value": "impediment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are impediment. \n        Output: ", "result": "\n        bed, chair, couch, desk, lamp, rug, shelf, table, TV, wastebasket \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n   "}
{"cat": "home item", "slot": "generalization", "value": "obstruction", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are obstruction. \n        Output: ", "result": "\n```\nbed, chair, couch, table, lamp, rug, bookshelf, desk, window\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "home item", "slot": "generalization", "value": "obstructer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are obstructer. \n        Output: ", "result": "\n```\nbed, couch, chair, table, lamp, rug, curtains, blinds, sofa\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "home item", "slot": "generalization", "value": "faucet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are faucet. \n        Output: ", "result": "\n```\nfaucet,faucet,faucet,faucet,faucet,faucet,faucet,faucet,faucet\n```"}
{"cat": "home item", "slot": "generalization", "value": "passageway", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are passageway. \n        Output: ", "result": "\n```\npassageway, hallway, corridor, aisle, staircase, lobby, entrance, foyer, vestibule, gallery\n```\nExplanation: The words \"passageway\", \"hallway\", \"corridor\", \"aisle\", \""}
{"cat": "home item", "slot": "generalization", "value": "corridor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are corridor. \n        Output: ", "result": "\n```\ncorridor, hallway, passage, aisle, walkway, lobby, foyer, entryway, vestibule, gallery\n```\nExplanation: The words \"corridor\", \"hallway\", \"passage\", \"aisle\", \"walkway\","}
{"cat": "home item", "slot": "generalization", "value": "bottle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are bottle. \n        Output: ", "result": "\n```\nbottle, glass, jar, vase, pitcher, decanter, flask, jug, carafe, goblet\n```"}
{"cat": "home item", "slot": "generalization", "value": "quantity", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are quantity. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "generalization", "value": "way", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are way. \n        Output: ", "result": "\n        bed, chair, couch, desk, dresser, lamp, nightstand, rug, sofa, table \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n   "}
{"cat": "home item", "slot": "generalization", "value": "control", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are control. \n        Output: ", "result": "\n```\nbed, chair, desk, lamp, rug, sofa, table, tv, computer, keyboard\n```\nExplanation: The words that belong to the category \"home item\" and satisfy the condition \"are control\" are \"bed, chair, desk, lamp, rug, so"}
{"cat": "home item", "slot": "generalization", "value": "area", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are area. \n        Output: ", "result": "\n        bedroom,livingroom,kitchen,diningroom,bathroom,hallway,bed,sofa,desk,chair \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "home item", "slot": "generalization", "value": "amount", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are amount. \n        Output: ", "result": "\n        bed, chair, couch, desk, dresser, lamp, mattress, nightstand, sofa, table \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)"}
{"cat": "home item", "slot": "generalization", "value": "spigot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are spigot. \n        Output: ", "result": "\n        armchair\n        bed\n        couch\n        desk\n        dresser\n        lamp\n        nightstand\n        recliner\n        sofa\n    \"\"\"\n    category = \"home item\"\n    condition = \"are spigot\"\n    words = []\n   "}
{"cat": "home item", "slot": "generalization", "value": "device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are device. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "generalization", "value": "controller", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are controller. \n        Output: ", "result": "\n            \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"controller\" in word and \"home\" in word:\n            words.append(word)\n    return \", \".join(words)\n\ndef get_category(word):\n    \"\"\"\n"}
{"cat": "home item", "slot": "generalization", "value": "cutting tool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are cutting tool. \n        Output: ", "result": "\n        Knife, Scissors, Razor, Axe, Saw, Chainsaw, Drill, Sander, Grinder, File.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "home item", "slot": "generalization", "value": "passage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are passage. \n        Output: ", "result": "\n        bed, pillow, blanket, quilt, comforter, mattress, sheets, towel, shower curtain, bath mat.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "home item", "slot": "generalization", "value": "jar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are jar. \n        Output: ", "result": "\n        coffee, sugar, salt, pepper, vinegar, mustard, ketchup, mayonnaise, olive oil, balsamic vinegar. \n        \"\"\"\n        category = \"home item\"\n        condition = \"are jar\"\n        words = []\n"}
{"cat": "home item", "slot": "generalization", "value": "cutting implement", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are cutting implement. \n        Output: ", "result": "\n        knife, scissors, shears, razor, blade, saw, cutter, guillotine, clippers,\n```"}
{"cat": "home item", "slot": "generalization", "value": "indefinite quantity", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are indefinite quantity. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "generalization", "value": "edge tool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are edge tool. \n        Output: ", "result": "\n```\nscissors, knife, saw, hammer, tape, glue, pliers, wrench, screwdriver, drill\n```"}
{"cat": "home item", "slot": "generalization", "value": "measure", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are measure. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "generalization", "value": "approach", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are approach. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "generalization", "value": "regulator", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are regulator. \n        Output: ", "result": "\n        clock, fan, heater, humidifier, light, microwave, oven, refrigerator, toaster, vacuum\n    \"\"\"\n    category = \"home item\"\n    condition = \"are regulator\"\n    words = get_words(category, condition"}
{"cat": "home item", "slot": "generalization", "value": "cutter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are cutter. \n        Output: ", "result": "\n```\ncutter, knife, scissors, shears, blade, cut, slice, chop, trim,\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "home item", "slot": "generalization", "value": "containerful", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are containerful. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "generalization", "value": "crockery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are crockery. \n        Output: ", "result": "\n            coffee, mug, plate, bowl, spoon, fork, knife, salt, pepper, sugar.\n    \"\"\"\n    crockery_words = [\"coffee\", \"mug\", \"plate\", \"bowl\", \"spoon\", \"fork\", \"kn"}
{"cat": "home item", "slot": "generalization", "value": "cup", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are cup. \n        Output: ", "result": "\n        coffee, mug, cup, tea, glass, bowl, plate, spoon, fork, knife \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)\n    print"}
{"cat": "home item", "slot": "generalization", "value": "furnishing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are furnishing. \n        Output: ", "result": "\n        sofa, armchair, coffee table, lamp, rug, dining table, bed, wardrobe, dressing table, curtains\n    \"\"\"\n    furnishing_words = [\"sofa\", \"armchair\", \"coffee table\", \"lamp\", \""}
{"cat": "home item", "slot": "part", "value": "seat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can have  seat. \n        Output: ", "result": "\n            chair, sofa, couch, armchair, loveseat, settee, rocking chair, recliner, chair and a half, ottoman \n        \"\"\"\n        words = []\n        for word in word_list:\n            if \"seat\" in word"}
{"cat": "home item", "slot": "generalization", "value": "seat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are seat. \n        Output: ", "result": "\n            armchair, couch, sofa, chair, love seat, settee, rocking chair, recliner, lounge chair, ottoman. \n        \"\"\"\n        category = Category.objects.get(name='home item')\n        words = Word.objects."}
{"cat": "home item", "slot": "place", "value": "entrance", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be found or used in entrances. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "generalization", "value": "room", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are room. \n        Output: ", "result": "\n```\nbed, chair, sofa, table, lamp, rug, curtain, blinds, shelves\n```\nExplanation: The words that belong to the category \"home item\" and satisfy the condition \"are room\" are \"bed, chair, sofa, table, lamp,"}
{"cat": "home item", "slot": "generalization", "value": "access", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are access. \n        Output: ", "result": "\n```\nbed, chair, desk, lamp, rug, sofa, table, tv, computer, bookshelf\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "home item", "slot": "generalization", "value": "support", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: are support. \n        Output: ", "result": "\n            \n```"}
{"cat": "home item", "slot": "material", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: home item. \n        Condition: can be made of silver. \n        Output: ", "result": "\n            lamp, tray, vase, bowl, candlestick, picture frame, mirror, clock, ashtray, salt and pepper shaker\n\"\"\"\n\nword_list = [\"lamp\", \"tray\", \"vase\", \"bowl\", \"candl"}
{"cat": "appliance, equipment and device", "slot": "bodyPart", "value": "mouth", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have or be used with mouth. \n        Output: ", "result": "\n        refrigerator, freezer, microwave, toaster, oven, dishwasher, blender, coffee maker, vacuum cleaner, air conditioner\n    \"\"\"\n    appliance_words = [\n        \"refrigerator\", \"freezer\","}
{"cat": "appliance, equipment and device", "slot": "bodyPart", "value": "ear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have or be used with ear. \n        Output: ", "result": "\n            \n        \"\"\"\n        appliance_list = []\n        for word in word_list:\n            if \"ear\" in word and \"can\" in word and \"have\" in word and \"be\" in word and \"used\" in word:\n                appliance_list.append("}
{"cat": "appliance, equipment and device", "slot": "accessory", "value": "tablet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: may have to do with tablet. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "accessory", "value": "salt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: may have to do with salt. \n        Output: ", "result": "\n            1. Salt\n            2. Shaker\n            3. Pepper\n            4. Mill\n            5. Grinder\n            6. Blender\n            7. Mixer\n            8. Juicer\n            9. Toaster\n            10. Oven\n        \"\"\"\n"}
{"cat": "appliance, equipment and device", "slot": "content", "value": "programmable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: contain programmables. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "efficiency", "value": "fragile", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be fragile. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "content", "value": "alcohol", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: contain alcohols. \n        Output: ", "result": "\n            1. Alcohol\n            2. Beverage\n            3. Drink\n            4. Liquor\n            5. Spirits\n            6. Booze\n            7. Alcoholic\n            8. Drinkable\n            9. Intoxicant"}
{"cat": "appliance, equipment and device", "slot": "user", "value": "teacher", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used by teachers. \n        Output: ", "result": "\n            1. blackboard\n            2. chalk\n            3. whiteboard\n            4. marker\n            5. eraser\n            6. ruler\n            7. textbook\n            8. calculator\n            9. computer\n            10. projector\n        \"\"\"\n       "}
{"cat": "appliance, equipment and device", "slot": "sound", "value": "ring", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can ring. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "sound", "value": "ring", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can ring. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "user", "value": "doctor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used by doctors. \n        Output: ", "result": "\n            1. Stethoscope\n            2. Syringe\n            3. Bandage\n            4. Scalpel\n            5. Suture\n            6. Syringe\n            7. Syringe\n            8. Syringe\n            9. Syringe\n            "}
{"cat": "appliance, equipment and device", "slot": "user", "value": "patient", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used by patients. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "content", "value": "mercury", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: contain mercuries. \n        Output: ", "result": "\n            1. thermometer\n            2. thermostat\n            3. barometer\n            4. thermometer\n            5. thermometer\n            6. thermometer\n            7. thermometer\n            8. thermometer\n            9. thermometer\n            10. thermometer\n       "}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "cordless", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are cordless. \n        Output: ", "result": "\n        dishwasher, blender, vacuum, toaster, coffee maker, can opener, food processor, hair dryer, curling iron, steamer \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are cordless\""}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "smartphone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are smartphone. \n        Output: ", "result": "\n            smartphone, tablet, laptop, desktop, smartwatch, fitness tracker, smart speaker, virtual reality headset, smart home device, smart thermostat. \n        \"\"\"\n        category = \"appliance, equipment and device\"\n        condition = \"are smartphone\"\n       "}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "landline", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are landline. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "radiophone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are radiophone. \n        Output: ", "result": "\n        phone, radio, receiver, transceiver, transmitter, telephone, wireless, radiophone, radiotelephone, radiotransceiver\n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are radiophone\"\n    words = []\n"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "link-attached terminal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are link-attached terminal. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "link-attached station", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are link-attached station. \n        Output: ", "result": "\n        \n```"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "radiotelephone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are radiotelephone. \n        Output: ", "result": "\n        Radiotelephone, Radio, Telephone, Television, Microwave, Refrigerator, Air conditioner, Washing machine, Dishwasher, Coffeemaker. \n        \"\"\"\n        category = 'appliance, equipment and device'\n        condition"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "dial telephone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are dial telephone. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        Examples: \n            1. refrigerator, stove, telephone, microwave, washing machine, vacuum cleaner, toaster, iron, hair dryer, blender, dishwash"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "remote terminal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are remote terminal. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "dial phone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are dial phone. \n        Output: ", "result": "\n        dial, phone, receiver, handset, cord, buttons, rotary, phonebook, directory, memory\n    \"\"\"\n    appliance_terms = [\n        \"dial phone\",\n        \"receiver\",\n        \"handset\",\n        \"cord\",\n        \""}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "remote station", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are remote station. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "pay-station", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are pay-station. \n        Output: ", "result": "\n        \n```"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "French telephone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are French telephone. \n        Output: ", "result": "\n            1. t\u00e9l\u00e9phone\n            2. \u00e9cran\n            3. ordinateur\n            4. t\u00e9l\u00e9vision\n            5. s\u00e8che-linge\n            6. r\u00e9frig\u00e9rateur\n            7. lave-linge\n            8. cuisine \u00e9lectrique\n            9"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "pay-phone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are pay-phone. \n        Output: ", "result": "\n        pay-phone, coin-op, phone-booth, public-phone, call-box, telephone-kiosk, \n        public-telephone, coin-operated-telephone, payphone-rental, phone-rental.\n    \"\"\"\n    pay_"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "freemail", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are freemail. \n        Output: ", "result": "\n        \n```"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "extension phone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are extension phone. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "telephone extension", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are telephone extension. \n        Output: ", "result": "100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "job-oriented terminal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are job-oriented terminal. \n        Output: ", "result": "\n            1. Refrigerator\n            2. Washing machine\n            3. Dishwasher\n            4. Microwave oven\n            5. Coffee maker\n            6. Toaster\n            7. Blender\n            8. Juicer\n            "}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "junk e-mail", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are junk e-mail. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "extension", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are extension. \n        Output: ", "result": "\n        refrigerator, freezer, microwave, oven, stove, dishwasher, washing machine, dryer, air conditioner, dehumidifier \n    \"\"\"\n    appliance_words = [\n        \"refrigerator\", \"freezer"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "handset", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are handset. \n        Output: ", "result": "\n        refrigerator, oven, microwave, dishwasher, washing machine, vacuum cleaner, air conditioner, air purifier, hair dryer, curling iron \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition ="}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "speakerphone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are speakerphone. \n        Output: ", "result": "\n        speakerphone, microphone, telephone, telephone handset, telephone receiver, telephone keypad, telephone headset, telephone handsfree, speakerphone microphone, speakerphone telephone\n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition ="}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "spam", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are spam. \n        Output: ", "result": "\n```\nappliance, equipment, device, spam, can, can't, can't, can't, can't, can't, can't, can't, can't, can't, can't, can't, can't, can"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "desk phone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are desk phone. \n        Output: ", "result": "\n        desk, phone, handset, cord, base, receiver, handset, phone, phone, phone \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are desk phone\"\n    words = []\n    for word in re.findall"}
{"cat": "appliance, equipment and device", "slot": "specialization", "value": "wireless telephone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are wireless telephone. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "shape", "value": "rectangular", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be rectangular. \n        Output: ", "result": "\n        refrigerator, freezer, oven, stove, microwave, dishwasher, washing machine, dryer, air conditioner, dehumidifier \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"freezer\", \"oven"}
{"cat": "appliance, equipment and device", "slot": "shape", "value": "long", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be long. \n        Output: ", "result": "\n        refrigerator, stove, oven, dishwasher, washing machine, dryer, air conditioner, heater, humidifier, dehumidifier \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"can be"}
{"cat": "appliance, equipment and device", "slot": "shape", "value": "elongated", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be elongated. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "shape", "value": "pointy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be pointy. \n        Output: ", "result": "\n        refrigerator, stove, knife, fork, spoon, microwave, toaster, blender, screwdriver, hammer. \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"stove\", \"oven\", \"microwave\","}
{"cat": "appliance, equipment and device", "slot": "supply", "value": "fire", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: use fire. \n        Output: ", "result": "\n        refrigerator, stove, oven, microwave, dishwasher, washing machine, vacuum cleaner, air conditioner, heater, fireplace.\n    \"\"\"\n    appliance_words = [\"refrigerator\", \"stove\", \"oven"}
{"cat": "appliance, equipment and device", "slot": "supply", "value": "petrol", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: use petrol. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "supply", "value": "coal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: use coal. \n        Output: ", "result": "\n        dishwasher, clothes washer, clothes dryer, oven, stove, refrigerator, air conditioner, furnace, water heater, clothes iron\n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"use coal\"\n"}
{"cat": "appliance, equipment and device", "slot": "supply", "value": "electricity", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: use electricity. \n        Output: ", "result": "\n            1. Refrigerator\n            2. Microwave\n            3. Television\n            4. Computer\n            5. Air conditioner\n            6. Washing machine\n            7. Dishwasher\n            8. Coffee maker\n            9. Toaster"}
{"cat": "appliance, equipment and device", "slot": "supply", "value": "gas", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: use gas. \n        Output: ", "result": "\n        refrigerator, stove, oven, microwave, dishwasher, washing machine, clothes dryer, vacuum cleaner, air conditioner, furnace \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"use"}
{"cat": "appliance, equipment and device", "slot": "supply", "value": "diesel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: use diesel. \n        Output: ", "result": "\n            1. Generator\n            2. Pump\n            3. Fan\n            4. Refrigerator\n            5. Freezer\n            6. Air conditioner\n            7. Heater\n            8. Water pump\n            9. Water heater\n            10."}
{"cat": "appliance, equipment and device", "slot": "supply", "value": "propane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: use propane. \n        Output: ", "result": "\n        refrigerator, stove, oven, microwave, dishwasher, washing machine, clothes dryer, air conditioner, furnace, humidifier, dehumidifier\n```\n\n```"}
{"cat": "appliance, equipment and device", "slot": "supply", "value": "pellet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: use pellet. \n        Output: ", "result": "\n        \n```"}
{"cat": "appliance, equipment and device", "slot": "supply", "value": "biomass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: use biomass. \n        Output: ", "result": "\n            1. stove\n            2. oven\n            3. furnace\n            4. boiler\n            5. water heater\n            6. generator\n            7. dryer\n            8. washing machine\n            9. refrigerator\n            10. dish"}
{"cat": "appliance, equipment and device", "slot": "supply", "value": "wood", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: use wood. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "supply", "value": "convection", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: use convection. \n        Output: ", "result": "\n        refrigerator, stove, oven, microwave, dishwasher, washing machine, clothes dryer, vacuum cleaner, air conditioner, dehumidifier\n    \"\"\"\n    appliance_words = [\"refrigerator\", \"stove\","}
{"cat": "appliance, equipment and device", "slot": "supply", "value": "electric", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: use electric. \n        Output: ", "result": "\n        refrigerator, microwave, oven, toaster, blender, coffee maker, vacuum cleaner, hair dryer, iron, hair straightener \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"use electric\"\n   "}
{"cat": "appliance, equipment and device", "slot": "supply", "value": "burning", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: use burning. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "heat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for heat. \n        Output: ", "result": "\n        dishwasher, oven, stove, microwave, toaster, kettle, iron, hair dryer, curling iron, hair straightener.\n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are used for heat\""}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "speak", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used to speak. \n        Output: ", "result": "\n        refrigerator, oven, stove, microwave, toaster, blender, vacuum, washing machine, dryer, dishwasher\n\"\"\"\nprint(\"Comma separated list of 10 words that belong to the category 'appliance, equipment"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "experiment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for experiment. \n        Output: ", "result": "\n            1. refrigerator\n            2. freezer\n            3. microwave\n            4. oven\n            5. stove\n            6. dishwasher\n            7. washing machine\n            8. air conditioner\n            9. dehumidifier"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "teaching", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for teaching. \n        Output: ", "result": "\n        refrigerator, oven, stove, microwave, toaster, blender, vacuum, washing machine, dryer, dishwasher \n    \"\"\"\n    appliance_terms = [\n        \"refrigerator\", \"oven\", \""}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "cooking", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for cooking. \n        Output: ", "result": " oven, stove, grill, microwave, toaster, pan, pot, skillet, frying pan, wok. \n        \"\"\"\n        category = \"appliance, equipment and device\"\n        condition = \"are used for cooking\"\n        words = []\n"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "burn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used to burn. \n        Output: ", "result": "oven, stove, burner, fireplace, grill, oven, stove, burner, fireplace, grill. \n        \"\"\"\n        category = \"appliance, equipment and device\"\n        condition = \"are used to burn\"\n        words = []\n        for word"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "education", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for education. \n        Output: ", "result": "\n            1. blackboard\n            2. chalk\n            3. textbook\n            4. pencil\n            5. ruler\n            6. eraser\n            7. calculator\n            8. computer\n            9. projector\n            10. whiteboard\n        \"\"\""}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "enlarge", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used to enlarge. \n        Output: ", "result": "\n        refrigerator, freezer, microwave, oven, stove, dishwasher, washing machine, dryer, air conditioner, dehumidifier \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are used"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "presentation", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for presentation. \n        Output: ", "result": "\n        refrigerator, oven, stove, microwave, toaster, blender, coffee maker, dishwasher, washing machine, dryer \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are used for presentation"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "telephone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for telephone. \n        Output: ", "result": "\n            1. Telephone\n            2. Handset\n            3. Receiver\n            4. Line\n            5. Cord\n            6. Jack\n            7. Headset\n            8. Microphone\n            9. Speaker\n            10. Transmitter\n        \"\"\"\n       "}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "call", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for call. \n        Output: ", "result": "\n        refrigerator, oven, microwave, dishwasher, stove, washing machine, dryer, vacuum cleaner, air conditioner, humidifier \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"oven\", \"mic"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "wash", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for wash. \n        Output: ", "result": "\n        dishwasher, washing machine, clothes washer, washer, washing machine, clothes washer, dishwasher, washing machine, clothes washer, washer.\n    \"\"\"\n    category = 'appliance, equipment and device'\n    condition = '"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "cook", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used to cook. \n        Output: ", "result": " stove, oven, grill, microwave, toaster, pan, pot, skillet, wok, pressure cooker. \n        \"\"\"\n        category = \"appliance, equipment and device\"\n        condition = \"are used to cook\"\n        words = []\n        for"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "display", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used to display. \n        Output: ", "result": "\n        refrigerator, freezer, oven, stove, microwave, dishwasher, washing machine, dryer, air conditioner, dehumidifier \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are used"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "project", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used to project. \n        Output: ", "result": "\n        refrigerator, stove, oven, microwave, dishwasher, washing machine, dryer, air conditioner, heater, humidifier, dehumidifier \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"st"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "service", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for service. \n        Output: ", "result": "\n        dishwasher, oven, refrigerator, washing machine, dryer, stove, microwave, blender, toaster, coffee maker\n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are used for service\""}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "phone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for phone. \n        Output: ", "result": "\n            1. Phone\n            2. Handset\n            3. Receiver\n            4. Microphone\n            5. Speaker\n            6. Keypad\n            7. Display\n            8. Battery\n            9. Antenna\n            10. Charger\n        \"\"\""}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "measure", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used to measure. \n        Output: ", "result": "\n        refrigerator, thermometer, scale, clock, microwave, oven, toaster, blender, vacuum cleaner, washing machine\n```\n\n```"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "cook", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for cook. \n        Output: ", "result": "\n          microwave, oven, stove, grill, toaster, frying pan, wok, rice cooker, slow cooker, pressure cooker.\n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are used for cook\"\n"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "truck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for truck. \n        Output: ", "result": "1. Refrigerator, 2. Freezer, 3. Oven, 4. Stove, 5. Microwave, 6. Dishwasher, 7. Washer, 8. Dryer, 9. Cooler, 1"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "communication", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for communication. \n        Output: ", "result": "\n        refrigerator, freezer, microwave, oven, stove, dishwasher, washing machine, dryer, air conditioner, vacuum cleaner.\n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are used"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "restaurant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in restaurants. \n        Output: ", "result": "\n            1. Microwave\n            2. Refrigerator\n            3. Oven\n            4. Stove\n            5. Coffee maker\n            6. Dishwasher\n            7. Ice maker\n            8. Blender\n            9. Toaster"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "cinema", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in cinemas. \n        Output: ", "result": "\n            1. Projector\n            2. Screen\n            3. Sound system\n            4. Lighting\n            5. Camera\n            6. Microphone\n            7. Seating\n            8. Screenwriter\n            9. Director\n            10. Cinematographer\n        \"\"\"\n"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "planetarium", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in planetariums. \n        Output: ", "result": "\n            1. Projector\n            2. Dome\n            3. Telescope\n            4. Star chart\n            5. Planetarium software\n            6. Speakers\n            7. Lighting system\n            8. Seating\n            9. Control system\n            10. Interactive"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "hospital", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in hospitals. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "weather station", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in weather stations. \n        Output: ", "result": "\n            1. Anemometer\n            2. Barometer\n            3. Hygrometer\n            4. Rain gauge\n            5. Thermometer\n            6. Wind vane\n            7. Solar panel\n            8. Battery\n            9. Power supply\n            1"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "hotel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in hotels. \n        Output: ", "result": "\n            1. Television\n            2. Air conditioner\n            3. Refrigerator\n            4. Microwave\n            5. Coffee maker\n            6. Iron\n            7. Hair dryer\n            8. Toaster\n            9. Blender\n            1"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "classroom", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in classrooms. \n        Output: ", "result": "\n            1. blackboard\n            2. chalk\n            3. pencil\n            4. eraser\n            5. ruler\n            6. textbook\n            7. calculator\n            8. computer\n            9. projector\n            10. whiteboard\n        \"\"\""}
{"cat": "appliance, equipment and device", "slot": "place", "value": "baker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in bakers. \n        Output: ", "result": "\n            oven, mixer, blender, toaster, microwave, refrigerator, stove, dishwasher, food processor, coffee maker. \n        \"\"\"\n        category = \"appliance, equipment and device\"\n        condition = \"can be found or"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "factory", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in factories. \n        Output: ", "result": "\n            1. Generator\n            2. Pump\n            3. Fan\n            4. Air conditioner\n            5. Refrigerator\n            6. Oven\n            7. Microwave\n            8. Washing machine\n            9. Cooler\n            1"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "theater", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in theaters. \n        Output: ", "result": "\n            1. Projector\n            2. Screen\n            3. Speakers\n            4. Microphone\n            5. Lighting\n            6. Soundboard\n            7. Seating\n            8. Stage\n            9. Props\n            10. Curtains\n        \"\"\"\n"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "car", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in cars. \n        Output: ", "result": "\n            1. GPS\n            2. CD player\n            3. Air conditioning\n            4. Radio\n            5. Heater\n            6. Airbag\n            7. Tire\n            8. Wipers\n            9. Brake\n            10. Steering wheel\n"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "bakery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in bakeries. \n        Output: ", "result": "\n            1. Mixer\n            2. Oven\n            3. Mixing bowl\n            4. Whisk\n            5. Measuring cup\n            6. Food processor\n            7. Cake pan\n            8. Coffee maker\n            9. Blender\n            "}
{"cat": "appliance, equipment and device", "slot": "place", "value": "office", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in offices. \n        Output: ", "result": "\n            1. Computer\n            2. Printer\n            3. Fax machine\n            4. Scanner\n            5. Copier\n            6. Phone\n            7. Desk lamp\n            8. Coffee maker\n            9. Water cooler\n            10. Air condition"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "lab", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in labs. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "school", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in schools. \n        Output: ", "result": "\n            1. Calculator\n            2. Pencil\n            3. Eraser\n            4. Ruler\n            5. Pen\n            6. Notebook\n            7. Backpack\n            8. Water bottle\n            9. Computer\n            10. Textbook\n        \"\"\""}
{"cat": "appliance, equipment and device", "slot": "place", "value": "home", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in homes. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "conference room", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in conference rooms. \n        Output: ", "result": "\n            1. Projector\n            2. Whiteboard\n            3. Flipchart\n            4. Screen\n            5. Microphone\n            6. Speaker\n            7. Laptop\n            8. Router\n            9. Printer\n            10. Eraser\n        \"\"\""}
{"cat": "appliance, equipment and device", "slot": "place", "value": "kitchen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in kitchens. \n        Output: ", "result": "\n        refrigerator, oven, stove, microwave, dishwasher, toaster, blender, coffee maker, sink, garbage disposal. \n        \"\"\"\n        category = \"appliance, equipment and device\"\n        condition = \"can be found or"}
{"cat": "appliance, equipment and device", "slot": "place", "value": "room", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be found or used in rooms. \n        Output: ", "result": "\n        refrigerator, stove, oven, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker.\n    \"\"\"\n    appliance_words = [\"refrigerator\", \"stove\", \"oven\", \""}
{"cat": "appliance, equipment and device", "slot": "material", "value": "metal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be made of metal. \n        Output: ", "result": "\n            1. refrigerator\n            2. oven\n            3. microwave\n            4. stove\n            5. dishwasher\n            6. washing machine\n            7. air conditioner\n            8. vacuum cleaner\n            9. iron\n"}
{"cat": "appliance, equipment and device", "slot": "material", "value": "plastic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be made of plastic. \n        Output: ", "result": "\n        refrigerator, dishwasher, washing machine, oven, microwave, toaster, blender, vacuum cleaner, air conditioner, television.\n    \"\"\"\n    appliance_list = []\n    for word in word_list:\n        if"}
{"cat": "appliance, equipment and device", "slot": "material", "value": "steel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be made of steel. \n        Output: ", "result": "\n        dishwasher, oven, refrigerator, washing machine, stove, microwave, toaster, blender, coffee maker, iron. \n    \"\"\"\n    appliance_list = [\n        \"dishwasher\",\n        \"oven"}
{"cat": "appliance, equipment and device", "slot": "material", "value": "glass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be made of glass. \n        Output: ", "result": "\n            1. microwave\n            2. oven\n            3. refrigerator\n            4. dishwasher\n            5. washing machine\n            6. toaster\n            7. blender\n            8. coffee maker\n            9. iron\n            1"}
{"cat": "appliance, equipment and device", "slot": "material", "value": "cast iron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be made of cast iron. \n        Output: ", "result": "\n        dishwasher, washing machine, iron, stove, oven, refrigerator, freezer, microwave, toaster, blender \n    \"\"\"\n    appliance_list = []\n    for word in word_list:\n        if \"iron"}
{"cat": "appliance, equipment and device", "slot": "purpose", "value": "screen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are used for screen. \n        Output: ", "result": "\n        refrigerator, freezer, oven, stove, microwave, dishwasher, washing machine, dryer, air conditioner, television.\n    \"\"\"\n    appliance_words = [\"refrigerator\", \"freezer\", \"oven\", \"st"}
{"cat": "appliance, equipment and device", "slot": "colorPattern", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be silver. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "colorPattern", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be silver. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be black. \n        Output: ", "result": "\n        dishwasher, washingmachine, dryer, oven, refrigerator, stove, microwave, blender, toaster, coffee maker.\n    \"\"\"\n    black_words = [\"dishwasher\", \"washingmachine\", \"d"}
{"cat": "appliance, equipment and device", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be black. \n        Output: ", "result": "\n        dishwasher, washingmachine, dryer, oven, refrigerator, stove, microwave, blender, toaster, coffee maker.\n    \"\"\"\n    black_words = [\"dishwasher\", \"washingmachine\", \"d"}
{"cat": "appliance, equipment and device", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be white. \n        Output: ", "result": "\n        dishwasher, washing machine, refrigerator, oven, stove, microwave, toaster, blender, coffee maker, vacuum cleaner.\n    \"\"\"\n    appliance_words = [\n        \"dishwasher\", \"w"}
{"cat": "appliance, equipment and device", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be white. \n        Output: ", "result": "\n        dishwasher, washing machine, refrigerator, oven, stove, microwave, toaster, blender, coffee maker, vacuum cleaner.\n    \"\"\"\n    appliance_words = [\n        \"dishwasher\", \"w"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "handle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  handle. \n        Output: ", "result": "\n        refrigerator, dishwasher, oven, microwave, toaster, blender, coffee maker, washing machine, dryer, vacuum cleaner, iron.\n    \"\"\"\n    appliance_words = [\n        \"refrigerator\", \""}
{"cat": "appliance, equipment and device", "slot": "part", "value": "cord", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  cord. \n        Output: ", "result": " refrigerator, microwave, toaster, lamp, vacuum, iron, hair dryer, curling iron, blender, coffee maker. \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"microwave\", \"toaster\", \"lamp"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "plug", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  plug. \n        Output: ", "result": " refrigerator, microwave, toaster, lamp, iron, vacuum cleaner, hair dryer, blender, coffee maker, oven. \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"microwave\", \"toaster\", \"lamp"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "push-button", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  push-button. \n        Output: ", "result": " refrigerator, microwave, toaster, oven, dishwasher, washing machine, vacuum cleaner, blender, coffee maker, TV. \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"microwave\", \"toaster"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "door", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  door. \n        Output: ", "result": " fridge, freezer, oven, microwave, dishwasher, washing machine, dryer, stove, toaster, coffee maker. \n    \"\"\"\n    appliance_words = [\"fridge\", \"freezer\", \"oven\", \"microwave\", \""}
{"cat": "appliance, equipment and device", "slot": "part", "value": "knob", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  knob. \n        Output: ", "result": " refrigerator, stove, oven, dishwasher, microwave, toaster, blender, coffee maker, washing machine, dryer. \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"stove\", \"oven\", \"d"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "rotor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  rotor. \n        Output: ", "result": "\n        dishwasher, washingmachine, refrigerator, oven, microwave, toaster, blender, vacuumcleaner, iron, hairdryer\n    \"\"\"\n    appliance_words = [\"dishwasher\", \"washingmachine"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "scale bar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  scale bar. \n        Output: ", "result": " refrigerator, freezer, microwave, oven, stove, dishwasher, washing machine, dryer, air conditioner, dehumidifier \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"freezer\", \"microwave"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "bulb", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  bulb. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "sprayer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  sprayer. \n        Output: ", "result": " vacuum, mop, broom, duster, sponge, dishwasher, washing machine, iron, hair dryer, sprayer. \n    \"\"\"\n    appliance_list = [\"vacuum\", \"mop\", \"broom\", \"duster"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "microwave", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  microwave. \n        Output: ", "result": " microwave, oven, toaster, blender, coffee maker, dishwasher, washing machine, dryer, refrigerator, freezer. \n    \"\"\"\n    appliance_list = [\"microwave\", \"oven\", \"toaster\", \"blender"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "sensor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  sensor. \n        Output: ", "result": " refrigerator, oven, microwave, toaster, coffee maker, dishwasher, washing machine, dryer, vacuum cleaner, air conditioner. \n    \"\"\"\n    appliance_words = [\n        \"refrigerator\", \"oven\","}
{"cat": "appliance, equipment and device", "slot": "part", "value": "rack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  rack. \n        Output: ", "result": " refrigerator, stove, oven, dishwasher, microwave, washing machine, dryer, air conditioner, dehumidifier, humidifier. \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"stove\", \"oven"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "drip pan", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  drip pan. \n        Output: ", "result": " refrigerator, dishwasher, washing machine, oven, stove, microwave, toaster, coffee maker, air conditioner, dehumidifier. \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"dishwasher"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "capillary tube", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  capillary tube. \n        Output: ", "result": "\n        \n```"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "water back", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  water back. \n        Output: ", "result": " refrigerator, dishwasher, washing machine, oven, microwave, toaster, coffee maker, humidifier, air conditioner, dehumidifier. \n        Explanation: refrigerator, dishwasher, washing machine,"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "wire", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  wire. \n        Output: ", "result": "\n        \n```"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "lens", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  lens. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "mantelpiece", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  mantelpiece. \n        Output: ", "result": "\n        dishwasher, oven, microwave, toaster, kettle, hob, cooker, fridge, freezer, washing machine, tumble dryer, vacuum cleaner, iron, ironing board, sewing machine, coffee maker, blender"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "fireplace", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  fireplace. \n        Output: ", "result": " stove, refrigerator, oven, microwave, dishwasher, fireplace, toaster, blender, coffee maker, washer, dryer."}
{"cat": "appliance, equipment and device", "slot": "part", "value": "grate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  grate. \n        Output: ", "result": "\n        \n```"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "hearthstone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  hearthstone. \n        Output: ", "result": " stove, refrigerator, oven, microwave, dishwasher, toaster, blender, coffee maker, washing machine, dryer \n    \"\"\"\n    appliance_list = []\n    for word in word_list:\n        if \"hearth"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "refrigerator", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  refrigerator. \n        Output: ", "result": " refrigerator, freezer, oven, stove, microwave, dishwasher, washing machine, dryer, air conditioner, dehumidifier.\n    \"\"\"\n    appliance_words = [\"refrigerator\", \"freezer\", \"oven\", \""}
{"cat": "appliance, equipment and device", "slot": "part", "value": "refrigeration system", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  refrigeration system. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "hearth", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  hearth. \n        Output: ", "result": " stove, oven, microwave, refrigerator, freezer, dishwasher, washing machine, dryer, air conditioner, heater. \n        \"\"\"\n        category = 'appliance, equipment and device'\n        condition = 'can have hearth'"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "bimetallic strip", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  bimetallic strip. \n        Output: ", "result": "\n            1. thermostat\n            2. oven\n            3. refrigerator\n            4. stove\n            5. microwave\n            6. washing machine\n            7. dishwasher\n            8. air conditioner\n            9. heater\n"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "steam whistle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  steam whistle. \n        Output: ", "result": " refrigerator, stove, toaster, vacuum cleaner, iron, washing machine, blender, coffee maker, hair dryer, steam iron. \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"stove\", \"toaster\", \"vacu"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "fireside", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  fireside. \n        Output: ", "result": "\n        dishwasher, oven, stove, fireplace, grill, microwave, toaster, coffee maker, refrigerator, freezer\n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"can have fireside\"\n"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "mantle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  mantle. \n        Output: ", "result": "\n            \n        \"\"\"\n        appliance_words = [\"stove\", \"oven\", \"microwave\", \"refrigerator\", \"freezer\", \"dishwasher\", \"washer\", \"dryer\", \"oven\", \"range\"]\n        equipment_words = [\""}
{"cat": "appliance, equipment and device", "slot": "part", "value": "shutter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  shutter. \n        Output: ", "result": "\n```\nappliance, equipment, device, shutter, camera, lens, tripod, lighting, microphone, computer\n```\nExplanation: The word \"shutter\" belongs to the category \"appliance, equipment and device\" and satisfies the condition \"can have shutter\". Therefore"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "mouthpiece", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  mouthpiece. \n        Output: ", "result": "\n        \n```"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "mantel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  mantel. \n        Output: ", "result": "\n        dishwasher, oven, microwave, refrigerator, stove, toaster, coffee maker, iron, hair dryer, vacuum cleaner.\n    \"\"\"\n    appliance_words = [\"dishwasher\", \"oven\", \"microw"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "flashlight battery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  flashlight battery. \n        Output: ", "result": "\n            1. flashlight\n            2. battery\n            3. torch\n            4. lantern\n            5. lamp\n            6. bulb\n            7. charger\n            8. socket\n            9. outlet\n            10. adapter\n        \"\"\"\n        flashlight"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "chimneypiece", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  chimneypiece. \n        Output: ", "result": " chimneypiece, cooker, dishwasher, fridge, freezer, hob, oven, washingmachine, microwave, toaster. \n    \"\"\"\n    appliance_list = [\"chimneypiece\", \"cooker\", \"dish"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "oven", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  oven. \n        Output: ", "result": "oven, microwave, toaster, blender, coffee maker, dishwasher, washing machine, dryer, refrigerator, freezer. \n        \"\"\"\n        category = \"appliance, equipment and device\"\n        condition = \"can have oven\"\n"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "button", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  button. \n        Output: ", "result": "\n        refrigerator, oven, microwave, toaster, coffee maker, dishwasher, washing machine, dryer, blender, vacuum cleaner.\n    \"\"\"\n    appliance_words = [\"refrigerator\", \"oven\", \"microw"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "pipe", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  pipe. \n        Output: ", "result": "\n        refrigerator, oven, microwave, toaster, dishwasher, washing machine, vacuum cleaner, iron, hair dryer, coffee maker.\n    \"\"\"\n    appliance_words = [\"refrigerator\", \"oven\", \"microw"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "light", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  light. \n        Output: ", "result": " lamp, flashlight, lightbulb, lightsocket, lightswitch, lampcord, lightplug, lightadapter, lightsocketoutlet, lightswitchoutlet \n    \"\"\"\n    appliance_words = [\"lamp\", \"flashlight\", \"lightbulb\", \"lightsocket\", \"light"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "grating", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  grating. \n        Output: ", "result": "\n        \n```"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "telephone receiver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  telephone receiver. \n        Output: ", "result": " refrigerator, telephone, receiver, microwave, oven, toaster, iron, vacuum cleaner, washing machine, dishwasher. \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"telephone\", \"microwave\", \""}
{"cat": "appliance, equipment and device", "slot": "part", "value": "cable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  cable. \n        Output: ", "result": " refrigerator, microwave, oven, toaster, coffee maker, vacuum cleaner, dishwasher, washing machine, dryer, cable. \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"microwave\", \"oven\","}
{"cat": "appliance, equipment and device", "slot": "part", "value": "platform", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  platform. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "capillary tubing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  capillary tubing. \n        Output: ", "result": "\n            1. capillary\n            2. tubing\n            3. cannula\n            4. catheter\n            5. drip\n            6. infusion\n            7. IV\n            8. syringe\n            9. needle\n            10. line\n"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "keypad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  keypad. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "mantlepiece", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  mantlepiece. \n        Output: ", "result": "\n        dishwasher, microwave, oven, refrigerator, stove, toaster, vacuum, washing machine, iron, hair dryer \n    \"\"\"\n    appliance_list = [\"dishwasher\", \"microwave\", \"oven"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "fire iron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  fire iron. \n        Output: ", "result": " stove, oven, iron, fireplace, grill, microwave, toaster, coffee maker, refrigerator, dishwasher."}
{"cat": "appliance, equipment and device", "slot": "part", "value": "capillary", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  capillary. \n        Output: ", "result": "\n        \n```"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "appliance", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are appliance. \n        Output: ", "result": "\n        refrigerator, oven, stove, dishwasher, washing machine, dryer, microwave, toaster, blender, coffee maker.\n    \"\"\"\n    appliance_words = [\"refrigerator\", \"oven\", \"stove\", \""}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are instrument. \n        Output: ", "result": "\n        refrigerator, oven, microwave, toaster, blender, vacuum cleaner, washing machine, dryer, dishwasher, coffee maker. \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "tool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are tool. \n        Output: ", "result": "\n```\nhammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, ruler, scissors\n```\nExplanation: The words that belong to the category \"appliance, equipment and device\" and satisfy the condition \"are tool\" are"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "electronic equipment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are electronic equipment. \n        Output: ", "result": "\n            1. Refrigerator\n            2. Microwave\n            3. Television\n            4. Computer\n            5. Air conditioner\n            6. Washing machine\n            7. Dishwasher\n            8. Coffee maker\n            9. Telephone"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "household appliance", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are household appliance. \n        Output: ", "result": "\n        dishwasher, washing machine, refrigerator, oven, stove, microwave, toaster, blender, coffee maker, vacuum cleaner \n    \"\"\"\n    appliance_words = [\n        \"dishwasher\", \"w"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "home appliance", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are home appliance. \n        Output: ", "result": "\n        refrigerator, dishwasher, washing machine, oven, stove, microwave, toaster, blender, coffee maker, vacuum cleaner.\n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are home"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "measuring instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are measuring instrument. \n        Output: ", "result": "\n            1. Microscope\n            2. Thermometer\n            3. Hygrometer\n            4. Barometer\n            5. Anemometer\n            6. Psychrometer\n            7. Stethoscope\n            8. Sphygmomanometer\n            9."}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "equipment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are equipment. \n        Output: ", "result": "\n        refrigerator, stove, oven, dishwasher, microwave, washing machine, dryer, vacuum cleaner, air conditioner, dehumidifier \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \""}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "instrumentation", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are instrumentation. \n        Output: ", "result": "\n        refrigerator, freezer, microwave, oven, stove, dishwasher, washing machine, dryer, air conditioner, dehumidifier \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are instrument"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "measuring system", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are measuring system. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "instrumentality", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are instrumentality. \n        Output: ", "result": "\n        refrigerator, oven, microwave, washing machine, vacuum cleaner, dishwasher, air conditioner, television, computer, telephone\n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are instrumentality\"\n"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "white goods", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are white goods. \n        Output: ", "result": "\n        dishwasher, oven, refrigerator, washing machine, stove, microwave, toaster, blender, coffee maker, vacuum cleaner\n    \"\"\"\n    white_goods = [\"dishwasher\", \"oven\", \"refr"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "measuring device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are measuring device. \n        Output: ", "result": "\n            1. Microwave\n            2. Oven\n            3. Thermostat\n            4. Hygrometer\n            5. Barometer\n            6. Thermometer\n            7. Anemometer\n            8. Stethoscope\n            9. Blood pressure monitor"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "kitchen appliance", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are kitchen appliance. \n        Output: ", "result": "\n        refrigerator, oven, stove, dishwasher, microwave, toaster, blender, coffee maker, food processor, slow cooker.\n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are kitchen appliance"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "peripheral", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are peripheral. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "peripheral device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are peripheral device. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "computer peripheral", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are computer peripheral. \n        Output: ", "result": "\n        monitor, keyboard, mouse, printer, scanner, speakers, webcam, microphone, digital camera, external hard drive \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are computer peripheral\"\n    words = []\n    for word"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "electronic device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are electronic device. \n        Output: ", "result": "\n            1. refrigerator\n            2. microwave\n            3. television\n            4. computer\n            5. smartphone\n            6. printer\n            7. air conditioner\n            8. dishwasher\n            9. vacuum cleaner\n            10"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "controller", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are controller. \n        Output: ", "result": "\n        refrigerator, dishwasher, oven, stove, microwave, washing machine, dryer, vacuum cleaner, air conditioner, dehumidifier \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \""}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "source of illumination", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are source of illumination. \n        Output: ", "result": "\n            lamp, light, bulb, fixture, tube, socket, switch, dimmer, ballast, transformer \n        \"\"\"\n        category = 'appliance, equipment and device'\n        condition = 'are source of illumination'\n        words = []\n        for word"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "printing machine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are printing machine. \n        Output: ", "result": "\n            1. Inkjet\n            2. Laser\n            3. Dot-matrix\n            4. Thermal\n            5. Multifunction\n            6. Photo\n            7. Copier\n            8. Fax\n            9. Printer\n            10."}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "consumer goods", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are consumer goods. \n        Output: ", "result": "\n        \n```"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "set", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are set. \n        Output: ", "result": "\n        refrigerator, stove, oven, microwave, dishwasher, washing machine, dryer, air conditioner, heater, humidifier, dehumidifier \n    \"\"\"\n    appliance_words = [\"refrigerator\", \"st"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "control", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are control. \n        Output: ", "result": "\n        refrigerator, stove, oven, dishwasher, washing machine, dryer, microwave, blender, toaster, coffee maker.\n    \"\"\"\n    appliance_list = [\"refrigerator\", \"stove\", \"oven\", \""}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "printer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are printer. \n        Output: ", "result": "\n```\nprinter, scanner, copier, fax, computer, monitor, keyboard, mouse, printer_cartridge, paper\n```\nExplanation: The word `printer` satisfies the condition of belonging to the category `appliance, equipment and device` and is also a printer."}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "navigational instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are navigational instrument. \n        Output: ", "result": "1. Compass, 2. Sextant, 3. GPS, 4. Anemometer, 5. Thermometer, 6. Barometer, 7. Chronometer, 8. Gyrocompass, 9. Radar, 10. Echo"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "broadcasting", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are broadcasting. \n        Output: ", "result": "\n        \n```"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "telecom", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are telecom. \n        Output: ", "result": "\n            1. modem\n            2. router\n            3. switch\n            4. hub\n            5. gateway\n            6. firewall\n            7. modem-router\n            8. cable modem\n            9. DSL modem\n            10. Wi-Fi router\n"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "electro-acoustic transducer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are electro-acoustic transducer. \n        Output: ", "result": "\n        dishwasher, refrigerator, oven, microwave, vacuum cleaner, washing machine, air conditioner, heater, fan, hair dryer \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are electro"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "telecommunication", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are telecommunication. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "transmission", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are transmission. \n        Output: ", "result": "\n        dishwasher, washing machine, dryer, oven, stove, refrigerator, freezer, microwave, blender, toaster\n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are transmission\"\n    words"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "video display", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are video display. \n        Output: ", "result": "1080p, 4K, HDMI, VGA, DVI, DisplayPort, LCD, LED, Plasma, OLED. \n    \"\"\"\n    appliance_equipment_device = [\"1080p\", \"4K\", \"HDMI\", \""}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "communicating", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are communicating. \n        Output: ", "result": "\n        refrigerator, dishwasher, washing machine, oven, stove, microwave, toaster, blender, coffee maker, vacuum cleaner \n    \"\"\"\n    appliance_list = [\"refrigerator\", \"dishwasher"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "input device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are input device. \n        Output: ", "result": "\n        refrigerator, oven, stove, microwave, dishwasher, washing machine, clothes dryer, vacuum cleaner, air conditioner, dehumidifier \n    \"\"\"\n    input_device = InputDevice.objects.all()\n    input"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "transducer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are transducer. \n        Output: ", "result": "\n            1. microphone\n            2. accelerometer\n            3. thermometer\n            4. barometer\n            5. hygrometer\n            6. pressure sensor\n            7. proximity sensor\n            8. light sensor\n            9. temperature sensor\n            10. humid"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "regulator", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are regulator. \n        Output: ", "result": "\n        refrigerator, freezer, oven, stove, microwave, dishwasher, washing machine, air conditioner, dehumidifier, humidifier \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "medium", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are medium. \n        Output: ", "result": "\n        refrigerator, stove, oven, microwave, dishwasher, washing machine, dryer, vacuum cleaner, air conditioner, dehumidifier \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \""}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "electric lamp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are electric lamp. \n        Output: ", "result": "\n            1. Lamp\n            2. Light\n            3. Bulb\n            4. Socket\n            5. Fixture\n            6. Fixture\n```"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "machine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are machine. \n        Output: ", "result": "\n        refrigerator, washing machine, dryer, dishwasher, oven, stove, microwave, blender, coffee maker, vacuum cleaner. \n    \"\"\"\n    appliance_list = [\"refrigerator\", \"washing machine"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "receiving system", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are receiving system. \n        Output: ", "result": "\n        \n```"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "durables", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are durables. \n        Output: ", "result": "\n        refrigerator, washing machine, dishwasher, oven, stove, microwave, vacuum cleaner, air conditioner, television, computer. \n        \"\"\"\n        category = \"appliance, equipment and device\"\n        condition = \"are durables"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "electronic communication", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are electronic communication. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "consumer durables", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are consumer durables. \n        Output: ", "result": "\n            1. Refrigerator\n            2. Television\n            3. Washing Machine\n            4. Air Conditioner\n            5. Microwave Oven\n            6. Dishwasher\n            7. Coffee Maker\n            8. Laptop\n            "}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "lamp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are lamp. \n        Output: ", "result": "\n```\nlamp,light,bulb,fixture,socket,globe,candlestick,torch,flashlight,lantern\n```"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "data input device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are data input device. \n        Output: ", "result": "\n        refrigerator, freezer, oven, stove, microwave, dishwasher, washing machine, dryer, air conditioner, dehumidifier \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are data"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "durable goods", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are durable goods. \n        Output: ", "result": "\n            \n```"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "electrical device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are electrical device. \n        Output: ", "result": "\n            1. Refrigerator\n            2. Microwave\n            3. Television\n            4. Computer\n            5. Air conditioner\n            6. Washing machine\n            7. Dishwasher\n            8. Coffee maker\n            9. Toaster"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "mechanism", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are mechanism. \n        Output: ", "result": "\n        refrigerator, oven, microwave, dishwasher, washing machine, clothes dryer, vacuum cleaner, air conditioner, ceiling fan, light bulb.\n    \"\"\"\n    appliance_list = [\"refrigerator\", \"oven\","}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "optical instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are optical instrument. \n        Output: ", "result": "\n            1. Microscope\n            2. Telescope\n            3. Binoculars\n            4. Camera\n            5. Periscope\n            6. Magnifying glass\n            7. Telescope\n            8. Microscope\n            9. Camera\n            10"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are device. \n        Output: ", "result": "\n        dishwasher, washing machine, refrigerator, oven, stove, microwave, toaster, blender, coffee maker, vacuum cleaner.\n    \"\"\"\n    appliance_list = [\"dishwasher\", \"washing machine"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "display", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  display. \n        Output: ", "result": " refrigerator, freezer, oven, stove, microwave, dishwasher, washing machine, dryer, air conditioner, dehumidifier. \n        \"\"\"\n        category = 'appliance, equipment and device'\n        condition = 'can have display"}
{"cat": "appliance, equipment and device", "slot": "material", "value": "mercury", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be made of mercury. \n        Output: ", "result": "\n            1. thermometer\n            2. thermostat\n            3. mercury\n            4. barometer\n            5. manometer\n            6. sphygmomanometer\n            7. thermocouple\n            8. mercury switch\n            9. mercur"}
{"cat": "appliance, equipment and device", "slot": "material", "value": "alcohol", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can be made of alcohol. \n        Output: ", "result": "\n        refrigerator, freezer, ice maker, beer, wine, whiskey, vodka, gin, rum, cocktail shaker \n    \"\"\"\n    appliance_words = [\n        \"refrigerator\", \"freezer\", \"ice maker"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "receiver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  receiver. \n        Output: ", "result": " blender, coffee maker, dishwasher, dryer, freezer, microwave, oven, refrigerator, toaster, washing machine. \n    \"\"\"\n    appliance_list = [\"blender\", \"coffee maker\", \"dishw"}
{"cat": "appliance, equipment and device", "slot": "part", "value": "screen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: can have  screen. \n        Output: ", "result": " fridge, freezer, microwave, oven, stove, toaster, washing machine, dryer, dishwasher, TV. \n    \"\"\"\n    appliance_words = [\"fridge\", \"freezer\", \"microwave\", \"oven\", \"stove"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "receiver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are receiver. \n        Output: ", "result": "\n        refrigerator, oven, stove, microwave, dishwasher, washing machine, dryer, air conditioner, heater, humidifier, dehumidifier.\n    \"\"\"\n    appliance_words = [\"refrigerator\", \"oven"}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "communication", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are communication. \n        Output: ", "result": "\n        refrigerator, freezer, microwave, oven, stove, dishwasher, washing machine, dryer, vacuum cleaner, air conditioner\n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \"are communication\""}
{"cat": "appliance, equipment and device", "slot": "generalization", "value": "display", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: appliance, equipment and device. \n        Condition: are display. \n        Output: ", "result": "\n        refrigerator, dishwasher, oven, stove, microwave, washing machine, dryer, vacuum cleaner, air conditioner, dehumidifier \n    \"\"\"\n    category = \"appliance, equipment and device\"\n    condition = \""}
{"cat": "music instrument", "slot": "accessory", "value": "seat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: may have to do with seat. \n        Output: ", "result": "\n        guitar, bass, drums, piano, violin, cello, saxophone, trumpet, flute, clarinet\n```\n```"}
{"cat": "music instrument", "slot": "accessory", "value": "bow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: may have to do with bow. \n        Output: ", "result": " violin, cello, viola, bass, guitar, ukulele, banjo, harp, flute, saxophone \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"may have to do with bow\"\n    words = get_words(category,"}
{"cat": "music instrument", "slot": "place", "value": "France", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be found or used in Frances. \n        Output: ", "result": "\n        flute, clarinet, saxophone, trumpet, trombone, violin, cello, piano, guitar, drums\n```\n\n```"}
{"cat": "music instrument", "slot": "specialization", "value": "bass fiddle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are bass fiddle. \n        Output: ", "result": "\n```\nbass, fiddle, violin, cello, double bass, contrabass, acoustic bass, electric bass, upright bass\n```\n\nExample:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n"}
{"cat": "music instrument", "slot": "specialization", "value": "sousaphone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are sousaphone. \n        Output: ", "result": "\n        saxophone, trumpet, trombone, tuba, euphonium, sousaphone, clarinet, flute, oboe, horn\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are sousaphone\"\n    words = get_words("}
{"cat": "music instrument", "slot": "specialization", "value": "double bass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are double bass. \n        Output: ", "result": "\n        violin, cello, double bass, viola, bass guitar, contrabass, upright bass, acoustic bass, electric bass.\n    \"\"\"\n    words = []\n    for word in words:\n        if \"double bass\" in word:\n            words.append"}
{"cat": "music instrument", "slot": "specialization", "value": "contrabass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are contrabass. \n        Output: ", "result": "\n        cello,doublebass,contrabass,bassguitar,bassoon,bassdrum,bassclarinet,basshorn,basspedal,bassviolin \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are cont"}
{"cat": "music instrument", "slot": "specialization", "value": "upright piano", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are upright piano. \n        Output: ", "result": "\n```\npiano, harpsichord, clavichord, fortepiano, upright piano, grand piano, concert grand piano, baby grand piano, parlor grand piano, studio grand piano\n```\nExplanation: The words that belong to the category \"music instrument\" and satisfy"}
{"cat": "music instrument", "slot": "specialization", "value": "bass horn", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are bass horn. \n        Output: ", "result": "\n        trumpet\n        trombone\n        tuba\n        French horn\n        euphonium\n        sousaphone\n        baritone horn\n        tenor horn\n        bassoon\n        contrabassoon\n    \"\"\"\n    words = []\n    for word in word_list"}
{"cat": "music instrument", "slot": "specialization", "value": "Pianola", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are Pianola. \n        Output: ", "result": "\n        Pianola, Piano, Pianoforte, Player Piano, Reproducing Piano, Automatic Piano, Self-Playing Piano, Player System, Reproducing System, Automatic Music Player.\n    \"\"\"\n    category = \"music instrument\"\n    condition ="}
{"cat": "music instrument", "slot": "specialization", "value": "grand piano", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are grand piano. \n        Output: ", "result": "\n        grand,piano,instrument,classical,string,keyboard,symphony,concert,pianist,music\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are grand piano\"\n    words = get_words(category, condition)\n    print"}
{"cat": "music instrument", "slot": "specialization", "value": "bass guitar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are bass guitar. \n        Output: ", "result": "\n```\nbass, guitar, upright, electric, acoustic, 4-string, 5-string, 6-string, double-bass\n```"}
{"cat": "music instrument", "slot": "specialization", "value": "player piano", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are player piano. \n        Output: ", "result": "\n```\npiano, organ, harp, guitar, violin, flute, clarinet, saxophone, trumpet\n```\nExplanation: The words that belong to the category \"music instrument\" and satisfy the condition \"are player piano\" are \"piano, organ,"}
{"cat": "music instrument", "slot": "specialization", "value": "tuba", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are tuba. \n        Output: ", "result": "\n        trumpet, trombone, tuba, French horn, euphonium, saxophone, clarinet, flute, oboe, bassoon\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are tuba\"\n    words = get_words(category"}
{"cat": "music instrument", "slot": "specialization", "value": "string bass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are string bass. \n        Output: ", "result": "\n```\nbass, cello, double bass, electric bass, acoustic bass, bass guitar, contrabass, upright bass, slap bass\n```\nExplanation: The words that belong to the category \"music instrument\" and satisfy the condition \"are string bass\" are:"}
{"cat": "music instrument", "slot": "specialization", "value": "mechanical piano", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are mechanical piano. \n        Output: ", "result": "\n```\npiano, harpsichord, clavichord, organ, accordion, harmonica, marimba, xylophone, glockenspiel, celesta\n```\nExplanation: The words that belong to the category \"music instrument\" and satisfy the condition \"are"}
{"cat": "music instrument", "slot": "specialization", "value": "bass viol", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are bass viol. \n        Output: ", "result": "\n```\nbass,viol,viola,cello,doublebass,violin,violoncello,contrabass,bassoon,doublebassoon\n```"}
{"cat": "music instrument", "slot": "specialization", "value": "bull fiddle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are bull fiddle. \n        Output: ", "result": "\n        violin, viola, cello, bass, guitar, banjo, mandolin, ukulele, accordion, harmonica \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are bull fiddle\"\n    words = get_words(category, condition)"}
{"cat": "music instrument", "slot": "specialization", "value": "bombard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are bombard. \n        Output: ", "result": "\n        trumpet, saxophone, trombone, clarinet, flute, oboe, french horn, tuba, trumpet, saxophone, trombone, clarinet, flute, oboe, french horn, tuba, trumpet, sax"}
{"cat": "music instrument", "slot": "specialization", "value": "bombardon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are bombardon. \n        Output: ", "result": "\n        trumpet, trombone, tuba, saxophone, clarinet, flute, oboe, french horn, trumpet, trombone, tuba\n\"\"\"\n\nword_list = [\"trumpet\", \"trombone\", \"tuba\", \"s"}
{"cat": "music instrument", "slot": "bodyPart", "value": "finger", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have or be used with finger. \n        Output: ", "result": "\n        piano, guitar, violin, saxophone, flute, drums, cello, trumpet, clarinet, harp\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"can fly\". \n        Provide a list"}
{"cat": "music instrument", "slot": "bodyPart", "value": "hand", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have or be used with hand. \n        Output: ", "result": "\n        guitar, drums, piano, violin, cello, flute, saxophone, trumpet, clarinet, maracas\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"can fly\". \n        Provide a"}
{"cat": "music instrument", "slot": "bodyPart", "value": "mouth", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have or be used with mouth. \n        Output: ", "result": "\n        trumpet, saxophone, flute, clarinet, trombone, tuba, harmonica, accordion, kazoo, maracas\n\"\"\"\n\n# Define the function\ndef get_words(category, condition):\n    # Create an empty list to store"}
{"cat": "music instrument", "slot": "bodyPart", "value": "foot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have or be used with foot. \n        Output: ", "result": "\n        guitar, bass, drum, piano, saxophone, trumpet, violin, cello, flute, maracas\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have or be used with foot\"\n    words = []\n    for word"}
{"cat": "music instrument", "slot": "bodyPart", "value": "knee", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have or be used with knee. \n        Output: ", "result": "\n        guitar, bass, drums, piano, violin, cello, saxophone, flute, clarinet, trumpet\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have or be used with knee\"\n    words = []\n    for word"}
{"cat": "music instrument", "slot": "shape", "value": "cylindrical", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be cylindrical. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, oboe, trombone, tuba, horn, euphonium,\n```"}
{"cat": "music instrument", "slot": "shape", "value": "elongated", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be elongated. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, oboe, violin, cello, guitar, piano, drums\n    \"\"\"\n    words = []\n    for word in word_list:\n        if len(word) > 4:\n            words.append"}
{"cat": "music instrument", "slot": "shape", "value": "long", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be long. \n        Output: ", "result": "\n        guitar, bass, drums, piano, violin, cello, saxophone, trumpet, flute\n    \"\"\"\n    category = Category.objects.get(name='music instrument')\n    words = Word.objects.filter(category=category, length__gte="}
{"cat": "music instrument", "slot": "shape", "value": "thin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be thin. \n        Output: ", "result": "\n        guitar, violin, flute, saxophone, oboe, clarinet, trumpet, trombone, euphonium, tuba\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can be thin\"\n    words = get_words(category,"}
{"cat": "music instrument", "slot": "shape", "value": "hollow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be hollow. \n        Output: ", "result": "\n            cello, guitar, flute, saxophone, oboe, clarinet, trumpet, trombone, drum, violin\n        \"\"\"\n        category = Category.objects.get(name='music instrument')\n        words = Word.objects.filter(category=category,"}
{"cat": "music instrument", "slot": "shape", "value": "round", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be round. \n        Output: ", "result": "\n        guitar, drum, piano, violin, cello, saxophone, trumpet, flute, clarinet, oboe\n```\n\n```\nDescribe a scenario where the input is a list of 10 words, where each word belongs to a different category, and the"}
{"cat": "music instrument", "slot": "shape", "value": "circular", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be circular. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, trombone, flute, oboe, violin, cello, guitar, drum\n```\n```"}
{"cat": "music instrument", "slot": "howToUse", "value": "sit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be or be used for sit. \n        Output: ", "result": "\n        piano, guitar, drums, violin, cello, saxophone, flute, clarinet, trumpet, trombone\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can be or be used for sit\"\n    words = []\n    for word"}
{"cat": "music instrument", "slot": "howToUse", "value": "hold", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be or be used for hold. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, oboe, violin, cello, guitar, piano, drums\n\"\"\"\n\n# Define the function\ndef get_words(category, condition):\n    # Create an empty list to store the words\n    words"}
{"cat": "music instrument", "slot": "howToUse", "value": "blow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be or be used for blow. \n        Output: ", "result": "\n        trumpet, flute, saxophone, clarinet, oboe, trombone, didgeridoo, bagpipes, harmonica, accordion \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can be or be used for blow\"\n   "}
{"cat": "music instrument", "slot": "howToUse", "value": "press", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be or be used for press. \n        Output: ", "result": "\n        trumpet, saxophone, flute, clarinet, oboe, bassoon, french horn, trombone, tuba, drum\n\"\"\"\n\nword_list = [\"trumpet\", \"saxophone\", \"flute\", \"clarinet\", \"ob"}
{"cat": "music instrument", "slot": "howToUse", "value": "sing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be or be used for sing. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, guitar, piano, violin, cello, drums, vocals\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can be or be used for sing\"\n    words = []\n    for word in"}
{"cat": "music instrument", "slot": "howToUse", "value": "expand", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be or be used for expand. \n        Output: ", "result": "\n        flute, clarinet, saxophone, trumpet, trombone, tuba, violin, viola, cello, double bass \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can be or be used for expand\"\n    words = get"}
{"cat": "music instrument", "slot": "howToUse", "value": "compress", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be or be used for compress. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, oboe, bassoon, trombone, tuba, drum, guitar\n```\n\n```\nDescribe a scenario where you need to provide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "music instrument", "slot": "howToUse", "value": "fill", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be or be used for fill. \n        Output: ", "result": "\n        trumpet, saxophone, flute, clarinet, oboe, bassoon, french horn, trombone, tuba, euphonium \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can be or be used for fill\"\n    words"}
{"cat": "music instrument", "slot": "howToUse", "value": "fill", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be or be used for fill. \n        Output: ", "result": "\n        trumpet, saxophone, flute, clarinet, oboe, bassoon, french horn, trombone, tuba, euphonium \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can be or be used for fill\"\n    words"}
{"cat": "music instrument", "slot": "howToUse", "value": "riff", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be or be used for riff. \n        Output: ", "result": "\n        guitar, bass, drums, keyboard, saxophone, trumpet, flute, violin, cello, ukulele\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can be or be used for riff\"\n    words = []\n    for"}
{"cat": "music instrument", "slot": "sound", "value": "mechanical", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: sound mechanical. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, oboe, violin, cello, guitar, drums, piano\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"mechanical\" in word and \"music instrument\" in"}
{"cat": "music instrument", "slot": "sound", "value": "deep", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: sound deep. \n        Output: ", "result": "\n        trumpet, saxophone, flute, clarinet, trombone, tuba, violin, cello, guitar, drums\n```\n\n```\nDescribe a scenario where the input is a list of 10 words, where each word belongs to a different category, and"}
{"cat": "music instrument", "slot": "sound", "value": "melancholy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: sound melancholy. \n        Output: ", "result": "\n            cello\n            violin\n            guitar\n            piano\n            saxophone\n            flute\n            oboe\n            clarinet\n            trumpet\n    \"\"\"\n    melancholy_words = [\"cello\", \"violin\", \"guitar\", \"piano\","}
{"cat": "music instrument", "slot": "sound", "value": "high", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: sound high. \n        Output: ", "result": "\n        trumpet, saxophone, flute, clarinet, oboe, violin, cello, guitar, piano, drum\n```\n\n```\nDescribe a scenario where the input is a list of 10 words, where each word belongs to a different category, and the"}
{"cat": "music instrument", "slot": "sound", "value": "versatile", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: sound versatile. \n        Output: ", "result": "\n        trumpet, saxophone, flute, clarinet, trombone, violin, cello, guitar, piano, drums\n\"\"\"\n\nword_list = [\"trumpet\", \"saxophone\", \"flute\", \"clarinet\", \"trombone\","}
{"cat": "music instrument", "slot": "sound", "value": "mournful", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: sound mournful. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, oboe, violin, cello, viola, bassoon, French horn\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"mournful\" in word:\n           "}
{"cat": "music instrument", "slot": "sound", "value": "sad", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: sound sad. \n        Output: ", "result": "\n        piano, guitar, violin, cello, saxophone, flute, oboe, clarinet, trumpet, trombone \n    \"\"\"\n    sads = [\"piano\", \"guitar\", \"violin\", \"cello\", \"saxophone\", \""}
{"cat": "music instrument", "slot": "sound", "value": "acute", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: sound acute. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, oboe, violin, cello, guitar, piano, drum\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"endangered\".\n        Provide a list"}
{"cat": "music instrument", "slot": "user", "value": "orchestra", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used by orchestras. \n        Output: ", "result": "\n        violin, cello, viola, flute, oboe, clarinet, trumpet, trombone, saxophone \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used by orchestras\"\n    words = get_words(category"}
{"cat": "music instrument", "slot": "user", "value": "musician", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used by musicians. \n        Output: ", "result": "\n        guitar, piano, drums, violin, saxophone, flute, trumpet, cello, clarinet, harmonica\n\nExample 2: \nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "music instrument", "slot": "user", "value": "band", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used by bands. \n        Output: ", "result": "\n        guitar, bass, drums, keyboard, saxophone, trumpet, violin, cello, flute, clarinet\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used by bands\"\n    words = get_words(category, condition)\n"}
{"cat": "music instrument", "slot": "user", "value": "accordionist", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used by accordionists. \n        Output: ", "result": "\n```\nsqueeze, bellows, buttons, reeds, diatonic, chromatic, bass, treble, left, right\n```"}
{"cat": "music instrument", "slot": "user", "value": "busker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used by buskers. \n        Output: ", "result": "\n        trumpet, saxophone, guitar, violin, drums, flute, harmonica, banjo, ukulele, accordion \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used by buskers\"\n    words = get_words"}
{"cat": "music instrument", "slot": "user", "value": "pianist", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used by pianists. \n        Output: ", "result": "\n        cello, drum, guitar, harp, horn, keyboard, oboe, piano, saxophone, violin\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used by pianists\"\n    words = get_words(category, condition)\n   "}
{"cat": "music instrument", "slot": "user", "value": "cellist", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used by cellists. \n        Output: ", "result": "\n```\ncello, bow, strings, fingerboard, tailpiece, endpin, bridge, cello case, cello strings, cello bow\n```\nExplanation: The words `cello`, `bow`, `strings`, `fingerboard`, `tailpiece`, `end"}
{"cat": "music instrument", "slot": "user", "value": "drummer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used by drummers. \n        Output: ", "result": "\n        snare, bass, kick, hi-hat, tom, cymbal, crash, ride, splash, snare-drum \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used by drummers\"\n    words = get_words(category,"}
{"cat": "music instrument", "slot": "purpose", "value": "rhythm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for rhythm. \n        Output: ", "result": " bass, drum, guitar, keyboard, melody, percussion, piano, saxophone, snare, synthesizer. \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used for rhythm\"\n    words = get_words(category, condition)\n"}
{"cat": "music instrument", "slot": "purpose", "value": "groove", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for groove. \n        Output: ", "result": "\n            bass, drum, guitar, horn, keyboard, percussion, piano, saxophone, trumpet\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used for groove\"\n    words = get_words(category, condition)\n    print(\", \"."}
{"cat": "music instrument", "slot": "purpose", "value": "solo", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for solo. \n        Output: ", "result": "\n        piano, guitar, violin, flute, saxophone, trumpet, clarinet, cello, oboe, harmonica \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used for solo\"\n    words = get_words(category,"}
{"cat": "music instrument", "slot": "purpose", "value": "jazz", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for jazz. \n        Output: ", "result": "\n        trumpet, saxophone, piano, guitar, drums, bass, clarinet, flute, trombone, violin\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used for jazz\"\n    words = get_words(category, condition)\n"}
{"cat": "music instrument", "slot": "purpose", "value": "light music", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for light music. \n        Output: ", "result": "\n            guitar, flute, violin, saxophone, clarinet, trumpet, piano, harp, cello, accordion\n        \"\"\"\n        category = \"music instrument\"\n        condition = \"are used for light music\"\n        words = []\n        for word in"}
{"cat": "music instrument", "slot": "purpose", "value": "classical music", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for classical music. \n        Output: ", "result": "\n        viola, cello, violin, flute, oboe, clarinet, saxophone, trumpet, trombone, harp \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used for classical music\"\n    words = get_words"}
{"cat": "music instrument", "slot": "purpose", "value": "sound", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for sound. \n        Output: ", "result": "\n        piano, guitar, drums, violin, flute, saxophone, trumpet, cello, clarinet, harmonica\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"for sound\" in word:\n            words.append("}
{"cat": "music instrument", "slot": "purpose", "value": "playing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used to playing. \n        Output: ", "result": " guitar, piano, drums, violin, flute, saxophone, trumpet, cello, clarinet\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used to playing\"\n    words = get_words(category, condition)\n    print(\", \"."}
{"cat": "music instrument", "slot": "purpose", "value": "beat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for beat. \n        Output: ", "result": "\n        guitar, bass, drums, cymbals, snare, hi-hat, maracas, tambourine, triangle, shaker\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used for beat\"\n    words = get_words(category, condition"}
{"cat": "music instrument", "slot": "purpose", "value": "beat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used to beat. \n        Output: ", "result": " guitar, bass, drums, piano, violin, cello, saxophone, trumpet, maracas. \n        \"\"\"\n        category = Category.objects.get(name='music instrument')\n        words = Word.objects.filter(category=category, text__contains='"}
{"cat": "music instrument", "slot": "purpose", "value": "improvise", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used to improvise. \n        Output: ", "result": " piano, guitar, saxophone, trumpet, drums, violin, flute, clarinet, harmonica, accordion\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used to improvise\"\n    words = get_words(category, condition)\n"}
{"cat": "music instrument", "slot": "purpose", "value": "recital", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for recital. \n        Output: ", "result": " piano, violin, cello, guitar, flute, oboe, clarinet, saxophone, trumpet, trombone. \n        \"\"\"\n        category = \"music instrument\"\n        condition = \"are used for recital\"\n        words = get_words(category,"}
{"cat": "music instrument", "slot": "purpose", "value": "concerto", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for concerto. \n        Output: ", "result": " violin, cello, flute, oboe, clarinet, saxophone, trumpet, trombone, piano, violincello\n```\n```"}
{"cat": "music instrument", "slot": "purpose", "value": "practice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for practice. \n        Output: ", "result": " guitar, piano, drums, violin, flute, saxophone, clarinet, trumpet, cello, ukulele\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used for practice\"\n    words = get_words(category, condition)\n"}
{"cat": "music instrument", "slot": "purpose", "value": "sonata", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for sonata. \n        Output: ", "result": "\n        violin, cello, piano, flute, oboe, clarinet, saxophone, trumpet, trombone, violincello\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used for sonata\"\n    words = get_words"}
{"cat": "music instrument", "slot": "purpose", "value": "trio", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for trio. \n        Output: ", "result": "\n        flute, clarinet, saxophone, trumpet, violin, cello, piano, guitar, drums, bass\n```\n\n```\nDescribe a scenario where you need to find a list of 10 words that belong to a category and satisfy a condition. Provide"}
{"cat": "music instrument", "slot": "purpose", "value": "accompaniment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used for accompaniment. \n        Output: ", "result": "\n        piano, organ, guitar, bass, drums, violin, cello, flute, saxophone, trumpet\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used for accompaniment\"\n    words = get_words(category, condition)\n"}
{"cat": "music instrument", "slot": "part", "value": "fingerboard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  fingerboard. \n        Output: ", "result": " guitar, bass, ukulele, banjo, mandolin, violin, cello, saxophone, clarinet, flute \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have fingerboard\"\n    words = get_words(category, condition)"}
{"cat": "music instrument", "slot": "part", "value": "ligature", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  ligature. \n        Output: ", "result": "\n        trumpet, saxophone, trombone, clarinet, flute, oboe, violin, cello, guitar, piano\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have ligature\"\n    words = get_words(category, condition"}
{"cat": "music instrument", "slot": "part", "value": "mouthpiece", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  mouthpiece. \n        Output: ", "result": " trumpet, saxophone, clarinet, flute, oboe, trombone, tuba, euphonium, horn, mouthpiece. \n        Explanation: trumpet, saxophone, clarinet, flute, oboe, trombone, tuba"}
{"cat": "music instrument", "slot": "part", "value": "register key", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  register key. \n        Output: ", "result": " piano, organ, harpsichord, clavichord, accordion, harmonica, saxophone, trumpet, trombone, tuba. \n        \"\"\"\n        words = []\n        for word in word_list:\n            if \"register key\" in word:\n"}
{"cat": "music instrument", "slot": "part", "value": "scroll", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  scroll. \n        Output: ", "result": " guitar, harp, piano, saxophone, violin, flute, cello, trumpet, clarinet, drum\n```\n```"}
{"cat": "music instrument", "slot": "part", "value": "tailpiece", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  tailpiece. \n        Output: ", "result": " violin, viola, cello, bass, guitar, banjo, mandolin, ukulele, bouzouki, sitar \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have tailpiece\"\n    words = get_words(category, condition"}
{"cat": "music instrument", "slot": "part", "value": "neck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  neck. \n        Output: ", "result": " guitar, bass, ukulele, banjo, mandolin, violin, cello, saxophone, flute, clarinet. \n        \"\"\"\n        category = Category.objects.get(name='music instrument')\n        words = Word.objects.filter(category=category,"}
{"cat": "music instrument", "slot": "part", "value": "body", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  body. \n        Output: ", "result": " guitar, bass, drums, piano, violin, cello, saxophone, flute, trumpet, clarinet\n```\n```"}
{"cat": "music instrument", "slot": "part", "value": "f-hole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  f-hole. \n        Output: ", "result": "\n        guitar, bass, ukulele, banjo, mandolin, violin, cello, saxophone, trumpet, flute\n```\n\n```\nDescribe a scenario where the input is a list of strings, where each string is a word that belongs to a specific category"}
{"cat": "music instrument", "slot": "part", "value": "strap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  strap. \n        Output: ", "result": " guitar, bass, ukulele, banjo, mandolin, violin, cello, saxophone, flute, clarinet\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have strap\"\n    words = get_words(category, condition)\n"}
{"cat": "music instrument", "slot": "part", "value": "endpin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  endpin. \n        Output: ", "result": " guitar, bass, cello, viola, violin, banjo, mandolin, ukulele, saxophone, clarinet\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have endpin\"\n    words = get_words(category, condition)\n"}
{"cat": "music instrument", "slot": "part", "value": "clavier", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  clavier. \n        Output: ", "result": " piano, harpsichord, clavichord, organ, guitar, violin, flute, clarinet, saxophone, trumpet. \n        \"\"\"\n        category = Category.objects.get(name='music instrument')\n        words = Word.objects.filter(category"}
{"cat": "music instrument", "slot": "part", "value": "resonance chamber", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  resonance chamber. \n        Output: ", "result": " guitar, violin, cello, saxophone, flute, oboe, clarinet, trumpet, trombone, drum. \n        \"\"\"\n        category = Category.objects.get(name='music instrument')\n        words = Word.objects.filter(category=category,"}
{"cat": "music instrument", "slot": "part", "value": "tuning peg", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  tuning peg. \n        Output: ", "result": " guitar, bass, ukulele, banjo, mandolin, violin, cello, saxophone, clarinet, flute \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have tuning peg\"\n    words = get_words(category,"}
{"cat": "music instrument", "slot": "part", "value": "piano keyboard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  piano keyboard. \n        Output: ", "result": " piano, keyboard, guitar, drums, violin, flute, saxophone, trumpet, clarinet. \n        \"\"\"\n        category = Category.objects.get(name='music instrument')\n        words = Word.objects.filter(category=category, text__contains='p"}
{"cat": "music instrument", "slot": "part", "value": "bridge", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  bridge. \n        Output: ", "result": " guitar, bass, banjo, mandolin, ukulele, violin, cello, viola, flute, saxophone \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have bridge\"\n    words = get_words(category, condition)\n"}
{"cat": "music instrument", "slot": "part", "value": "fine tuner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  fine tuner. \n        Output: ", "result": " violin, viola, cello, bass, guitar, piano, harp, flute, oboe, saxophone \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have fine tuner\"\n    words = get_words(category, condition)\n"}
{"cat": "music instrument", "slot": "part", "value": "key", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  key. \n        Output: ", "result": "\n        piano, guitar, drums, violin, flute, saxophone, trumpet, cello, clarinet\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"key\" in word:\n            words.append(word)\n   "}
{"cat": "music instrument", "slot": "part", "value": "soft pedal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  soft pedal. \n        Output: ", "result": "\n        Piano, Harp, Organ, Flute, Clarinet, Saxophone, Trumpet, Violin, Cello, Oboe \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"soft pedal\" in word:\n            words"}
{"cat": "music instrument", "slot": "part", "value": "thumbhole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  thumbhole. \n        Output: ", "result": " guitar, banjo, mandolin, ukulele, bouzouki, sitar, lute, oud, banjo ukulele, thumbhole banjo \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have thumbhole\"\n    words = get_"}
{"cat": "music instrument", "slot": "part", "value": "chin rest", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  chin rest. \n        Output: ", "result": " violin, viola, cello, bass, guitar, ukulele, banjo, mandolin, saxophone, flute \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have chin rest\"\n    words = get_words(category, condition"}
{"cat": "music instrument", "slot": "part", "value": "head", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  head. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, oboe, violin, viola, cello, bass, guitar\n```\n\n```\nDescribe a scenario where the input is a list of strings, where each string is a word that belongs to a specific category."}
{"cat": "music instrument", "slot": "part", "value": "drumhead", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  drumhead. \n        Output: ", "result": " guitar, bass, drums, cymbals, snare, kick, hihat, ride, crash,\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n"}
{"cat": "music instrument", "slot": "part", "value": "bellows", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  bellows. \n        Output: ", "result": "\n        trumpet, saxophone, accordion, harmonica, bagpipes, concertina, bassoon, oboe, clarinet, flute \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have bellows\"\n    words = get_words"}
{"cat": "music instrument", "slot": "part", "value": "pedal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  pedal. \n        Output: ", "result": " piano, organ, harpsichord, clavichord, accordion, harmonium, synthesizer, theremin, marimba, xylophone. \n        \"\"\"\n        category = \"music instrument\"\n        condition = \"can have pedal\"\n        words ="}
{"cat": "music instrument", "slot": "part", "value": "membrane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  membrane. \n        Output: ", "result": " piano, guitar, drums, marimba, xylophone, cello, violin, flute, saxophone, clarinet\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have membrane\"\n    words = get_words(category, condition)"}
{"cat": "music instrument", "slot": "part", "value": "violin bow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  violin bow. \n        Output: ", "result": " violin, viola, cello, bass, violin bow, viola bow, cello bow, bass bow, violin case, viola case, cello case, bass case."}
{"cat": "music instrument", "slot": "part", "value": "loud pedal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  loud pedal. \n        Output: ", "result": " guitar, piano, organ, drums, saxophone, trumpet, violin, flute, clarinet. \n        \"\"\"\n        category = \"music instrument\"\n        condition = \"can have loud pedal\"\n        words = get_words(category, condition)\n        return"}
{"cat": "music instrument", "slot": "part", "value": "surface", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  surface. \n        Output: ", "result": " piano, guitar, drums, violin, saxophone, flute, clarinet, cello, trumpet, trombone \n    \"\"\"\n    words = []\n    for word in words:\n        if \"surface\" in word:\n            words.append(word)\n"}
{"cat": "music instrument", "slot": "part", "value": "fall-board", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  fall-board. \n        Output: ", "result": " guitar, piano, drums, violin, cello, flute, saxophone, clarinet, trumpet, trombone \n        \"\"\"\n        category = \"music instrument\"\n        condition = \"can have fall-board\"\n        words = get_words(category, condition)"}
{"cat": "music instrument", "slot": "part", "value": "music rack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  music rack. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, violin, cello, guitar, piano, drums, marimba\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"can fly\". \n        Provide a"}
{"cat": "music instrument", "slot": "part", "value": "leg", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  leg. \n        Output: ", "result": " guitar, bass, drums, piano, violin, cello, saxophone, flute, trumpet, leg. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"leg\" in word:\n            words.append(word)\n"}
{"cat": "music instrument", "slot": "part", "value": "button", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  button. \n        Output: ", "result": " guitar, bass, drums, keyboard, saxophone, flute, violin, cello, trumpet, clarinet\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"button\" in word:\n            words.append(word)\n   "}
{"cat": "music instrument", "slot": "part", "value": "pleat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  pleat. \n        Output: ", "result": "\n        piano, guitar, violin, flute, saxophone, clarinet, trumpet, drum, cello, oboe\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"pleat\" in word:\n            words.append("}
{"cat": "music instrument", "slot": "part", "value": "screw", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  screw. \n        Output: ", "result": "\n        trumpet,screwdriver,guitar,screw,drum,screwdriver,saxophone,screwdriver,piano,screw,violin,screwdriver,flute,screwdriver,clarinet,scre"}
{"cat": "music instrument", "slot": "part", "value": "hammer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  hammer. \n        Output: ", "result": " piano, guitar, drums, violin, cello, flute, saxophone, trumpet, clarinet. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"hammer\" in word:\n            words.append(word)\n"}
{"cat": "music instrument", "slot": "part", "value": "handle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  handle. \n        Output: ", "result": " guitar, bass, drums, keyboard, saxophone, trumpet, violin, cello, flute, clarinet\n```\n```"}
{"cat": "music instrument", "slot": "part", "value": "fallboard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  fallboard. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, violin, cello, guitar, piano, drums, bass\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"can fly\". \n        Provide a list of"}
{"cat": "music instrument", "slot": "part", "value": "piano action", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  piano action. \n        Output: ", "result": " guitar, bass, drums, violin, cello, saxophone, flute, trumpet, clarinet. \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have piano action\"\n    words = get_words(category, condition)\n    print"}
{"cat": "music instrument", "slot": "part", "value": "fiddlestick", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  fiddlestick. \n        Output: ", "result": " violin, cello, viola, bass, guitar, banjo, mandolin, ukulele, fiddlestick. \n        \"\"\"\n        category = Category.objects.get(name='music instrument')\n        words = Word.objects.filter(category=category, text__"}
{"cat": "music instrument", "slot": "part", "value": "finger hole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  finger hole. \n        Output: ", "result": " guitar, saxophone, flute, oboe, clarinet, trumpet, trombone, tuba, euphonium, bagpipes \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have finger hole\"\n    words = get_words(category"}
{"cat": "music instrument", "slot": "part", "value": "sustaining pedal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  sustaining pedal. \n        Output: ", "result": " piano, organ, harp, guitar, cello, violin, flute, oboe, clarinet, saxophone \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can have sustaining pedal\"\n    words = get_words(category, condition)"}
{"cat": "music instrument", "slot": "part", "value": "skin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  skin. \n        Output: ", "result": " guitar, bass, drums, piano, violin, cello, saxophone, flute, trumpet, clarinet\n```\n```"}
{"cat": "music instrument", "slot": "part", "value": "rope", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  rope. \n        Output: ", "result": " guitar, bass, drums, violin, cello, saxophone, flute, oboe, clarinet, trumpet\n```\n```"}
{"cat": "music instrument", "slot": "part", "value": "soundboard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  soundboard. \n        Output: ", "result": " guitar, bass, drums, piano, violin, saxophone, trumpet, flute, cello, soundboard\n```\n\n```\nDescribe a scenario where the input is a list of strings, where each string is a word that belongs to a specific category, and the condition is"}
{"cat": "music instrument", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be white. \n        Output: ", "result": "\n```\nguitar, piano, violin, flute, clarinet, saxophone, trumpet, trombone, drum\n```\n\n### Example 2:\n```python\npython, java, c++, javascript\n```\nProvide a list of 10 words"}
{"cat": "music instrument", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be white. \n        Output: ", "result": "\n```\nguitar, piano, violin, flute, clarinet, saxophone, trumpet, trombone, drum\n```\n\n### Example 2:\n```python\npython, java, c++, javascript\n```\nProvide a list of 10 words"}
{"cat": "music instrument", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be black. \n        Output: ", "result": "\n        guitar, bass, drums, piano, saxophone, trumpet, violin, cello, flute, clarinet\n    \"\"\"\n    black_instruments = [\"bass\", \"drums\", \"piano\", \"saxophone\", \"trumpet"}
{"cat": "music instrument", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be black. \n        Output: ", "result": "\n        guitar, bass, drums, piano, saxophone, trumpet, violin, cello, flute, clarinet\n    \"\"\"\n    black_instruments = [\"bass\", \"drums\", \"piano\", \"saxophone\", \"trumpet"}
{"cat": "music instrument", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be brown. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, violin, cello, guitar, drums, piano, oboe\n```\n```"}
{"cat": "music instrument", "slot": "colorPattern", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be silver. \n        Output: ", "result": "\n        guitar, bass, drums, piano, saxophone, flute, violin, cello, trumpet, clarinet\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can be silver\"\n    words = get_words(category, condition)\n   "}
{"cat": "music instrument", "slot": "colorPattern", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be silver. \n        Output: ", "result": "\n        guitar, bass, drums, piano, saxophone, flute, violin, cello, trumpet, clarinet\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can be silver\"\n    words = get_words(category, condition)\n   "}
{"cat": "music instrument", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be brown. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, violin, cello, guitar, drums, piano, oboe\n```\n```"}
{"cat": "music instrument", "slot": "purpose", "value": "play", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are used to play. \n        Output: ", "result": " guitar, piano, drums, violin, flute, saxophone, trumpet, cello, clarinet, harmonica \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are used to play\"\n    words = get_words(category, condition)\n"}
{"cat": "music instrument", "slot": "material", "value": "metal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be made of metal. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, trombone, drum, guitar, piano, violin, cello\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can be made of metal\"\n    words = get_words(category, condition"}
{"cat": "music instrument", "slot": "material", "value": "steel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be made of steel. \n        Output: ", "result": "\n        guitar, bass, drums, piano, saxophone, trumpet, violin, cello, flute, clarinet\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"can be made of steel\"\n    words = get_words(category, condition)"}
{"cat": "music instrument", "slot": "material", "value": "plastic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be made of plastic. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, guitar, drum, piano, violin, cello, ukulele\n\"\"\"\n\nword_list = [\"trumpet\", \"saxophone\", \"clarinet\", \"flute\", \"guitar\","}
{"cat": "music instrument", "slot": "material", "value": "aluminium", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be made of aluminium. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, oboe, guitar, drums, piano, violin, cello\n    \"\"\"\n    aluminium_music_instruments = [\n        \"trumpet\", \"saxophone\", \"clarinet\","}
{"cat": "music instrument", "slot": "material", "value": "ivory", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be made of ivory. \n        Output: ", "result": "\n        trumpet, flute, clarinet, saxophone, oboe, violin, cello, guitar, piano, harp \n    \"\"\"\n    category = \"music instrument\"\n    ivory_words = [\"trumpet\", \"flute\", \"clarinet\","}
{"cat": "music instrument", "slot": "material", "value": "felt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be made of felt. \n        Output: ", "result": "\n        piano, guitar, drums, violin, cello, flute, saxophone, trumpet, clarinet\n    \"\"\"\n    print(\", \".join(word for word in words if word.endswith(\".instrument\") and \"felt\" in word))\n```\n```"}
{"cat": "music instrument", "slot": "material", "value": "leather", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be made of leather. \n        Output: ", "result": "\n        trumpet, saxophone, guitar, violin, drums, piano, flute, clarinet, cello, ukulele\n    \"\"\"\n    leather_instruments = [\"trumpet\", \"saxophone\", \"guitar\", \"violin\", \""}
{"cat": "music instrument", "slot": "material", "value": "ebony", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be made of ebony. \n        Output: ", "result": "\n            cello, violin, viola, bass, guitar, piano, flute, oboe, clarinet, saxophone\n        Explanation: \n            cello, violin, viola, bass, guitar, piano, flute, oboe, clarinet, sa"}
{"cat": "music instrument", "slot": "material", "value": "cork", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be made of cork. \n        Output: ", "result": "\n        cello, bassoon, clarinet, flute, oboe, saxophone, trumpet, trombone, tuba, violin.\n    \"\"\"\n    cork_instruments = [instrument for instrument in instruments if \"cork\" in instrument]\n   "}
{"cat": "music instrument", "slot": "material", "value": "wood", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be made of wood. \n        Output: ", "result": "\n        guitar, bass, violin, cello, flute, oboe, clarinet, saxophone, trumpet, drum\n\"\"\"\n\n# Define the function\ndef get_words(category, condition):\n    # Create an empty list to store the words\n    words"}
{"cat": "music instrument", "slot": "material", "value": "brass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be made of brass. \n        Output: ", "result": "\n        trumpet, trombone, French horn, tuba, cornet, euphonium, saxophone, clarinet, flute, piccolo. \n        \"\"\"\n        category = \"music instrument\"\n        condition = \"can be made of brass\"\n        words ="}
{"cat": "music instrument", "slot": "part", "value": "string", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  string. \n        Output: ", "result": "\n        piano, guitar, drums, violin, flute, cello, saxophone, trumpet, clarinet\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"can\" in word:\n            words.append(word)\n   "}
{"cat": "music instrument", "slot": "generalization", "value": "musical instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are musical instrument. \n        Output: ", "result": "\n        piano, guitar, violin, flute, saxophone, drums, cello, trumpet, clarinet, harp \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are musical instrument\"\n    words = get_words(category, condition)"}
{"cat": "music instrument", "slot": "generalization", "value": "device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are device. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, oboe, guitar, piano, violin, cello, drum\n```\n\n```\nDescribe a scenario where you need to find the most common word in a list of strings.\n        Given a list of strings,"}
{"cat": "music instrument", "slot": "generalization", "value": "stringed instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are stringed instrument. \n        Output: ", "result": "\n        acoustic, guitar, violin, cello, banjo, mandolin, ukulele, harp, lute,\n```"}
{"cat": "music instrument", "slot": "generalization", "value": "wind instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are wind instrument. \n        Output: ", "result": "\n        flute, clarinet, saxophone, oboe, bassoon, trumpet, trombone, French horn, tuba, euphonium \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are wind instrument\"\n    words = get_words("}
{"cat": "music instrument", "slot": "generalization", "value": "wind", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are wind. \n        Output: ", "result": "\n        flute, clarinet, saxophone, oboe, bassoon, trumpet, trombone, French horn, tuba, euphonium\n```\n```"}
{"cat": "music instrument", "slot": "generalization", "value": "instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are instrument. \n        Output: ", "result": "\n        piano, guitar, drums, violin, flute, saxophone, trumpet, cello, clarinet\n    \"\"\"\n    words = []\n    for word in words:\n        if \"instrument\" in word and \"are\" in word:\n            words.append"}
{"cat": "music instrument", "slot": "generalization", "value": "percussion", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are percussion. \n        Output: ", "result": "\n        snare, drum, cymbal, triangle, maraca, tambourine, xylophone, glockenspiel, marimba, vibraphone.\n    \"\"\"\n    words = []\n    for word in words:\n        if \"percussion\" in word:"}
{"cat": "music instrument", "slot": "generalization", "value": "percussion instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are percussion instrument. \n        Output: ", "result": "\n        snare, drum, cymbal, triangle, maraca, tambourine, xylophone, glockenspiel, marimba, vibraphone \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are percussion instrument\"\n    words ="}
{"cat": "music instrument", "slot": "generalization", "value": "percussive instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are percussive instrument. \n        Output: ", "result": "\n        snare, bass, drum, cymbal, triangle, maracas, tambourine, xylophone, glockenspiel, castanets \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are percussive instrument\"\n    words = get"}
{"cat": "music instrument", "slot": "generalization", "value": "woodwind instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are woodwind instrument. \n        Output: ", "result": "\n        flute, clarinet, saxophone, oboe, bassoon, trumpet, trombone, French horn, tuba, euphonium\n```\n```"}
{"cat": "music instrument", "slot": "generalization", "value": "woodwind", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are woodwind. \n        Output: ", "result": "\n        flute, clarinet, saxophone, oboe, bassoon, piccolo, horn, trumpet, trombone, tuba\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"are mammals\". \n       "}
{"cat": "music instrument", "slot": "generalization", "value": "reed instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are reed instrument. \n        Output: ", "result": "1. clarinet, 2. oboe, 3. bassoon, 4. saxophone, 5. flute, 6. piccolo, 7. alto saxophone, 8. tenor saxophone, 9. bari saxoph"}
{"cat": "music instrument", "slot": "generalization", "value": "keyboard instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are keyboard instrument. \n        Output: ", "result": "\n        piano, organ, harpsichord, clavichord, synthesizer, accordion, harmonica, saxophone, trumpet, trombone \n    \"\"\"\n    key_instruments = [\"piano\", \"organ\", \"harpsichord\", \"cla"}
{"cat": "music instrument", "slot": "generalization", "value": "beating-reed instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are beating-reed instrument. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, oboe, bassoon, french horn, trombone, tuba, euphonium \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are beating-reed instrument\"\n    words"}
{"cat": "music instrument", "slot": "generalization", "value": "instrumentation", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are instrumentation. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, flute, trombone, violin, cello, guitar, drums, piano\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are instrumentation\"\n    words = get_words(category, condition)\n"}
{"cat": "music instrument", "slot": "generalization", "value": "instrumentality", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are instrumentality. \n        Output: ", "result": "\n        trumpet, saxophone, clarinet, trombone, flute, oboe, violin, cello, guitar, drum\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"have legs\".\n        Provide a list"}
{"cat": "music instrument", "slot": "generalization", "value": "bowed stringed instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are bowed stringed instrument. \n        Output: ", "result": "\n        violin, viola, cello, double bass, guitar, lute, mandolin, banjo, ukulele, harp \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are bowed stringed instrument\"\n    words = get_words(category"}
{"cat": "music instrument", "slot": "generalization", "value": "free-reed instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are free-reed instrument. \n        Output: ", "result": "\n```\naccordion, harmonium, concertina, melodeon, bandoneon, sarrusophone, saxophone, oboe d'amore, bassoon\n```\nExplanation:\n\n* The category is \"music instrument\"\n* The condition is"}
{"cat": "music instrument", "slot": "generalization", "value": "single-reed woodwind", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are single-reed woodwind. \n        Output: ", "result": "1. clarinet, 2. oboe, 3. bassoon, 4. saxophone, 5. bass clarinet, 6. contrabassoon, 7. alto saxophone, 8. tenor saxophone, 9. barit"}
{"cat": "music instrument", "slot": "generalization", "value": "double-reed instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are double-reed instrument. \n        Output: ", "result": "1. oboe, 2. bassoon, 3. english horn, 4. contrabassoon, 5. alto saxophone, 6. tenor saxophone, 7. baritone saxophone, 8. bari sax,"}
{"cat": "music instrument", "slot": "generalization", "value": "double reed", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are double reed. \n        Output: ", "result": "1. oboe, 2. bassoon, 3. english horn, 4. dulciane, 5. alto saxophone, 6. tenor saxophone, 7. bari saxophone, 8. contrabassoon, "}
{"cat": "music instrument", "slot": "generalization", "value": "single-reed instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are single-reed instrument. \n        Output: ", "result": "1. clarinet, 2. oboe, 3. bassoon, 4. saxophone, 5. bass clarinet, 6. contrabassoon, 7. alto saxophone, 8. tenor saxophone, 9. barit"}
{"cat": "music instrument", "slot": "generalization", "value": "electronic instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are electronic instrument. \n        Output: ", "result": "\n        piano, guitar, synthesizer, drum machine, keyboard, saxophone, flute, violin, cello, clarinet\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are electronic instrument\"\n    words = get_words(category, condition)\n"}
{"cat": "music instrument", "slot": "generalization", "value": "chordophone", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are chordophone. \n        Output: ", "result": "\n        cello, guitar, banjo, violin, mandolin, lute, harp, sitar, bouzouki, dulcimer \n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are chordophone\"\n    words = get_words"}
{"cat": "music instrument", "slot": "generalization", "value": "transverse flute", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are transverse flute. \n        Output: ", "result": "\n            piccolo, flute, alto flute, bass flute, C flute, D flute, E flute, F flute, G flute, A flute \n        \"\"\"\n        category = \"music instrument\"\n        condition = \"are transverse flute\"\n       "}
{"cat": "music instrument", "slot": "generalization", "value": "brass instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are brass instrument. \n        Output: ", "result": "\n        trumpet, horn, trombone, tuba, French horn, cornet, euphonium, sousaphone, bugle\n```\n\n```\nDescribe a scenario where the category is \"animals\" and the condition is \"are mammals\".\n        Provide a list"}
{"cat": "music instrument", "slot": "generalization", "value": "electronic musical instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are electronic musical instrument. \n        Output: ", "result": "\n        piano, guitar, synthesizer, drum machine, keyboard, saxophone, flute, clarinet, trumpet, violin\n    \"\"\"\n    category = \"music instrument\"\n    condition = \"are electronic musical instrument\"\n    words = get_words(category, condition"}
{"cat": "music instrument", "slot": "generalization", "value": "flute", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are flute. \n        Output: ", "result": "\n            piccolo, flute, alto flute, bass flute, C flute, D flute, E flute, F flute, G flute, A flute\n        \"\"\"\n        category = \"music instrument\"\n        condition = \"are flute\"\n        words = ["}
{"cat": "music instrument", "slot": "generalization", "value": "guitar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are guitar. \n        Output: ", "result": "\n            acoustic, electric, bass, classical, steel, guitar, ukulele, banjo, mandolin,\n```"}
{"cat": "music instrument", "slot": "howToUse", "value": "play", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can be or be used for play. \n        Output: ", "result": "\n        trumpet, guitar, piano, drums, violin, flute, saxophone, clarinet, cello, ukulele\n\"\"\"\nimport re\n\ndef get_words(category, condition):\n    words = []\n    pattern = re.compile(r'\\"}
{"cat": "music instrument", "slot": "part", "value": "reed", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  reed. \n        Output: ", "result": " trumpet, saxophone, clarinet, oboe, flute, bassoon, french horn, trombone, tuba, euphonium. \n        \"\"\"\n        category = Category.objects.get(name='music instrument')\n        words = Word.objects.filter("}
{"cat": "music instrument", "slot": "part", "value": "keyboard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: can have  keyboard. \n        Output: ", "result": " piano, organ, harpsichord, synthesizer, guitar, violin, cello, flute, saxophone, clarinet. \n        \"\"\"\n        category = Category.objects.get(name='music instrument')\n        keyboard_instruments = Instrument.objects."}
{"cat": "music instrument", "slot": "generalization", "value": "reed", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are reed. \n        Output: ", "result": "\n            clarinet, saxophone, oboe, bassoon, flute, piccolo,\n```"}
{"cat": "music instrument", "slot": "generalization", "value": "keyboard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are keyboard. \n        Output: ", "result": "\n```\npiano, organ, synthesizer, harpsichord, clavichord, accordion, harmonica, marimba, xylophone, glockenspiel\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "music instrument", "slot": "generalization", "value": "string", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are string. \n        Output: ", "result": "\n        piano, guitar, violin, cello, flute, saxophone, clarinet, trumpet, trombone, drum\n```\n```"}
{"cat": "music instrument", "slot": "generalization", "value": "brass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are brass. \n        Output: ", "result": "\n        trumpet, horn, trombone, tuba, French horn, cornet, euphonium, sousaphone, bugle, trom\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "music instrument", "slot": "generalization", "value": "wood", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: music instrument. \n        Condition: are wood. \n        Output: ", "result": "\n            guitar, violin, cello, flute, oboe, clarinet, saxophone, trumpet, trombone, drum\n\"\"\"\n\nword_list = [\"guitar\", \"violin\", \"cello\", \"flute\", \"oboe\", \"clarinet"}
{"cat": "object", "slot": "sound", "value": "ping", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can ping. \n        Output: ", "result": "\n        apple, banana, carrot, dog, elephant, giraffe, horse, lion, monkey, zebra\n    \"\"\"\n    words = []\n    for word in words:\n        if word.can_ping:\n            words.append(word)\n"}
{"cat": "object", "slot": "howToUse", "value": "wear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be or be used for wear. \n        Output: ", "result": "\n            \n```"}
{"cat": "object", "slot": "howToUse", "value": "don", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be or be used for don. \n        Output: ", "result": "\n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or "}
{"cat": "object", "slot": "howToUse", "value": "wield", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be or be used for wield. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in all_words:\n            if \"wield\" in word:\n                if \"or\" in word:\n                    words.append(word)\n        print(\", \".join(words))\n```\nExplanation:\n\n1"}
{"cat": "object", "slot": "howToUse", "value": "fasten", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be or be used for fasten. \n        Output: ", "result": "\n            1. screw\n            2. bolt\n            3. nut\n            4. washer\n            5. rivet\n            6. hinge\n            7. latch\n            8. clip\n            9. pin\n            10. clamp\n        \"\"\"\n        words"}
{"cat": "object", "slot": "bodyPart", "value": "ring", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have or be used with ring. \n        Output: ", "result": "\n```\nring, circlet, circlet, circlet, circlet, circlet, circlet, circlet, circlet\n```"}
{"cat": "object", "slot": "bodyPart", "value": "chin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have or be used with chin. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in all_words:\n            if \"chin\" in word and \"or\" in word:\n                words.append(word)\n        return words\n\n# Define a function to check if a word is a proper noun\ndef is_"}
{"cat": "object", "slot": "bodyPart", "value": "wrist", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have or be used with wrist. \n        Output: ", "result": "\n```\nwrist, watch, bracelet, cuff, band, timepiece, accessory, jewelry, bangle, armlet\n```"}
{"cat": "object", "slot": "bodyPart", "value": "head", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have or be used with head. \n        Output: ", "result": "\n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or \n        or "}
{"cat": "object", "slot": "place", "value": "bedroom", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be found or used in bedrooms. \n        Output: ", "result": "\n            \n```"}
{"cat": "object", "slot": "place", "value": "building site", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be found or used in building sites. \n        Output: ", "result": "\n            1. Hammer\n            2. Screwdriver\n            3. Tape measure\n            4. Level\n            5. Pliers\n            6. Wrench\n            7. Saw\n            8. Drill\n            9. Measuring tape\n            10."}
{"cat": "object", "slot": "place", "value": "clothes shop", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be found or used in clothes shops. \n        Output: ", "result": "\n            \n```"}
{"cat": "object", "slot": "place", "value": "hairdresser", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be found or used in hairdressers. \n        Output: ", "result": "\n            1. Scissors\n            2. Hairdryer\n            3. Comb\n            4. Razor\n            5. Haircut\n            6. Shampoo\n            7. Conditioner\n            8. Straightener\n            9. Curler\n"}
{"cat": "object", "slot": "place", "value": "bathroom", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be found or used in bathrooms. \n        Output: ", "result": "\n```\nbathroom, sink, toilet, shower, bathtub, mirror, towel, soap, toilet paper, shampoo\n```"}
{"cat": "object", "slot": "bodyPart", "value": "bracelet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have or be used with bracelet. \n        Output: ", "result": "\n```\nbracelet, bracelet, bracelet, bracelet, bracelet, bracelet, bracelet, bracelet, bracelet\n```"}
{"cat": "object", "slot": "efficiency", "value": "waterproof", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be waterproof. \n        Output: ", "result": "\n        waterproof,proof,proofing,proofed,proofing,proofed,proofing,proofed,proofing,proofed\n    \"\"\"\n    category = \"object\"\n    condition = \"can be waterproof\"\n    words = get_words(category, condition)\n   "}
{"cat": "object", "slot": "efficiency", "value": "fragile", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be fragile. \n        Output: ", "result": "\n        fragile, glass, ceramic, china, porcelain, pottery, vase, bowl, plate, cup. \n        \"\"\"\n        category = Category.objects.get(name='object')\n        condition = Condition.objects.get(name='can be"}
{"cat": "object", "slot": "efficiency", "value": "resistant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be resistant. \n        Output: ", "result": "\n            1. Resistant\n            2. Resist\n            3. Resistance\n            4. Resistant\n            5. Resist\n            6. Resistance\n            7. Resistant\n            8. Resist\n            9. Resistance\n            10. Resistant\n        \"\"\""}
{"cat": "object", "slot": "efficiency", "value": "strong", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be strong. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for i in range(10):\n            word = random.choice(['apple', 'banana', 'cherry'])\n            if random.random() < 0.5:\n                word = word.upper()\n            words.append(word"}
{"cat": "object", "slot": "purpose", "value": "safety", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used for safety. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in all_words:\n            if \"safety\" in word and \"object\" in word:\n                words.append(word)\n        return words\n\ndef get_category(word):\n    \"\"\"\n    Given a word,"}
{"cat": "object", "slot": "purpose", "value": "write", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used to write. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in all_words:\n            if \"write\" in word:\n                if \"object\" in word:\n                    words.append(word)\n        return words\n\n    def get_category(self, word):\n        \"\"\"\n"}
{"cat": "object", "slot": "purpose", "value": "fight", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used for fight. \n        Output: ", "result": "\n```\nfist, kick, punch, sword, axe, spear, shield, dagger, staff, mace\n```\nExplanation: The word `fist` is an object that is used for fighting. The words `kick`, `punch`, and `sword"}
{"cat": "object", "slot": "purpose", "value": "sport", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used for sport. \n        Output: ", "result": "\n            basketball, football, soccer, tennis, volleyball, baseball, hockey, golf, swimming, track\n\"\"\"\n\n# Define the function\ndef get_sport_words(category, condition):\n    # Create an empty list to store the words\n    sport_words ="}
{"cat": "object", "slot": "purpose", "value": "climbing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used for climbing. \n        Output: ", "result": "\n```\nrope, harness, carabiner, piton, crampons, ice axe, helmet, climbing shoes, chalk, belay\n```\nExplanation: The words `rope`, `harness`, `carabiner`, `piton`, `"}
{"cat": "object", "slot": "purpose", "value": "groom", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used to groom. \n        Output: ", "result": "\n            1. comb\n            2. brush\n            3. hairbrush\n            4. hairbrush\n            5. hairbrush\n            6. hairbrush\n            7. hairbrush\n            8. hairbrush\n            9. hairbrush\n            10"}
{"cat": "object", "slot": "purpose", "value": "reflect", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used to reflect. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in all_words:\n            if \"reflect\" in word and \"object\" in word:\n                words.append(word)\n        return \", \".join(words)\n\ndef get_category(word):\n    \"\"\"\n    Given"}
{"cat": "object", "slot": "purpose", "value": "hang", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used to hang. \n        Output: ", "result": "\n```\nhammer, nail, screw, hook, eye, hinge, pulley, rope, tack, screwdriver\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "object", "slot": "user", "value": "secretary", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used by secretaries. \n        Output: ", "result": "\n```\ndesk, secretary, typewriter, filing, stapler, paper, pen, computer, telephone, calendar\n```\nExplanation: The words \"desk\", \"secretary\", \"typewriter\", \"filing\", \"stapler\", \"paper\", \"pen\","}
{"cat": "object", "slot": "user", "value": "woman", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used by women. \n        Output: ", "result": "\n            1. purse\n            2. handbag\n            3. wallet\n            4. clutch\n            5. tote\n            6. satchel\n            7. shoulder bag\n            8. backpack\n            9. messenger bag\n            10. diaper bag"}
{"cat": "object", "slot": "user", "value": "riot police", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used by riot polices. \n        Output: ", "result": "\n            1. Baton \n            2. Helmet \n            3. Handcuffs \n            4. Riot \n            5. Shield \n            6. Tear gas \n            7. Pepper spray \n            8. Nightstick \n            "}
{"cat": "object", "slot": "user", "value": "writer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used by writers. \n        Output: ", "result": "\n        dog, cat, book, pen, paper, computer, table, chair, desk, dictionary\n    \"\"\"\n    category = \"object\"\n    condition = \"are used by writers\"\n    words = get_words(category, condition)\n    return \", \".join(words)\n"}
{"cat": "object", "slot": "user", "value": "climber", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used by climbers. \n        Output: ", "result": "1. rope, 2. harness, 3. carabiner, 4. piton, 5. crampons, 6. ice axe, 7. helmet, 8. gaiters, 9. belay device, 10. carab"}
{"cat": "object", "slot": "user", "value": "soldier", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used by soldiers. \n        Output: ", "result": "\n```\nknife, rifle, gun, bullet, ammo, grenade, bayonet, pistol, machine gun, bulletproof\n```\nExplanation: The words \"knife\", \"rifle\", \"gun\", \"bullet\", \"ammo\", \"grenade\", \""}
{"cat": "object", "slot": "user", "value": "cyclist", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used by cyclists. \n        Output: ", "result": "\n```\nbicycle, handlebars, gears, pedals, saddle, tires, chain, brakes, derailleur, crankset\n```\nExplanation: The words `bicycle`, `handlebars`, `gears`, `pedals`, `saddle`,"}
{"cat": "object", "slot": "user", "value": "motorcyclist", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used by motorcyclists. \n        Output: ", "result": "\n        helmet, goggles, leather, gloves, boots, jacket, gloves, goggles, helmet, leather\n\"\"\"\n\nword_list = [\"helmet\", \"goggles\", \"leather\", \"gloves\", \""}
{"cat": "object", "slot": "user", "value": "horseman", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used by horsemen. \n        Output: ", "result": "\n        horse, rider, saddle, bridle, reins, stirrups, bit, spur, whip, reigns\n```\n\n```\nDescribe the steps to solve the problem. \n        Step 1: Identify the category of the words. \n        Step"}
{"cat": "object", "slot": "shape", "value": "circular", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be circular. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        category = Category.objects.get(name='object')\n        words = Word.objects.filter(category=category, definition__contains='circular')\n        return [word.definition for word in words]"}
{"cat": "object", "slot": "shape", "value": "round", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be round. \n        Output: ", "result": "\n```\nround,ball,baseball,basketball,hockey,rugby,soccer,tennis,volleyball\n```"}
{"cat": "object", "slot": "shape", "value": "rond", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be rond. \n        Output: ", "result": "\n        round, rounds, rounding, roundings, rounding, roundings, round, rounds, rounding, roundings, rounding, roundings, round, rounds, rounding, roundings, round, rounds, rounding, roundings, round, rounds, round"}
{"cat": "object", "slot": "shape", "value": "arched", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be arched. \n        Output: ", "result": "\n        apple, banana, chair, desk, door, window, book, pencil, computer, table\n    \"\"\"\n    category = Category.objects.get(name='object')\n    words = Word.objects.filter(category=category, can_be_arched=True"}
{"cat": "object", "slot": "shape", "value": "spherical", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be spherical. \n        Output: ", "result": "\n        round, ball, sphere, object, circular, globe, orb, spheroid, \n        ellipsoid, hemisphere. \n        \"\"\"\n        category = Category.objects.get(name='object')\n        words = Word.objects.filter(category=category"}
{"cat": "object", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be white. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in all_words:\n            if word.category == \"object\" and word.color == \"white\":\n                words.append(word)\n        if len(words) == 0:\n            print(\"No white object words found.\")"}
{"cat": "object", "slot": "colorPattern", "value": "golden", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be golden. \n        Output: ", "result": "\n```\ngolden, coin, treasure, glitter, shiny, precious, valuable, coinage, bullion\n```\nExplanation: The words that belong to the category \"object\" and satisfy the condition \"can be golden\" are: golden, coin, treasure,"}
{"cat": "object", "slot": "colorPattern", "value": "white", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be white. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in all_words:\n            if word.category == \"object\" and word.color == \"white\":\n                words.append(word)\n        if len(words) == 0:\n            print(\"No white object words found.\")"}
{"cat": "object", "slot": "colorPattern", "value": "sparkly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be sparkly. \n        Output: ", "result": "\n          diamond, necklace, ring, bracelet, earrings, watch, brooch, tiara, bracelet, anklet\n    \"\"\"\n    words = []\n    for word in all_words:\n        if \"sparkly\" in word:\n            words."}
{"cat": "object", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be black. \n        Output: ", "result": "\n        black, bat, boy, car, cat, dog, horse, man, woman\n    \"\"\"\n    black_words = [\"black\", \"bat\", \"boy\", \"car\", \"cat\", \"dog\", \"horse\", \"man\", \"woman\"]\n    can_be_black"}
{"cat": "object", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be black. \n        Output: ", "result": "\n        black, bat, boy, car, cat, dog, horse, man, woman\n    \"\"\"\n    black_words = [\"black\", \"bat\", \"boy\", \"car\", \"cat\", \"dog\", \"horse\", \"man\", \"woman\"]\n    can_be_black"}
{"cat": "object", "slot": "colorPattern", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be silver. \n        Output: ", "result": "\n        diamond, necklace, ring, bracelet, earrings, watch, brooch, pendant, cufflinks, silver. \n    \"\"\"\n    category = Category.objects.get(name='object')\n    objects = Object.objects.filter(category=category, can"}
{"cat": "object", "slot": "purpose", "value": "shelter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used for shelter. \n        Output: ", "result": "\n        house, home, apartment, condo, cabin, cottage, mansion, castle, shack, hut\n    \"\"\"\n    category = 'object'\n    condition = 'are used for shelter'\n    words = []\n    for word in text.split():\n       "}
{"cat": "object", "slot": "purpose", "value": "shade", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used for shade. \n        Output: ", "result": "\n```\nshade,shadows,shading,shade1,shade2,shade3,shade4,shade5,shade6,shade7\n```"}
{"cat": "object", "slot": "bodyPart", "value": "jewelry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have or be used with jewelry. \n        Output: ", "result": "\n```\ndiamond, pearl, ruby, emerald, sapphire, necklace, bracelet, ring, earring, brooch\n```"}
{"cat": "object", "slot": "part", "value": "fastener", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  fastener. \n        Output: ", "result": "\n```\nbolt,screw,nut,washer,screwdriver,screwdriver,screwdriver,screwdriver,screwdriver,screwdriver\n```"}
{"cat": "object", "slot": "part", "value": "tip", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  tip. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in words:\n            if \"tip\" in word:\n                words.append(word)\n        return words\n\n    @app.task\n    def get_words(self):\n        words = []\n        for word in words:"}
{"cat": "object", "slot": "part", "value": "clasp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  clasp. \n        Output: ", "result": "10 words. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"clasp\" in word and \"object\" in word.lower():\n            words.append(word)\n    return words\n\ndef count_vowels(word):\n    \"\"\""}
{"cat": "object", "slot": "part", "value": "bead", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  bead. \n        Output: ", "result": "\n        bead, \n        can, \n        have, \n        bead, \n        can, \n        have, \n        bead, \n        can, \n        have, \n        bead, \n        can, \n        have.\n"}
{"cat": "object", "slot": "part", "value": "ink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  ink. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in word_list:\n            if \"ink\" in word:\n                words.append(word)\n        return words\n\n    @app.task\n    def get_words_with_ink(self):\n        word_list ="}
{"cat": "object", "slot": "part", "value": "lever", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  lever. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in all_words:\n            if \"lever\" in word and \"can\" in word and \"have\" in word:\n                words.append(word)\n        return \", \".join(words)\n\n# Define a function to get"}
{"cat": "object", "slot": "part", "value": "platen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  platen. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        category = Category.objects.get(name='object')\n        words = Word.objects.filter(category=category, text__contains='platen')\n        return [word.text for word in words]"}
{"cat": "object", "slot": "part", "value": "knob", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  knob. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in all_words:\n            if \"knob\" in word and \"object\" in word:\n                words.append(word)\n        return words\n"}
{"cat": "object", "slot": "part", "value": "shaft", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  shaft. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in words:\n            if \"shaft\" in word:\n                words.append(word)\n        return \", \".join(words)\n\nprint(find_words(\"object\", \"can have shaft\"))"}
{"cat": "object", "slot": "part", "value": "parasol", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  parasol. \n        Output: ", "result": "\n```\nparasol, umbrella, shade, shelter, canopy, beach umbrella, market umbrella, picnic umbrella, sunshade, beach parasol\n```"}
{"cat": "object", "slot": "part", "value": "pickup", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  pickup. \n        Output: ", "result": "10 words that can have pickup. \n        \"\"\"\n        words = []\n        for word in Word.objects.all():\n            if word.category == \"object\" and word.has_pickup:\n                words.append(word.name)\n        return words\n\n   "}
{"cat": "object", "slot": "part", "value": "pickup arm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  pickup arm. \n        Output: ", "result": "\n        pickup, arm, object, can, have, pickup, arm, object, can, have, pickup, arm, object, can, have, pickup, arm, object, can, have, pickup, arm, object, can, have, pickup, arm, object,"}
{"cat": "object", "slot": "part", "value": "carriage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  carriage. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        words = []\n        for word in all_words:\n            if \"carriage\" in word and \"object\" in word:\n                words.append(word)\n        return words\n\ndef get_"}
{"cat": "object", "slot": "part", "value": "panel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  panel. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        category = Category.objects.get(name='object')\n        words = Word.objects.filter(category=category, text__contains='panel')\n        return [word.text for word in words]\n"}
{"cat": "object", "slot": "part", "value": "felly", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  felly. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in all_words:\n            if \"felly\" in word:\n                words.append(word)\n        return words\n\ndef get_words_with_number(all_words):\n    \"\"\"\n    Given a list of words"}
{"cat": "object", "slot": "part", "value": "angle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  angle. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in words:\n            if 'angle' in word:\n                words.append(word)\n        return words\n\n    @app.task\n    def find_words_with_angle(self):\n        words = []\n        for"}
{"cat": "object", "slot": "part", "value": "key", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  key. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        category = Category.objects.get(name='object')\n        words = Word.objects.filter(category=category, key='value')\n        return [word.word for word in words]\n\n   "}
{"cat": "object", "slot": "part", "value": "radio chassis", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  radio chassis. \n        Output: ", "result": " car, radio, chassis \n    \"\"\"\n    words = []\n    for word in all_words:\n        if \"can have\" in word and \"radio chassis\" in word:\n            words.append(word.replace(\"can have\", \"\"))\n    print(\", \"."}
{"cat": "object", "slot": "part", "value": "buckle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  buckle. \n        Output: ", "result": "\n```\nbuckle,shoe,belt,purse,backpack,watch,belt,purse,shoe,buckle\n```"}
{"cat": "object", "slot": "part", "value": "rim", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  rim. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        category = Category.objects.get(name='object')\n        words = Word.objects.filter(category=category, rim=True)\n        return [word.word for word in words]\n\n   "}
{"cat": "object", "slot": "part", "value": "pendent", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  pendent. \n        Output: ", "result": "\n        box, pendant, earring, necklace, bracelet, ring, brooch, cuff, bangle, anklet\n    \"\"\"\n    words = []\n    for word in all_words:\n        if 'pendent' in word:\n            words.append(word"}
{"cat": "object", "slot": "part", "value": "pendant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  pendant. \n        Output: ", "result": "\n```\ncan, have, pendant\n```\n```"}
{"cat": "object", "slot": "part", "value": "cartridge", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  cartridge. \n        Output: ", "result": " cartridge, toner, ink, drum, ribbon, cartridge, toner, ink, drum, ribbon \n    \"\"\"\n    cartridge = [\"cartridge\", \"toner\", \"ink\", \"drum\", \"ribbon\"]\n    words = [word for word in"}
{"cat": "object", "slot": "part", "value": "beaver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  beaver. \n        Output: ", "result": " beaver, can, have, \n```"}
{"cat": "object", "slot": "part", "value": "ribbon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  ribbon. \n        Output: ", "result": "\n```\nribbon, trophy, medal, sash, rosette, crown, wreath, banner, bow, garland\n```\nExplanation: The words that can have a ribbon are trophy, medal, sash, rosette, crown, wreath"}
{"cat": "object", "slot": "part", "value": "strap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  strap. \n        Output: ", "result": "\n```\nstrap, object, can, have, \n```"}
{"cat": "object", "slot": "part", "value": "bell", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  bell. \n        Output: ", "result": " ball, can, have, \n```"}
{"cat": "object", "slot": "part", "value": "rib", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  rib. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        words = []\n        for word in all_words:\n            if \"rib\" in word:\n                words.append(word)\n        return words\n\n# Create a list of all words\nall_"}
{"cat": "object", "slot": "part", "value": "auto-changer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  auto-changer. \n        Output: ", "result": "10 words that can have auto-changer. \n        \"\"\"\n        words = []\n        for word in Category.objects.all():\n            if word.can_have_auto_changer():\n                words.append(word.name)\n        return words\n\n    def get"}
{"cat": "object", "slot": "part", "value": "felloe", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  felloe. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        category = Category.objects.get(name='object')\n        words = Word.objects.filter(category=category, text__contains='felloe')\n        return [word.text for word in words"}
{"cat": "object", "slot": "part", "value": "typewriter keyboard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  typewriter keyboard. \n        Output: ", "result": "\n```\ntypewriter, keyboard, qwertyuiop, asdfghjkl, zxcvbnm, \n```"}
{"cat": "object", "slot": "part", "value": "keyboard", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  keyboard. \n        Output: ", "result": "\n```\nkeyboard\n\n1. keyboard\n2. keyboard\n3. keyboard\n4. keyboard\n5. keyboard\n6. keyboard\n7. keyboard\n8. keyboard\n9. keyboard\n10. keyboard\n```"}
{"cat": "object", "slot": "part", "value": "turntable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  turntable. \n        Output: ", "result": "\n```\ntable, chair, desk, computer, monitor, keyboard, mouse, printer, scanner, telephone\n```"}
{"cat": "object", "slot": "part", "value": "typewriter carriage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  typewriter carriage. \n        Output: ", "result": "\n```\ntypewriter, carriage, return, typewriter, carriage, return, \ntypewriter, carriage, return, typewriter, carriage, return, \ntypewriter, carriage, return, typewriter, carriage, return, \ntypewriter, carriage, return, typewriter, carriage, return"}
{"cat": "object", "slot": "part", "value": "gore", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  gore. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in words:\n            if \"gore\" in word and \"object\" in word.lower():\n                words.append(word)\n        return \", \".join(words)\n\n    print(get_words(words))\n```\n"}
{"cat": "object", "slot": "part", "value": "visor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  visor. \n        Output: ", "result": "\n```\nvisor\nvisor\nvisor\nvisor\nvisor\nvisor\nvisor\nvisor\nvisor\n```\n```"}
{"cat": "object", "slot": "part", "value": "changer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  changer. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        words = []\n        for word in all_words:\n            if 'changer' in word:\n                words.append(word)\n        return words\n\n    def get_random_word(self"}
{"cat": "object", "slot": "part", "value": "frame", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  frame. \n        Output: ", "result": "10 words. \n    \"\"\"\n    words = []\n    for word in words:\n        if word.category == \"object\" and word.has_frame:\n            words.append(word)\n    return words\n\ndef get_nouns(words):\n    \"\"\"\n"}
{"cat": "object", "slot": "part", "value": "handle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  handle. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        category = Category.objects.get(name='object')\n        words = Word.objects.filter(category=category, text__contains='handle')\n        return [word.text for word in words]\n"}
{"cat": "object", "slot": "part", "value": "record changer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  record changer. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        category = Category.objects.get(name='object')\n        words = Word.objects.filter(category=category, record_changer=True)\n        return [word.word for word in words]"}
{"cat": "object", "slot": "part", "value": "tone arm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  tone arm. \n        Output: ", "result": "\n```\ncan, have, tone, arm, \n```\n```"}
{"cat": "object", "slot": "part", "value": "ferrule", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  ferrule. \n        Output: ", "result": "10 words. \n    \"\"\"\n    words = []\n    for word in all_words:\n        if \"ferrule\" in word:\n            words.append(word)\n    return words\n\ndef get_ferrule_words(all_words):\n    \"\"\"\n    Prov"}
{"cat": "object", "slot": "part", "value": "eraser", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  eraser. \n        Output: ", "result": "\n```\neraser, pencil, eraser, pencil, eraser, pencil, eraser, pencil, eraser, pencil\n```"}
{"cat": "object", "slot": "purpose", "value": "protection", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are used for protection. \n        Output: ", "result": "\n```\nshield, armor, fortify, protect, defend, barrier, shielding, fortify, fortify, fortify\n```\nExplanation: The words `shield`, `armor`, `fortify`, `protect`, `defend`, `barrier`, `"}
{"cat": "object", "slot": "material", "value": "plastic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of plastic. \n        Output: ", "result": "\n        apple, banana, chair, desk, door, light, microwave, phone, refrigerator, toaster\n    \"\"\"\n    category = \"object\"\n    condition = \"can be made of plastic\"\n    words = get_words(category, condition)\n"}
{"cat": "object", "slot": "material", "value": "metal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of metal. \n        Output: ", "result": "\n        diamond, iron, gold, silver, copper, tin, lead, aluminum, brass, steel\n    \"\"\"\n    category = \"object\"\n    words = [\"diamond\", \"iron\", \"gold\", \"silver\", \"copper\", \"tin"}
{"cat": "object", "slot": "material", "value": "fibre", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of fibre. \n        Output: ", "result": "\n```\nwool, yarn, fabric, thread, weave, knit, felt, rope, twine\n```"}
{"cat": "object", "slot": "material", "value": "leather", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of leather. \n        Output: ", "result": "\n        sofa, armchair, couch, love seat, chair, ottoman, footstool, pouf, settee, divan\n    \"\"\"\n    leather_words = []\n    for word in category_words:\n        if \"leather\" in word:\n"}
{"cat": "object", "slot": "material", "value": "elastic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of elastic. \n        Output: ", "result": "\n        box, ball, rubber, elastic, band, rope, string, cloth, fabric, material.\n    \"\"\"\n    category = 'object'\n    words = []\n    for word in suggestions:\n        if 'elastic' in word:\n            words.append(word"}
{"cat": "object", "slot": "material", "value": "pearl", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of pearl. \n        Output: ", "result": "\n```\npearl, pearl necklace, pearl earrings, pearl bracelet, pearl ring, pearl and diamond, pearl and gold, pearl and silver, pearl and platinum, pearl and tit"}
{"cat": "object", "slot": "material", "value": "thread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of thread. \n        Output: ", "result": "\n        box, screw, needle, thread, spool, bolt, nut, washer, thimble, spindle\n    \"\"\"\n    category = \"object\"\n    words = [\"box\", \"screw\", \"needle\", \"thread\", \"spool\", \""}
{"cat": "object", "slot": "material", "value": "wood", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of wood. \n        Output: ", "result": "\n        furniture, table, chair, desk, bookshelf, lamp, clock, vase, bowl, picture frame\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"made of wood\" in word:\n            words.append(word)"}
{"cat": "object", "slot": "material", "value": "canvas", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of canvas. \n        Output: ", "result": "10 words that can be made of canvas. \n    \"\"\"\n    canvas_words = [\n        \"canvas\",\n        \"tarp\",\n        \"dropcloth\",\n        \"tarpaulin\",\n        \"canvasbackpack\",\n        \"canvasbag\",\n        \"canvas"}
{"cat": "object", "slot": "material", "value": "fiberglass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of fiberglass. \n        Output: ", "result": "\n        fiberglass, mold, resin, reinforcement, boat, kayak, canoe, paddle, paddleboard, surfboard.\n    \"\"\"\n    category = \"object\"\n    condition = \"can be made of fiberglass\"\n    words = []"}
{"cat": "object", "slot": "material", "value": "polycarbonate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of polycarbonate. \n        Output: ", "result": "10 words that can be made of polycarbonate. \n        \"\"\"\n        words = []\n        for word in Word.objects.all():\n            if word.category == \"object\" and word.material == \"polycarbonate\":\n                words.append(word.name)"}
{"cat": "object", "slot": "material", "value": "steel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of steel. \n        Output: ", "result": "\n```\nsteel, rod, bar, beam, girder, column, plate, tube, angle, structural\n```"}
{"cat": "object", "slot": "material", "value": "grease", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of grease. \n        Output: ", "result": "\n        grease, oil, butter, lard, ghee, margarine, mayonnaise, salad dressing, shortening, cooking spray.\n    \"\"\"\n    category = \"object\"\n    words = [\n        \"grease\",\n        \"oil"}
{"cat": "object", "slot": "material", "value": "glass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of glass. \n        Output: ", "result": "\n        glass, window, pane, vase, bottle, jar, bowl, mirror, cup, goblet. \n        \"\"\"\n        category = \"object\"\n        condition = \"can be made of glass\"\n        words = get_words(category, condition)\n       "}
{"cat": "object", "slot": "colorPattern", "value": "gold", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be gold. \n        Output: ", "result": "\n```\ngold, coin, treasure, mine, nugget, bullion, bar, ingot, coinage, hoard\n```\nExplanation: The words that belong to the category \"object\" and satisfy the condition \"can be gold\" are: gold, coin, tre"}
{"cat": "object", "slot": "part", "value": "canopy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  canopy. \n        Output: ", "result": "\n        canopy, \n        canopy, \n        canopy, \n        canopy, \n        canopy, \n        canopy, \n        canopy, \n        canopy, \n        canopy, \n        canopy, \n        canopy"}
{"cat": "object", "slot": "material", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of silver. \n        Output: ", "result": "\n        diamond, silver, necklace, ring, bracelet, earrings, brooch, pendant, cufflinks, watch\n    \"\"\"\n    category = \"object\"\n    words = [\"diamond\", \"silver\", \"necklace\", \"ring\", \"bracelet"}
{"cat": "object", "slot": "material", "value": "gold", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of gold. \n        Output: ", "result": "\n        diamond, gold, necklace, ring, bracelet, earrings, watch, brooch, pendant, cufflinks\n    \"\"\"\n    category = \"object\"\n    condition = \"can be made of gold\"\n    words = get_words(category, condition)\n"}
{"cat": "object", "slot": "material", "value": "fabric", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of fabric. \n        Output: ", "result": "\n```\nscarf, shirt, dress, pants, skirt, jacket, socks, gloves, hat\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list"}
{"cat": "object", "slot": "material", "value": "cloth", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of cloth. \n        Output: ", "result": "\n```\nscarf, shirt, pants, dress, jacket, socks, gloves, hat, blanket\n```"}
{"cat": "object", "slot": "colorPattern", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be silver. \n        Output: ", "result": "\n        diamond, necklace, ring, bracelet, earrings, watch, brooch, pendant, cufflinks, silver. \n    \"\"\"\n    category = Category.objects.get(name='object')\n    objects = Object.objects.filter(category=category, can"}
{"cat": "object", "slot": "part", "value": "gem", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  gem. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in all_words:\n            if \"gem\" in word:\n                words.append(word)\n        return words\n\ndef get_words_with_number(all_words, number):\n    \"\"\"\n    Given a list of"}
{"cat": "object", "slot": "part", "value": "bracelet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  bracelet. \n        Output: ", "result": " bracelet, watch, ring, necklace, earrings, brooch, cufflinks, pendant, anklet, toe ring. \n    \"\"\"\n    category = \"object\"\n    words = [\"bracelet\", \"watch\", \"ring\", \"necklace\", \"earr"}
{"cat": "object", "slot": "part", "value": "shell", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  shell. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        words = []\n        for word in all_words:\n            if 'shell' in word and 'object' in word:\n                words.append(word)\n        return words\n\n    def get_"}
{"cat": "object", "slot": "material", "value": "gem", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can be made of gem. \n        Output: ", "result": "\n```\ndiamond, emerald, ruby, sapphire, topaz, amethyst, pearl, opal, jade, turquoise\n```"}
{"cat": "object", "slot": "generalization", "value": "device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are device. \n        Output: ", "result": "\n```\nphone,camera,laptop,tablet,printer,speaker,headphones,mouse,keyboard\n```\nExplanation: The words that belong to the category \"object\" and satisfy the condition \"are device\" are \"phone,camera,laptop,tablet,"}
{"cat": "object", "slot": "generalization", "value": "artefact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are artefact. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in ARTEFACT_WORDS:\n            if word.category == \"object\" and word.condition == \"artefact\":\n                words.append(word.word)\n        return \", \".join(words)\n\n    @app"}
{"cat": "object", "slot": "generalization", "value": "covering", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are covering. \n        Output: ", "result": "\n        {\n            \"category\": \"object\",\n            \"condition\": \"are covering\",\n            \"words\": \"table, chair, sofa, bed, rug, curtain, blanket, pillow, quilt, comforter\"\n        }\n        \"\"\"\n        category = \""}
{"cat": "object", "slot": "generalization", "value": "artifact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are artifact. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in ARTIFACT_WORDS:\n            if word.category == \"object\" and word.artifact:\n                words.append(word)\n        return words\n\n    @staticmethod\n    def get_noun_adjective"}
{"cat": "object", "slot": "generalization", "value": "instrumentation", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are instrumentation. \n        Output: ", "result": "\n```\ninstrument,meter,guitar,drum,keyboard,piano,violin,trumpet,saxophone,flute\n```\nExplanation: The words that belong to the category \"instrument\" and satisfy the condition \"are instrumentation\" are \"inst"}
{"cat": "object", "slot": "generalization", "value": "instrumentality", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are instrumentality. \n        Output: ", "result": "\n            1. hammer\n            2. saw\n            3. screwdriver\n            4. wrench\n            5. pliers\n            6. tape measure\n            7. level\n            8. drill\n            9. screw\n            10. nail\n```\n"}
{"cat": "object", "slot": "generalization", "value": "wearable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are wearable. \n        Output: ", "result": "\n```\nwatch, ring, bracelet, necklace, earrings, brooch, cufflinks, sunglasses, belt, scarf\n```"}
{"cat": "object", "slot": "generalization", "value": "consumer goods", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are consumer goods. \n        Output: ", "result": "\n            \n```"}
{"cat": "object", "slot": "generalization", "value": "habiliment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are habiliment. \n        Output: ", "result": "\n```\nhat, coat, scarf, gloves, boots, hat, coat, scarf, gloves, boots\n```"}
{"cat": "object", "slot": "generalization", "value": "furniture", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are furniture. \n        Output: ", "result": "\n        sofa, chair, table, desk, bed, dresser, bookshelf, lamp, rug, coffee table\n    \"\"\"\n    furniture_words = [\"sofa\", \"chair\", \"table\", \"desk\", \"bed\", \"dresser\", \"bookshelf"}
{"cat": "object", "slot": "generalization", "value": "wear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are wear. \n        Output: ", "result": "\n```\nwear, wear, wear, wear, wear, wear, wear, wear, wear, wear\n```"}
{"cat": "object", "slot": "generalization", "value": "clothing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are clothing. \n        Output: ", "result": "\n```\nshirt,pants,dress,jacket,socks,shoes,hat,scarf,tie\n```\nExplanation: The words that belong to the category \"clothing\" and satisfy the condition \"are clothing\" are: shirt, pants,"}
{"cat": "object", "slot": "generalization", "value": "protective covering", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are protective covering. \n        Output: ", "result": "\n        armor, shield, helmet, breastplate, visor, gorget, cuirass, gauntlets, greaves, boots\n    \"\"\"\n    category = \"object\"\n    condition = \"are protective covering\"\n    words = [\n        \"armor\","}
{"cat": "object", "slot": "generalization", "value": "vesture", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are vesture. \n        Output: ", "result": "\n```\ncoat, dress, jacket, shirt, skirt, socks, trousers, vest, waistcoat\n```"}
{"cat": "object", "slot": "generalization", "value": "article of clothing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are article of clothing. \n        Output: ", "result": "\n        shirt, pants, socks, shoes, hat, coat, dress, skirt, scarf, gloves\n    \"\"\"\n    category = \"object\"\n    condition = \"are article of clothing\"\n    words = get_words(category, condition)\n    return"}
{"cat": "object", "slot": "generalization", "value": "equipment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are equipment. \n        Output: ", "result": "\n```\nequipment, drill, hammer, saw, wrench, screwdriver, pliers, tape measure, level\n```\nExplanation: The words that belong to the category \"equipment\" and satisfy the condition \"are equipment\" are \"drill, hammer"}
{"cat": "object", "slot": "generalization", "value": "duplicator", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are duplicator. \n        Output: ", "result": "\n        apple, banana, cherry, date, durian, fig, grape, honeydew, kiwi, mango, melon, nectarine, orange, papaya, peach, pear, plum, raspberry, strawberry, watermel"}
{"cat": "object", "slot": "generalization", "value": "material", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are material. \n        Output: ", "result": "\n        diamond, gold, silver, platinum, pearl, ruby, sapphire, emerald, amethyst, quartz\n    \"\"\"\n    category = \"object\"\n    words = [\"diamond\", \"gold\", \"silver\", \"platinum\","}
{"cat": "object", "slot": "generalization", "value": "setup", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are setup. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for i in range(10):\n            if category == \"object\" and setup == True:\n                words.append(i)\n        return \", \".join(words)\n\n# Test the function\nprint(get_words(category=\"object"}
{"cat": "object", "slot": "generalization", "value": "apparatus", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are apparatus. \n        Output: ", "result": "\n```\napparatus, microscope, telescope, camera, binoculars, microwave, oven, refrigerator, washing machine, vacuum cleaner\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "object", "slot": "generalization", "value": "copier", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are copier. \n        Output: ", "result": "\n```\ncopy, duplicate, replicate, reproduce, mime, facsimile, xerox, photograph, print\n```\nExplanation: The words that belong to the category \"object\" and satisfy the condition \"are copier\" are: copy, duplicate, replicate, reproduce, m"}
{"cat": "object", "slot": "generalization", "value": "container", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are container. \n        Output: ", "result": "\n        box, carton, crate, drum, barrel, can, jar, bottle, case, container\n    \"\"\"\n    category = \"object\"\n    condition = \"are container\"\n    words = []\n    for word in all_words:\n        if word.lower()"}
{"cat": "object", "slot": "generalization", "value": "textile", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are textile. \n        Output: ", "result": "\n```\nwool, silk, cotton, linen, satin, velvet, lace, flannel, chiffon, corduroy\n```\n\n### Example 2:\n```python\nGenerate a list of 10 numbers between 1 and 10"}
{"cat": "object", "slot": "generalization", "value": "scale", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are scale. \n        Output: ", "result": "\n        speed\n        distance\n        weight\n        volume\n        length\n        width\n        height\n        time\n        temperature\n    \"\"\"\n    words = [\"speed\", \"distance\", \"weight\", \"volume\", \"length\", \"width\", \"height\", \"time\", \"temperature\"]\n   "}
{"cat": "object", "slot": "generalization", "value": "source of illumination", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are source of illumination. \n        Output: ", "result": "\n```\nlight, bulb, lamp, illuminate, glow, shine, radiate, emit, beam, and source\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list"}
{"cat": "object", "slot": "generalization", "value": "bed clothing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are bed clothing. \n        Output: ", "result": "\n        bed, clothing, sheet, pillow, blanket, comforter, towel, robe, slipper, pajama \n    \"\"\"\n    category = \"object\"\n    condition = \"are bed clothing\"\n    words = get_words(category, condition)"}
{"cat": "object", "slot": "generalization", "value": "sheet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are sheet. \n        Output: ", "result": "\n        \"\"\"\n        category = Category.objects.get(name='object')\n        words = Word.objects.filter(category=category, is_sheet=True).distinct()\n        return [word.name for word in words]\n\n    def get_random_word_sheet("}
{"cat": "object", "slot": "generalization", "value": "structure", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are structure. \n        Output: ", "result": "\n```\nstructure, organization, hierarchy, component, part, element, building block, constituent, structureless\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n"}
{"cat": "object", "slot": "generalization", "value": "armor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are armor. \n        Output: ", "result": "\n        armor, breastplate, helmet, shield, greaves, cuirass, gauntlets, sword, spear, shield. \n    \"\"\"\n    armor_words = [\"armor\", \"breastplate\", \"helmet\", \"shield\", \"greaves\", \""}
{"cat": "object", "slot": "generalization", "value": "body covering", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are body covering. \n        Output: ", "result": "\n        coat, jacket, sweater, sweatshirt, shirt, blouse, dress, skirt, pants, overcoat \n    \"\"\"\n    category = \"object\"\n    condition = \"are body covering\"\n    words = get_words(category, condition)"}
{"cat": "object", "slot": "generalization", "value": "stuff", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are stuff. \n        Output: ", "result": "\n```\nstuff, thing, object, thingy, thingamajig, thingamabob, thingummy, thingamajiggy, thingamabobby, thingamabobbiness\n```\n\n```python\nProvide a list of 10 words that belong to"}
{"cat": "object", "slot": "generalization", "value": "trade good", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are trade good. \n        Output: ", "result": "\n```\ntrade, goods, trade, goods, trade, goods, trade, goods, trade, goods, trade, goods\n```"}
{"cat": "object", "slot": "generalization", "value": "shield", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are shield. \n        Output: ", "result": "\n```\nshield,shields,shielding,shielded,shielding,shielded,shield,shielded,shield,shielded,shield\n```\n\n```python\nProvide a list of 10 words that belong to the category"}
{"cat": "object", "slot": "generalization", "value": "armour plate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are armour plate. \n        Output: ", "result": "\n```\nplate, armor, armour, shield, breastplate, cuirass, helmet, greaves, gauntlets,\n```\nExplanation: The words that belong to the category \"armour plate\" and satisfy the condition \"are armour plate\" are: plate, arm"}
{"cat": "object", "slot": "generalization", "value": "writing paper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are writing paper. \n        Output: ", "result": "\n        writing\n        pen\n        paper\n        ink\n        desk\n        computer\n        keyboard\n        printer\n        scanner\n        \"\"\"\n        category = \"object\"\n        words = [\"writing\", \"pen\", \"paper\", \"ink\", \"desk\", \"computer\","}
{"cat": "object", "slot": "generalization", "value": "printing machine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are printing machine. \n        Output: ", "result": "1. Ink, 2. Cartridge, 3. Ribbon, 4. Toner, 5. Drum, 6. Printhead, 7. Paper, 8. Platen, 9. Feed, 10. Motor.\n    \"\"\"\n   "}
{"cat": "object", "slot": "generalization", "value": "construction", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are construction. \n        Output: ", "result": "\n```\nconst { Category, Condition } = require('./category-condition');\n\nconst words = [\n  'house',\n  'car',\n  'computer',\n  'table',\n  'chair',\n  'desk',\n  'book',\n "}
{"cat": "object", "slot": "generalization", "value": "armour", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are armour. \n        Output: ", "result": "\n        armour, breastplate, helmet, shield, greaves, cuirass, gauntlets, sword, spear, axe\n    \"\"\"\n    category = \"object\"\n    armour_words = [\"armour\", \"breastplate\", \"helmet\", \"shield"}
{"cat": "object", "slot": "generalization", "value": "armor plating", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are armor plating. \n        Output: ", "result": "\n        armor, plating, armorplate, armorplating, armour, plating, armourplate, armorplate, armourplate, armourplating.\n    \"\"\"\n    armor_plating_words = [word for word in category if word.endswith"}
{"cat": "object", "slot": "generalization", "value": "printer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are printer. \n        Output: ", "result": "\n```\nprinter, ink, cartridge, toner, paper, print, document, page, feed, jam\n```\nExplanation: The word `printer` belongs to the category of objects and satisfies the condition of being a printer. The other words in the list also satisfy the condition"}
{"cat": "object", "slot": "generalization", "value": "bedding", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are bedding. \n        Output: ", "result": "\n        Sheets, Pillow, Pillowcase, Comforter, Quilt, Blanket, Bedspread, Bedskirt, Mattress cover, Pillow sham\n    \"\"\"\n    category = \"object\"\n    condition = \"are bedding\"\n   "}
{"cat": "object", "slot": "generalization", "value": "plate armour", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are plate armour. \n        Output: ", "result": "\n        armour, breastplate, cuirass, gauntlets, greaves, helmet, pauldrons, sabatons, tasset, vambrace\n    \"\"\"\n    category = \"object\"\n    condition = \"are plate armour\"\n    words = []\n   "}
{"cat": "object", "slot": "generalization", "value": "garment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are garment. \n        Output: ", "result": "\n```\nshirt,pants,dress,jacket,skirt,shoes,socks,hat,scarf\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma"}
{"cat": "object", "slot": "generalization", "value": "bedclothes", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are bedclothes. \n        Output: ", "result": "\n        bedclothes, blanket, comforter, duvet, fitted sheet, flat sheet, pillow, pillowcase, quilt, bedspread.\n    \"\"\"\n    category = \"object\"\n    condition = \"are bedclothes\"\n    words = []\n"}
{"cat": "object", "slot": "generalization", "value": "paper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are paper. \n        Output: ", "result": "\n        books,pencils,notebooks,eraser,ruler,calculator,textbook,paintbrush,canvas,paint\n```\n\n```\nDesired output: \nbooks,pencils,notebooks,eraser,ruler,calculator,"}
{"cat": "object", "slot": "generalization", "value": "plate armor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are plate armor. \n        Output: ", "result": "\n        armor, breastplate, cuirass, gauntlets, greaves, helmet, pauldrons, sabatons, vambraces, visor\n    \"\"\"\n    category = \"object\"\n    condition = \"are plate armor\"\n    words = []\n"}
{"cat": "object", "slot": "generalization", "value": "good", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are good. \n        Output: ", "result": "\n```\ngood\nobject\ncondition\ndesired\nsatisfy\ncategory\nlist\ncomma\nseparated\n```\n\n```\n1. \n2. \n3. \n4. \n5. \n6. \n7. \n8. \n9"}
{"cat": "object", "slot": "generalization", "value": "cloth covering", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are cloth covering. \n        Output: ", "result": "\n            \n```"}
{"cat": "object", "slot": "generalization", "value": "commodity", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are commodity. \n        Output: ", "result": "\n            1. Apple\n            2. Banana\n            3. Car\n            4. Desk\n            5. House\n            6. iPhone\n            7. Laptop\n            8. Microwave\n            9. Pencil\n            10. Television\n        \"\"\"\n        words"}
{"cat": "object", "slot": "generalization", "value": "mechanism", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are mechanism. \n        Output: ", "result": "\n```\nmechanism, mechanism, mechanism, mechanism, mechanism, mechanism, mechanism, mechanism, mechanism, mechanism\n```"}
{"cat": "object", "slot": "generalization", "value": "armor plate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are armor plate. \n        Output: ", "result": "\n```\nplate, armor, shield, breastplate, helmet, greaves, gauntlets, cuirass,\n```\n1. Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words."}
{"cat": "object", "slot": "generalization", "value": "flat solid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are flat solid. \n        Output: ", "result": "\n        round, square, rectangle, cube, flat, solid, disk, cylinder, cone, pyramid\n    \"\"\"\n    category = \"object\"\n    words = [\"round\", \"square\", \"rectangle\", \"cube\", \"flat\", \"solid\", \"disk\", \"cy"}
{"cat": "object", "slot": "generalization", "value": "character printer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are character printer. \n        Output: ", "result": "\n```\nprinter, inkjet, laser, dot matrix, bubble jet, thermal, ink cartridge, toner cartridge, ribbon, page\n```\nExplanation:\nThe words that belong to the category \"object\" and satisfy the condition \"are character printer\" are"}
{"cat": "object", "slot": "generalization", "value": "scute", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are scute. \n        Output: ", "result": "\n        \"\"\"\n        scute_words = [\"scute\"]\n        return \", \".join(scute_words)\n\n    @classmethod\n    def from_string(cls, string):\n        \"\"\"\n        Given a string in the format \"word1, word2, word3\","}
{"cat": "object", "slot": "generalization", "value": "mechanical device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are mechanical device. \n        Output: ", "result": "\n            1. screw\n            2. nut\n            3. bolt\n            4. washer\n            5. screwdriver\n            6. wrench\n            7. hinge\n            8. gear\n            9. pulley\n            10. crank\n```\n"}
{"cat": "object", "slot": "generalization", "value": "serial printer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are serial printer. \n        Output: ", "result": "10 words that are serial printers. \n        \"\"\"\n        category = \"object\"\n        condition = \"are serial printer.\"\n        words = get_words(category, condition)\n        serial_printer_words = [word for word in words if word.endswith(\".serial."}
{"cat": "object", "slot": "generalization", "value": "optical device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are optical device. \n        Output: ", "result": "\n            \n```"}
{"cat": "object", "slot": "generalization", "value": "plate", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are plate. \n        Output: ", "result": "\n```\nplate, dish, bowl, mug, cup, spoon, fork, knife, silverware, china\n```"}
{"cat": "object", "slot": "generalization", "value": "reflector", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are reflector. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in all_words:\n            if \"reflector\" in word and \"object\" in word:\n                words.append(word)\n        return \", \".join(words)\n\ndef get_category(word):\n    \"\"\"\n   "}
{"cat": "object", "slot": "generalization", "value": "character-at-a-time printer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are character-at-a-time printer. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for i in range(10):\n            word = input(\"Enter a word: \")\n            words.append(word)\n            if len(words) == 10:\n                break\n        print(\", \".join(words))\n```\n"}
{"cat": "object", "slot": "generalization", "value": "headgear", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are headgear. \n        Output: ", "result": "\n```\nhat, cap, helmet, visor, beanie, beret, toque, turban, bandana, skullcap\n```\nExplanation: The words that belong to the category \"object\" and satisfy the condition \"are headgear\" are: hat, cap,"}
{"cat": "object", "slot": "generalization", "value": "simple machine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are simple machine. \n        Output: ", "result": "\n        wheel, pulley, inclined plane, wedge, screw, lever, wheel and axle, pulley, wedge, inclined plane, screw, lever, wheel and axle, pulley, wedge, inclined plane, screw, lever, wheel and axle,"}
{"cat": "object", "slot": "generalization", "value": "ornament", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are ornament. \n        Output: ", "result": "\n        diamond, earrings, necklace, bracelet, ring, brooch, pendant, cufflinks, watch, tie clip.\n    \"\"\"\n    ornament_words = [\"diamond\", \"earrings\", \"necklace\", \"bracelet\", \"ring\","}
{"cat": "object", "slot": "generalization", "value": "adornment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are adornment. \n        Output: ", "result": "\n        diamond, earring, necklace, ring, bracelet, brooch, tiara, anklet, bangle, cuff.\n    \"\"\"\n    category = \"object\"\n    condition = \"are adornment\"\n    words = get_words(category, condition"}
{"cat": "object", "slot": "generalization", "value": "decoration", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are decoration. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in Word.objects.all():\n            if word.category == \"object\" and word.decoration:\n                words.append(word.word)\n        return words\n\n    def get_nouns(self):\n        \"\"\""}
{"cat": "object", "slot": "generalization", "value": "implement", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are implement. \n        Output: ", "result": "\n```\nimplement, implement, implement, implement, implement, implement, implement, implement, implement, implement\n```"}
{"cat": "object", "slot": "generalization", "value": "utensil", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are utensil. \n        Output: ", "result": "\n            fork, spoon, knife, plate, bowl, cup, spatula, ladle, tongs, fork\\_tine\n        \"\"\"\n        category = Category.objects.get(name='utensil')\n        words = Word.objects.filter(category=category,"}
{"cat": "object", "slot": "generalization", "value": "tool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are tool. \n        Output: ", "result": "\n```\nhammer, screwdriver, wrench, pliers, saw, chisel, hatchet, drill, ruler, tape measure\n```\nExplanation: The words that belong to the category \"object\" and satisfy the condition \"are tool\" are hammer,"}
{"cat": "object", "slot": "generalization", "value": "ornamentation", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are ornamentation. \n        Output: ", "result": "\n        \"\"\"\n        ornamentation_words = [\"jewelry\", \"embellishment\", \"decoration\", \"ornament\", \"accessory\", \"bling\", \"trinket\", \"amulet\", \"talisman\", \"pendant\"]\n        return ornamentation_words"}
{"cat": "object", "slot": "generalization", "value": "accessory", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are accessory. \n        Output: ", "result": "\n```\nearrings, necklace, bracelet, watch, ring, brooch, cufflinks, belt, sunglasses, scarf\n```"}
{"cat": "object", "slot": "generalization", "value": "whole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are whole. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, kiwi, melon, orange, peach\n    \"\"\"\n    fruits = [\"apple\", \"banana\", \"cherry\", \"date\", \"fig\", \"grape\", \"kiwi\", \"melon\","}
{"cat": "object", "slot": "generalization", "value": "machine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are machine. \n        Output: ", "result": "\n        machine,computer,processor,hardware,software,network,system,device,technology,equipment\n    \"\"\"\n    category = \"object\"\n    words = [\"machine\", \"computer\", \"processor\", \"hardware\", \"software\", \"network\", \"system\", \""}
{"cat": "object", "slot": "generalization", "value": "unit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are unit. \n        Output: ", "result": "1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n    \"\"\"\n    category = \"object\"\n    words = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\","}
{"cat": "object", "slot": "generalization", "value": "headdress", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are headdress. \n        Output: ", "result": "\n```\nhat, feather, crown, tiara, turban, headdress, headpiece, headband, headband, headband\n```"}
{"cat": "object", "slot": "generalization", "value": "protective cover", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are protective cover. \n        Output: ", "result": "\n        armor, shield, helmet, breastplate, visor, gorget, cuirass, greaves, gauntlets, gorget.\n    \"\"\"\n    category = \"object\"\n    condition = \"are protective cover\"\n    words = []\n    for word"}
{"cat": "object", "slot": "generalization", "value": "jewelry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are jewelry. \n        Output: ", "result": "\n        diamond, earrings, necklace, ring, bracelet, pearl, watch, brooch, cufflinks, tiara\n    \"\"\"\n    jewelry_words = [\"diamond\", \"earrings\", \"necklace\", \"ring\", \""}
{"cat": "object", "slot": "generalization", "value": "protection", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are protection. \n        Output: ", "result": "\n        protection,shield,defend,fortress,safeguard,shielding,defend,fortress,safeguard,shielding\n    \"\"\"\n    category = \"object\"\n    condition = \"are protection\"\n    words = []\n    for word in"}
{"cat": "object", "slot": "part", "value": "glass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: can have  glass. \n        Output: ", "result": " glass, mirror, window, pane, frame, shutter, sunglasses, lens, prism, kaleidoscope\n    \"\"\"\n    category = 'object'\n    words = []\n    for word in suggestions:\n        if 'glass' in word:\n            words."}
{"cat": "object", "slot": "generalization", "value": "shade", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are shade. \n        Output: ", "result": "\n        apple, banana, cherry, orange, pear, plum, strawberry, watermelon, blueberry, raspberry\n    \"\"\"\n    category = \"object\"\n    condition = \"are shade\"\n    words = get_words(category, condition)"}
{"cat": "object", "slot": "generalization", "value": "shell", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are shell. \n        Output: ", "result": "\n        \"\"\"\n        shell_words = [\"cat\", \"echo\", \"find\", \"grep\", \"ls\", \"man\", \"rm\", \"touch\", \"wget\"]\n        shell_words = [word for word in shell_words if word.startswith(\"sh\")]\n        return \", \"."}
{"cat": "object", "slot": "generalization", "value": "shelter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are shelter. \n        Output: ", "result": "\n```\nhouse, apartment, condo, cabin, cottage, bungalow, mansion, castle, shack, hut\n```\nExplanation: The words that belong to the category \"object\" and satisfy the condition \"are shelter\" are \"house, apartment,"}
{"cat": "object", "slot": "generalization", "value": "fabric", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are fabric. \n        Output: ", "result": "\n```\nscarf, shawl, stole, wrap, kerchief, pashmina, shawl, stole, scarf, kerchief\n```"}
{"cat": "object", "slot": "generalization", "value": "cloth", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are cloth. \n        Output: ", "result": "\n```\nscarf, shirt, jacket, pants, socks, gloves, hat, dress, skirt, coat\n```\nExplanation: The words that belong to the category \"cloth\" and satisfy the condition \"are cloth\" are scarf, shirt, jacket"}
{"cat": "object", "slot": "generalization", "value": "canopy", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: object. \n        Condition: are canopy. \n        Output: ", "result": "\n```\ncanopy, canopy, canopy, canopy, canopy, canopy, canopy, canopy, canopy\n```"}
{"cat": "tool", "slot": "user", "value": "sailor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used by sailors. \n        Output: ", "result": "\n        knife, spoon, fork, compass, sextant, anchor, rope, oar, harpoon, marlinspike.\n    \"\"\"\n    category = \"tool\"\n    words = [\"knife\", \"spoon\", \"fork\", \"compass\","}
{"cat": "tool", "slot": "user", "value": "farmer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used by farmers. \n        Output: ", "result": "\n        hammer, screwdriver, pliers, wrench, saw, trowel, shovel, rake, hoe, pruning shears\n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"screwdriver\", \"pliers\", \""}
{"cat": "tool", "slot": "size", "value": "small", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be small. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, drill, ruler, tape measure, level, pencil. \n    \"\"\"\n    tool_words = [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw"}
{"cat": "tool", "slot": "howToUse", "value": "hold", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be or be used for hold. \n        Output: ", "result": "\n        screwdriver, hammer, wrench, pliers, saw, tape, glue, screw, nail, drill\n    \"\"\"\n    tool_words = [\"screwdriver\", \"hammer\", \"wrench\", \"pliers\", \"saw\", \"ta"}
{"cat": "tool", "slot": "howToUse", "value": "stand up", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be or be used for stand up. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, tape measure, level, drill, ruler, scissors\n    \"\"\"\n    category = \"tool\"\n    condition = \"can be or be used for stand up.\"\n    words = []\n    for"}
{"cat": "tool", "slot": "place", "value": "kitchen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be found or used in kitchens. \n        Output: ", "result": "\n        knife, spoon, fork, cutting board, pot, pan, mixing bowl, spatula, whisk, slotted spoon \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"kitchen\" in word and \"tool\" in"}
{"cat": "tool", "slot": "accessory", "value": "toolbox", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: may have to do with toolbox. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, tape measure, level, socket set, adjustable wrench, ruler.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "tool", "slot": "place", "value": "shed", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be found or used in sheds. \n        Output: ", "result": "\n            1. hammer\n            2. saw\n            3. screwdriver\n            4. wrench\n            5. pliers\n            6. tape measure\n            7. level\n            8. drill\n            9. sandpaper\n            10. tape\n```\n"}
{"cat": "tool", "slot": "place", "value": "garden", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be found or used in gardens. \n        Output: ", "result": "\n            1. rake\n            2. shovel\n            3. trowel\n            4. watering can\n            5. pruning shears\n            6. hoe\n            7. wheelbarrow\n            8. trowel\n            9. watering can\n            "}
{"cat": "tool", "slot": "accessory", "value": "screwdriver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: may have to do with screwdriver. \n        Output: ", "result": "\n        screwdriver,screw,driver,screwdriver,screw,driver,screwdriver,screw,driver,screwdriver,screw,driver,screwdriver,screw,driver,screwdriver,screw"}
{"cat": "tool", "slot": "accessory", "value": "rod", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: may have to do with rod. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, screw.\n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\","}
{"cat": "tool", "slot": "accessory", "value": "knob", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: may have to do with knob. \n        Output: ", "result": "\n        screwdriver\n        wrench\n        hammer\n        pliers\n        saw\n        chisel\n        drill\n        tape measure\n        level\n        ruler\n    \"\"\"\n    tool_words = [\"screwdriver\", \"wrench\", \"hammer\","}
{"cat": "tool", "slot": "accessory", "value": "bolt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: may have to do with bolt. \n        Output: ", "result": "\n```\nscrewdriver, wrench, bolt, nut, washer, socket, ratchet, hammer, pliers, screw\n```\nExplanation: The word `screwdriver` belongs to the category `tool` and may have to do with a `bol"}
{"cat": "tool", "slot": "accessory", "value": "staple", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: may have to do with staple. \n        Output: ", "result": "\n        staple, stapler, staples, stapling, stapleless, stapleless stapler, stapleless staples, stapleless stapling, staple gun, staple gunner, staple gunner'"}
{"cat": "tool", "slot": "place", "value": "hairdresser", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be found or used in hairdressers. \n        Output: ", "result": "\n        scissors, comb, hair dryer, hair straightener, hair clips, hair gel, hair dye, hair brush, hair cutter, hair curler\n    \"\"\"\n    category = \"tool\"\n    condition = \"can be found or used in hairdressers\""}
{"cat": "tool", "slot": "place", "value": "laboratory", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be found or used in laboratories. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, ruler, tape measure, pliers, saw, drill, soldering iron, test tube rack.\n    \"\"\"\n    lab_tools = [\"hammer\", \"screwdriver\", \"wrench\", \"ruler"}
{"cat": "tool", "slot": "purpose", "value": "build", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used to build. \n        Output: ", "result": "\n```\nhammer, saw, nail, screwdriver, wrench, pliers, level, tape measure, drill, crowbar\n```\n\n### Example 2:\n```python\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "tool", "slot": "purpose", "value": "cooking", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used for cooking. \n        Output: ", "result": "\n        knife, spoon, pan, pot, grill, oven, frying pan, cutting board, spatula, wok\n    \"\"\"\n    cooking_words = [\"knife\", \"spoon\", \"pan\", \"pot\", \"grill\", \"oven\", \""}
{"cat": "tool", "slot": "purpose", "value": "agriculture", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used for agriculture. \n        Output: ", "result": "\n        plow, cultivator, seed, fertilizer, irrigation, harvester, tractor, planter, tiller, hoe\n    \"\"\"\n    category = \"tool\"\n    condition = \"are used for agriculture\"\n    words = get_words(category,"}
{"cat": "tool", "slot": "purpose", "value": "weeding", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used for weeding. \n        Output: ", "result": "\n```\nsickle, scythe, hoe, rake, cultivator, trowel, pruning, shears, clippers,\n```\n1. Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "tool", "slot": "purpose", "value": "lock", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used to lock. \n        Output: ", "result": "\n```\nhammer, screwdriver, lock, padlock, chains, shackle, bolt, deadbolt, latch, hasp\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "tool", "slot": "purpose", "value": "tighten", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used to tighten. \n        Output: ", "result": "\n```\nscrew, bolt, nut, washer, screwdriver, wrench, bolt\n```"}
{"cat": "tool", "slot": "purpose", "value": "dock", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used to dock. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, chisel, drill, ruler, tape measure, level.\n    \"\"\"\n    tool_words = [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\","}
{"cat": "tool", "slot": "purpose", "value": "cut", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used to cut. \n        Output: ", "result": "\n```\nscissors, knife, saw, axe, cutter, shears, scalpel, guillotine, chisel, drill\n```\nExplanation: The words `scissors`, `knife`, `saw`, `axe`, `cutter"}
{"cat": "tool", "slot": "purpose", "value": "grip", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used to grip. \n        Output: ", "result": "\n        screwdriver\n        wrench\n        pliers\n        hammer\n        chisel\n        saw\n        drill\n        tap\n        ruler\n        level\n    \"\"\"\n    category = \"tool\"\n    words = [\"screwdriver\", \"wrench\", \""}
{"cat": "tool", "slot": "purpose", "value": "serve", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used to serve. \n        Output: ", "result": "\n            hammer, screwdriver, wrench, pliers, saw, tape, glue, scissors, ruler, pencil\n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"screwdriver\", \"wrench\", \"pliers"}
{"cat": "tool", "slot": "purpose", "value": "secure", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: None secure. \n        Output: ", "result": "\n```\nwrench, screwdriver, hammer, pliers, saw, tape, glue, wrench, screwdriver, hammer, pliers, saw, tape, glue, wrench, screwdriver, hammer, pliers, saw, tape, gl"}
{"cat": "tool", "slot": "purpose", "value": "moor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used to moor. \n        Output: ", "result": "\n        hammer, nail, screwdriver, pliers, wrench, saw, drill, hinge, bolt, screw.\n    \"\"\"\n    category = \"tool\"\n    words = [\n        \"hammer\",\n        \"nail\",\n        \"scre"}
{"cat": "tool", "slot": "purpose", "value": "clamp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used to clamp. \n        Output: ", "result": "\n        wrench, pliers, clamp, vice, screwdriver, hammer, saw, drill, tape measure, level.\n    \"\"\"\n    tool_words = [\"wrench\", \"pliers\", \"clamp\", \"vice\", \"screwdriver\", \"hammer"}
{"cat": "tool", "slot": "purpose", "value": "pick up", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used to pick up. \n        Output: ", "result": "\n        hammer, wrench, pliers, screwdriver, tongs, shovel, fork, spoon, tweezers, scissors\n    \"\"\"\n    category = \"tool\"\n    condition = \"are used to pick up\"\n    words = []\n    for word"}
{"cat": "tool", "slot": "purpose", "value": "secure", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used to secure. \n        Output: ", "result": "\n```\nhammer, screwdriver, nail, bolt, hinge, staple, zip, tie, clamp, nut\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output"}
{"cat": "tool", "slot": "purpose", "value": "fasten", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used for fasten. \n        Output: ", "result": "\n```\nscrew, bolt, nail, screwdriver, nut, washer, hinge, hinge pin, rivet, bolt\n```"}
{"cat": "tool", "slot": "purpose", "value": "dig", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used to dig. \n        Output: ", "result": "\n```\nshovel, spade, pickaxe, hoe, trowel, mattock, crowbar, fork, rake, spatula\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category"}
{"cat": "tool", "slot": "purpose", "value": "clamp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are used for clamp. \n        Output: ", "result": "1. Clamp, 2. Pliers, 3. Wrench, 4. Screwdriver, 5. Hammer, 6. Nut, 7. Bolt, 8. Saw, 9. Drill, 10. Chisel.\n"}
{"cat": "tool", "slot": "accessory", "value": "screw", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: may have to do with screw. \n        Output: ", "result": "\n        screwdriver,screw,screwdriver,screw,screwdriver,screw,screwdriver,screw,screwdriver,screw,screwdriver,screw,screwdriver,screw,"}
{"cat": "tool", "slot": "shape", "value": "elongated", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be elongated. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, tape measure, level, drill, ruler, scissors.\n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers"}
{"cat": "tool", "slot": "shape", "value": "long", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be long. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, tape measure, level, drill, socket set, ruler\n    \"\"\"\n    category = \"tool\"\n    condition = \"can be long\"\n    words = get_words(category, condition)\n   "}
{"cat": "tool", "slot": "shape", "value": "curved", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be curved. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, tape measure, level, drill, ruler, scissors.\n    \"\"\"\n    tool_words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\", \"saw\","}
{"cat": "tool", "slot": "shape", "value": "triangular", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be triangular. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, tape measure, level, drill, ruler, scissors\n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\","}
{"cat": "tool", "slot": "shape", "value": "cylindrical", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be cylindrical. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, pencil.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "tool", "slot": "part", "value": "handle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  handle. \n        Output: ", "result": " wrench, hammer, screwdriver, pliers, saw, tape, glue, screw, nail, punch. \n    \"\"\"\n    category = \"tool\"\n    words = [\"wrench\", \"hammer\", \"screwdriver\", \"pliers\", \""}
{"cat": "tool", "slot": "part", "value": "blade", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  blade. \n        Output: ", "result": " knife, saw, hammer, wrench, pliers, screwdriver, chisel, drill, screw, punch. \n    \"\"\"\n    category = \"tool\"\n    words = [\"knife\", \"saw\", \"hammer\", \"wrench\", \"p"}
{"cat": "tool", "slot": "part", "value": "head", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  head. \n        Output: ", "result": " hammer, wrench, screwdriver, pliers, saw, chisel, drill, ruler, tape measure, level.\n    \"\"\"\n    words = []\n    for word in words:\n        if \"head\" in word:\n            words.append(word)\n"}
{"cat": "tool", "slot": "part", "value": "edge", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  edge. \n        Output: ", "result": " hammer, screwdriver, wrench, pliers, saw, chisel, drill, ruler, level, tape measure.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"can\" in word and \"have\" in word and \""}
{"cat": "tool", "slot": "part", "value": "shank", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  shank. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, punch.\n    \"\"\"\n    tool_words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\", \"saw\", \""}
{"cat": "tool", "slot": "part", "value": "slot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  slot. \n        Output: ", "result": "\n```\nhammer, wrench, screwdriver, pliers, saw, tape measure, level, drill, socket set, ruler\n```\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "tool", "slot": "part", "value": "thread", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  thread. \n        Output: ", "result": "\n        hammer,screwdriver,wrench,pliers,saw,drill,tap,socket,wrench,pliers\n```\n\n```\nDescribe a category and provide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "tool", "slot": "part", "value": "pinhead", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  pinhead. \n        Output: ", "result": " wrench, pinhead, screwdriver, hammer, pliers, saw, tape, glue, screw, nail \n    \"\"\"\n    category = \"tool\"\n    words = [\"wrench\", \"pinhead\", \"screwdriver\", \"hammer\", \"p"}
{"cat": "tool", "slot": "part", "value": "stem", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  stem. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, screw, nail, tape, glue\n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\", \""}
{"cat": "tool", "slot": "part", "value": "fluke", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  fluke. \n        Output: ", "result": "\n            hammer, wrench, screwdriver, pliers, saw, drill, tape measure, ruler, level, fluke\n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\", \""}
{"cat": "tool", "slot": "part", "value": "rake handle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  rake handle. \n        Output: ", "result": " hammer, wrench, screwdriver, pliers, saw, chisel, ruler, level, tape measure, punch.\n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\", \""}
{"cat": "tool", "slot": "part", "value": "razorblade", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  razorblade. \n        Output: ", "result": "\n            hammer,screwdriver,wrench,pliers,saw,chisel,sandpaper,razorblade,tweezers,paintbrush\n\"\"\"\n\n# Define the function\ndef get_tool_words(category, condition):\n    #"}
{"cat": "tool", "slot": "part", "value": "clinch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  clinch. \n        Output: ", "result": "\n```\nwrench, hammer, screwdriver, pliers, saw, tape, glue, nail, drill, clinch\n```"}
{"cat": "tool", "slot": "part", "value": "hammerhead", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  hammerhead. \n        Output: ", "result": "\n```\nhammerhead, wrench, screwdriver, pliers, saw, drill, hose, socket, ruler, level\n```\nExplanation: The word `hammerhead` belongs to the category `tool` and can be included in the list of 10 words"}
{"cat": "tool", "slot": "part", "value": "ring", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  ring. \n        Output: ", "result": " hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, pencil. \n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\","}
{"cat": "tool", "slot": "part", "value": "hoe handle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  hoe handle. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, chisel, drill, ruler, level, tape measure.\n    \"\"\"\n    tool_words = [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\","}
{"cat": "tool", "slot": "part", "value": "stock", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  stock. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, socket set.\n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\","}
{"cat": "tool", "slot": "part", "value": "point", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  point. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, pencil. \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"point\" in word:\n            words."}
{"cat": "tool", "slot": "part", "value": "arm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can have  arm. \n        Output: ", "result": " wrench, hammer, screwdriver, pliers, saw, tape, glue, screw, nail, drill\n    \"\"\"\n    category = \"tool\"\n    words = [\"wrench\", \"hammer\", \"screwdriver\", \"pliers\", \"saw"}
{"cat": "tool", "slot": "material", "value": "metal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be made of metal. \n        Output: ", "result": "\n```\nhammer, wrench, screwdriver, pliers, saw, drill, hatchet, chisel, punch\n```"}
{"cat": "tool", "slot": "material", "value": "steel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be made of steel. \n        Output: ", "result": "\n```\nhammer, wrench, screwdriver, pliers, saw, drill, hatchet, chisel, punch\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition."}
{"cat": "tool", "slot": "material", "value": "plastic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be made of plastic. \n        Output: ", "result": "\n            hammer, wrench, screwdriver, pliers, saw, tape measure, level, drill, ruler, pencil.\n    \"\"\"\n    category = \"tool\"\n    condition = \"can be made of plastic\"\n    words = get_words(category"}
{"cat": "tool", "slot": "material", "value": "iron", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be made of iron. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, hatchet, chisel, punch, file\n    \"\"\"\n    category = \"tool\"\n    iron_words = [\"hammer\", \"wrench\", \"screwdriver\", \"p"}
{"cat": "tool", "slot": "material", "value": "wood", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be made of wood. \n        Output: ", "result": "\n        hammer, saw, screwdriver, pliers, wrench, ruler, level, tape measure, drill, chisel\n    \"\"\"\n    category = \"tool\"\n    condition = \"can be made of wood\"\n    words = get_words(category, condition"}
{"cat": "tool", "slot": "colorPattern", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be silver. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, scissors.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "tool", "slot": "colorPattern", "value": "silver", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be silver. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, scissors.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "tool", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be brown. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, pencil. \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "tool", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be brown. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, pencil. \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "tool", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be black. \n        Output: ", "result": "\n```\nhammer, wrench, screwdriver, pliers, saw, drill, hatchet, chisel, screw, nail\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "tool", "slot": "colorPattern", "value": "black", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be black. \n        Output: ", "result": "\n```\nhammer, wrench, screwdriver, pliers, saw, drill, hatchet, chisel, screw, nail\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy"}
{"cat": "tool", "slot": "colorPattern", "value": "golden", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: can be golden. \n        Output: ", "result": "\n```\ngolden, hammer, wrench, screwdriver, pliers, saw, drill, ruler, tape measure, level\n```\nExplanation: The words that belong to the category \"tool\" and satisfy the condition \"can be golden\" are \"golden"}
{"cat": "tool", "slot": "accessory", "value": "fastener", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: may have to do with fastener. \n        Output: ", "result": "\n        screw, bolt, nut, washer, wrench, socket, ratchet, hammer, pliers, wrench\n    \"\"\"\n    category = \"tool\"\n    words = [\"screw\", \"bolt\", \"nut\", \"washer\", \"wrench"}
{"cat": "tool", "slot": "generalization", "value": "fixing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are fixing. \n        Output: ", "result": "\n```\nwrench, hammer, pliers, screwdriver, saw, tape, glue, nails, screws, hinges\n```\nExplanation: The words that belong to the category \"tools\" and satisfy the condition \"are fixing\" are: wrench,"}
{"cat": "tool", "slot": "generalization", "value": "fastening", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are fastening. \n        Output: ", "result": "\n```\nscrew, nail, bolt, screwdriver, hammer, nuts, bolts, wrench, pliers, drill\n```\nExplanation:\nThe words that belong to the category \"tool\" and satisfy the condition \"are fastening\" are: sc"}
{"cat": "tool", "slot": "generalization", "value": "edge tool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are edge tool. \n        Output: ", "result": "\n        screwdriver\n        wrench\n        pliers\n        hammer\n        saw\n        chisel\n        drill\n        crowbar\n        tape measure\n        level\n    \"\"\"\n    edge_tools = [\"screwdriver\", \"wrench\", \"pliers\","}
{"cat": "tool", "slot": "generalization", "value": "holdfast", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are holdfast. \n        Output: ", "result": "\n    \"\"\"\n    category = \"tool\"\n    condition = \"are holdfast\"\n    words = [\"wrench\", \"screwdriver\", \"hammer\", \"pliers\", \"saw\", \"measuring_tape\", \"utility_knife\", \"paint_"}
{"cat": "tool", "slot": "generalization", "value": "compound lever", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are compound lever. \n        Output: ", "result": "\n        screwdriver, wrench, pliers, hammer, saw, drill, ruler, level, tape measure, pencil.\n    \"\"\"\n    category = \"tool\"\n    words = [\"screwdriver\", \"wrench\", \"pliers\", \"hammer"}
{"cat": "tool", "slot": "generalization", "value": "mechanism", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are mechanism. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, pencil. \n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n   "}
{"cat": "tool", "slot": "generalization", "value": "cutting implement", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are cutting implement. \n        Output: ", "result": "\n```\nscissors, knife, saw, axe, hatchet, chisel, pliers, wrench, hammer, drill\n```\n\n### Example 2:\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "tool", "slot": "generalization", "value": "simple machine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are simple machine. \n        Output: ", "result": "\n            hammer, wrench, screwdriver, pliers, saw, drill, ruler, tape measure, level.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = get_words(category, condition)"}
{"cat": "tool", "slot": "generalization", "value": "lever", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are lever. \n        Output: ", "result": "\n            hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, scissors\n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\","}
{"cat": "tool", "slot": "generalization", "value": "machine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are machine. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, socket, ruler, tape measure, level.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "tool", "slot": "generalization", "value": "knife", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are knife. \n        Output: ", "result": "\n        scissors, knife, saw, hammer, wrench, pliers, chisel, drill, screwdriver, punch.\n    \"\"\"\n    category = \"tool\"\n    condition = \"are knife\"\n    words = get_words(category, condition"}
{"cat": "tool", "slot": "generalization", "value": "impedimenta", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are impedimenta. \n        Output: ", "result": "\n```\nhammer, wrench, screwdriver, pliers, saw, tape measure, level, drill, socket set, ruler\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired"}
{"cat": "tool", "slot": "generalization", "value": "connexion", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are connexion. \n        Output: ", "result": "\n```\nconnexion,connexion,connexion,connexion,connexion,connexion,connexion,connexion,connexion,connexion,connexion,connexion,connexion,connexion,connexion,conne"}
{"cat": "tool", "slot": "generalization", "value": "bond", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are bond. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, tape measure, level, ruler, scissors\n    \"\"\"\n    bond_words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\", \"saw\", \""}
{"cat": "tool", "slot": "generalization", "value": "curved shape", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are curved shape. \n        Output: ", "result": "\n```\nwrench, screwdriver, ruler, protractor, compass, saw, hammer, pliers, wrench, screwdriver\n```\nExplanation: The words that belong to the category \"tool\" and satisfy the condition \"are curved shape\" are: ruler"}
{"cat": "tool", "slot": "generalization", "value": "scissors", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are scissors. \n        Output: ", "result": "\n        scissors,shears,clippers,cutters,snipers,pliers,vise,wrench,hammer,screwdriver.\n    \"\"\"\n    scissors, shears, clippers, cutters, snipers, pliers, vise,"}
{"cat": "tool", "slot": "generalization", "value": "hook", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are hook. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, chisel, drill, ruler, tape measure, level.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "tool", "slot": "generalization", "value": "card", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are card. \n        Output: ", "result": "\n```\nhammer, screwdriver, wrench, pliers, saw, tape measure, level, drill, socket set, ruler\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "tool", "slot": "generalization", "value": "shape", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are shape. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, scissors\n    \"\"\"\n    tool_words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\", \"saw\", \""}
{"cat": "tool", "slot": "generalization", "value": "obstructor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are obstructor. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, chisel, drill, ruler, level, tape measure\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"obstructor\" in word:\n            words.append"}
{"cat": "tool", "slot": "generalization", "value": "weapon", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are weapon. \n        Output: ", "result": "\n```\nknife, sword, axe, spear, dagger, mace, hammer, bow, arrow, gun\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n       "}
{"cat": "tool", "slot": "generalization", "value": "ligament", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are ligament. \n        Output: ", "result": "\n            hammer\n            wrench\n            screwdriver\n            pliers\n            saw\n            drill\n            socket\n            ruler\n            level\n            tape measure\n        \"\"\"\n        words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\","}
{"cat": "tool", "slot": "generalization", "value": "line", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are line. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, drill, ruler, tape measure, level, pencil. \n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"screwdriver\", \"wrench\", \"p"}
{"cat": "tool", "slot": "generalization", "value": "connective", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are connective. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, drill, ruler, tape measure, level, pencil.\n    \"\"\"\n    tool_words = [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\","}
{"cat": "tool", "slot": "generalization", "value": "construction", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are construction. \n        Output: ", "result": "\n```\nhammer, saw, screwdriver, wrench, pliers, level, tape measure, drill, crowbar, hacksaw\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the"}
{"cat": "tool", "slot": "generalization", "value": "claw", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are claw. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, chisel, drill, ruler, level, tape measure\n    \"\"\"\n    tool_words = [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \""}
{"cat": "tool", "slot": "generalization", "value": "connection", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are connection. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, drill, ruler, level, tape measure, pencil. \n    \"\"\"\n    words = [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \""}
{"cat": "tool", "slot": "generalization", "value": "inclined plane", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are inclined plane. \n        Output: ", "result": "\n        wrench, level, plumb, square, saw, hammer, screwdriver, pliers, ruler, tape measure.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for word in"}
{"cat": "tool", "slot": "generalization", "value": "strainer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are strainer. \n        Output: ", "result": "\n```\nstrainer,screwdriver,wrench,pliers,hammer,saw,sander,drill,tap,socket\n```"}
{"cat": "tool", "slot": "generalization", "value": "attachment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are attachment. \n        Output: ", "result": "\n```\nwrench, pliers, screwdriver, hammer, saw, nail, wrench, pliers, screwdriver, hammer\n```"}
{"cat": "tool", "slot": "generalization", "value": "seal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are seal. \n        Output: ", "result": "\n```\nseal, wrench, screwdriver, hammer, pliers, saw, tape measure, level, drill\n```\n\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated"}
{"cat": "tool", "slot": "generalization", "value": "instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are instrument. \n        Output: ", "result": "\n```\nwrench, hammer, screwdriver, pliers, saw, tape measure, level, drill, ruler\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n"}
{"cat": "tool", "slot": "generalization", "value": "medical instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are medical instrument. \n        Output: ", "result": "\n```\nscalpel, forceps, syringe, stethoscope, tongue depressor, otoscope, reflex hammer, sphygmomanometer, laryngoscope, endoscope\n```\nExplanation:\nThe words that belong to the category \""}
{"cat": "tool", "slot": "generalization", "value": "opener", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are opener. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, chisel, drill, ruler, tape measure, level.\n    \"\"\"\n    tool_words = [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\","}
{"cat": "tool", "slot": "generalization", "value": "structure", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are structure. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, level, tape measure, ruler, scissors.\n    \"\"\"\n    category = input(\"Enter category: \")\n    condition = input(\"Enter condition: \")\n    words = []\n    for"}
{"cat": "tool", "slot": "generalization", "value": "playing card", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are playing card. \n        Output: ", "result": "2, 3, 4, 5, 6, 7, 8, 9, 10, J, Q, K, A. \n        \"\"\"\n        category = 'tool'\n        condition = 'are playing card'\n        words = get_words(category"}
{"cat": "tool", "slot": "generalization", "value": "surgical instrument", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are surgical instrument. \n        Output: ", "result": "\n```\nscalpel, forceps, retractor, bone saw, drill, suture, needle, forceps, retractor, bone saw\n```\nExplanation: The words that satisfy the condition of being surgical instruments and belong to the category of tools are: scalpel,"}
{"cat": "tool", "slot": "generalization", "value": "connecter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are connecter. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, drill, ruler, tape measure, level, pencil. \n    \"\"\"\n    tool_words = [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw"}
{"cat": "tool", "slot": "generalization", "value": "weapon system", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are weapon system. \n        Output: ", "result": "\n```\nknife, sword, gun, rifle, pistol, shotgun, machete, spear, bow, crossbow\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n"}
{"cat": "tool", "slot": "generalization", "value": "bar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are bar. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, chisel, drill, ruler, level, tape measure.\n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers"}
{"cat": "tool", "slot": "generalization", "value": "tumbler", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are tumbler. \n        Output: ", "result": "\n```\ntumbler,tumbler,tumbler,tumbler,tumbler,tumbler,tumbler,tumbler,tumbler\n```"}
{"cat": "tool", "slot": "generalization", "value": "impediment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are impediment. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, chisel, drill, ruler, tape measure, level.\n    \"\"\"\n    category = \"tool\"\n    words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers"}
{"cat": "tool", "slot": "generalization", "value": "pair of scissors", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are pair of scissors. \n        Output: ", "result": "\n        scissors, shears, cutter, snips, pinking shears, shear, shears, cutter, snips, pinking shears\n\"\"\"\nscissors, shears, cutter, snips, pinking shears, shear, shears,"}
{"cat": "tool", "slot": "generalization", "value": "obstruction", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are obstruction. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, chisel, drill, ruler, tape measure, level. \n    \"\"\"\n    category = \"tool\"\n    condition = \"are obstruction\"\n    words = get_words(category, condition"}
{"cat": "tool", "slot": "generalization", "value": "kitchen utensil", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are kitchen utensil. \n        Output: ", "result": "\n        knife, spoon, fork, ladle, spatula, whisk, grater, peeler, cutting board, mixing bowl\n\"\"\"\n\nword_list = [\"knife\", \"spoon\", \"fork\", \"ladle\", \"spatula\", \"wh"}
{"cat": "tool", "slot": "generalization", "value": "filter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are filter. \n        Output: ", "result": "\n```\nfilter, sieve, strainer, funnel, scoop, spoon, ladle, shovel, sifter\n```\nExplanation: The word \"sieve\" satisfies the condition \"are filter\" and belongs to the category \"tool\".\n```python\ndef get"}
{"cat": "tool", "slot": "generalization", "value": "curve", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are curve. \n        Output: ", "result": "\n    \"\"\"\n    category = \"tool\"\n    condition = \"are curve\"\n    words = get_words(category, condition)\n    if words:\n        print(\", \".join(words))\n    else:\n        print(\"No words found.\")\n\nif __name__ == \""}
{"cat": "tool", "slot": "generalization", "value": "bottle opener", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are bottle opener. \n        Output: ", "result": "\n        screwdriver, wrench, pliers, hammer, saw, knife, scissors, tape, glue, pliers\n    \"\"\"\n    category = \"tool\"\n    condition = \"are bottle opener\"\n    words = get_words(category, condition"}
{"cat": "tool", "slot": "generalization", "value": "obstructer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are obstructer. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, chisel, drill, ruler, tape measure, level.\n    \"\"\"\n    category = \"tool\"\n    condition = \"are obstructer\"\n    words = get_words(category, condition"}
{"cat": "tool", "slot": "generalization", "value": "connector", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are connector. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, drill, ruler, level, tape measure, pencil.\n    \"\"\"\n    tool_words = [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\","}
{"cat": "tool", "slot": "generalization", "value": "paper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are paper. \n        Output: ", "result": "\n            scissors, pencil, ruler, eraser, stapler, tape, glue, paperclip, stapler, pencil\n        \"\"\"\n        category = \"tool\"\n        condition = \"are paper\"\n        result = []\n        for word in"}
{"cat": "tool", "slot": "generalization", "value": "form", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are form. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, drill, ruler, tape measure, level, pencil. \n    \"\"\"\n    tool_words = [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw"}
{"cat": "tool", "slot": "generalization", "value": "surgical knife", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are surgical knife. \n        Output: ", "result": "\n            scalpel, blade, incision, stitches, suture, staple, stapler, clamp, forceps, retractor\n        \"\"\"\n        category = \"tool\"\n        condition = \"are surgical knife\"\n        words = []\n        for word"}
{"cat": "tool", "slot": "generalization", "value": "tool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are tool. \n        Output: ", "result": "\n```\nwrench, hammer, screwdriver, pliers, saw, tape measure, wrench, screwdriver, pliers, hammer\n```"}
{"cat": "tool", "slot": "generalization", "value": "utensil", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are utensil. \n        Output: ", "result": "\n        knife, spoon, fork, spatula, ladle, tongs, scissors, pliers, wrench, hammer \n    \"\"\"\n    category = \"tool\"\n    condition = \"are utensil\"\n    words = get_words(category, condition"}
{"cat": "tool", "slot": "generalization", "value": "implement", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are implement. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, chisel, drill, ruler, level, tape measure\n    \"\"\"\n    tool_words = [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\", \""}
{"cat": "tool", "slot": "generalization", "value": "instrumentation", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are instrumentation. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, pencil\n    \"\"\"\n    tool_words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\", \"saw\", \""}
{"cat": "tool", "slot": "generalization", "value": "hand tool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are hand tool. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, chisel, drill, ruler, tape measure, level.\n    \"\"\"\n    tool_words = [\"hammer\", \"screwdriver\", \"wrench\", \"pliers\", \"saw\","}
{"cat": "tool", "slot": "generalization", "value": "object", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are object. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, scissors, glue, tape, ruler\n    \"\"\"\n    category = \"tool\"\n    objects = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\","}
{"cat": "tool", "slot": "generalization", "value": "device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are device. \n        Output: ", "result": "\n        hammer, screwdriver, wrench, pliers, saw, drill, level, tape measure, ruler, pencil.\n    \"\"\"\n    category = \"tool\"\n    condition = \"are device\"\n    words = get_words(category, condition)\n"}
{"cat": "tool", "slot": "generalization", "value": "instrumentality", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are instrumentality. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, ruler, level, tape measure, pencil. \n    \"\"\"\n    category = \"tool\"\n    condition = \"are instrumentality\"\n    words = get_words(category, condition"}
{"cat": "tool", "slot": "generalization", "value": "constraint", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are constraint. \n        Output: ", "result": "\n```\nhammer, screwdriver, wrench, pliers, saw, drill, ruler, level, tape measure, scissors\n```"}
{"cat": "tool", "slot": "generalization", "value": "restraint", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are restraint. \n        Output: ", "result": "\n```\nhammer, wrench, screwdriver, pliers, saw, tape measure, level, drill, ruler\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n"}
{"cat": "tool", "slot": "generalization", "value": "artifact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are artifact. \n        Output: ", "result": "\n        hammer\n        wrench\n        screwdriver\n        pliers\n        saw\n        chisel\n        drill\n        ruler\n        level\n        tape measure\n    \"\"\"\n    tool_words = [\"hammer\", \"wrench\", \"screwdriver\","}
{"cat": "tool", "slot": "generalization", "value": "cutlery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are cutlery. \n        Output: ", "result": "\n        knife, fork, spoon,\n```"}
{"cat": "tool", "slot": "generalization", "value": "artefact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are artefact. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, chisel, drill, ruler, tape measure, level.\n    \"\"\"\n    tool_words = [\"hammer\", \"wrench\", \"screwdriver\", \"pliers\", \"saw\","}
{"cat": "tool", "slot": "generalization", "value": "cutting tool", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are cutting tool. \n        Output: ", "result": "\n        drill\n        saw\n        chisel\n        file\n        plane\n        lathe\n        mill\n        grind\n        sand\n    \"\"\"\n    category = \"tool\"\n    condition = \"are cutting tool\"\n    words = [\"drill\", \"saw\", \""}
{"cat": "tool", "slot": "generalization", "value": "mechanical device", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are mechanical device. \n        Output: ", "result": "\n        hammer, wrench, screwdriver, pliers, saw, drill, h\n```"}
{"cat": "tool", "slot": "generalization", "value": "cutter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are cutter. \n        Output: ", "result": "\n```\nscissors, knife, saw, hammer, wrench, pliers, screwdriver, chisel, drill\n```"}
{"cat": "tool", "slot": "generalization", "value": "fastener", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are fastener. \n        Output: ", "result": "\n```\nbolt, screw, nail, bolt, screw, nail, bolt, screw, nail, bolt\n```"}
{"cat": "tool", "slot": "generalization", "value": "screw", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are screw. \n        Output: ", "result": "\n```\nscrewdriver,screw,screws,screwhead,screwpoint,screwdriver,screw,screws,screwhead,screwpoint\n```\n```\nhammer,nail,nails,nail"}
{"cat": "tool", "slot": "generalization", "value": "arm", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: tool. \n        Condition: are arm. \n        Output: ", "result": "\n```\nwrench, hammer, screwdriver, pliers, saw, tape measure, level, drill, socket set, ruler\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition"}
{"cat": "container", "slot": "bodyPart", "value": "shoulder", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have or be used with shoulder. \n        Output: ", "result": "\n        box, can, jar, jug, pot, shoulder, should, shouldered, shouldering \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"shoulder\" in word and \"container\" in word:\n            words.append(word)\n"}
{"cat": "container", "slot": "bodyPart", "value": "hand", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have or be used with hand. \n        Output: ", "result": "\n        box, can, cup, jar, jug, pot, bowl, plate, spoon, handle\n    \"\"\"\n    category = \"container\"\n    words = []\n    for word in text.split():\n        if \"hand\" in word and \"can\" in word:\n           "}
{"cat": "container", "slot": "user", "value": "woman", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are used by women. \n        Output: ", "result": "\n            1. purse\n            2. handbag\n            3. wallet\n            4. clutch\n            5. tote\n            6. satchel\n            7. shoulder bag\n            8. backpack\n            9. messenger bag\n            10. makeup bag"}
{"cat": "container", "slot": "user", "value": "waiter", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are used by waiters. \n        Output: ", "result": "\n        coffee, cup, sugar, cream, saucer, spoon, napkin, straw, stirrer, \n        salt, pepper, ketchup, mustard, soy sauce, hot sauce, lemon, \n        lime, ice, water, s"}
{"cat": "container", "slot": "efficiency", "value": "impermeable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be impermeable. \n        Output: ", "result": "\n        impermeable, plastic, glass, metal, ceramic, aluminum, cardboard, paper, cellophane, foil\n    \"\"\"\n    category = \"container\"\n    words = []\n    for word in synonyms:\n        if \"impermeable"}
{"cat": "container", "slot": "efficiency", "value": "recyclable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be recyclable. \n        Output: ", "result": "\n        - bottle\n        - can\n        - jar\n        - plastic\n        - glass\n        - aluminum\n        - cardboard\n        - paper\n        - tin\n        - carton\n        \"\"\"\n    words = []\n    for word in word_list:\n"}
{"cat": "container", "slot": "efficiency", "value": "recycled", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be recycled. \n        Output: ", "result": "\n        box, can, carton, container, crate, drum, jug, package, sack, tank\n    \"\"\"\n    category = \"container\"\n    condition = \"can be recycled\"\n    words = []\n    for word in text.split():\n        if word."}
{"cat": "container", "slot": "efficiency", "value": "breakable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be breakable. \n        Output: ", "result": "\n        box, bottle, can, jar, jug, vase, bowl, cup, pitcher, glass\n    \"\"\"\n    words = []\n    for word in words:\n        if \"container\" in word and \"breakable\" in word:\n            words.append(word)"}
{"cat": "container", "slot": "colorPattern", "value": "transparent", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be transparent. \n        Output: ", "result": "\n        box, jar, bottle, can, tube, jar, vial, container, bottle, can\n    \"\"\"\n    transparent_container_words = [\"box\", \"jar\", \"bottle\", \"can\", \"tube\", \"jar\", \"vial\", \"container\","}
{"cat": "container", "slot": "colorPattern", "value": "green", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be green. \n        Output: ", "result": "\n        box, can, container, green, jar, jug, pot, receptacle, vessel. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"green\" in word and \"container\" in word:\n            words.append(word)\n    return"}
{"cat": "container", "slot": "colorPattern", "value": "green", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be green. \n        Output: ", "result": "\n        box, can, container, green, jar, jug, pot, receptacle, vessel. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"green\" in word and \"container\" in word:\n            words.append(word)\n    return"}
{"cat": "container", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be brown. \n        Output: ", "result": "\n          box, can, jar, bottle, container, packaging, carton, case, tube,\n```"}
{"cat": "container", "slot": "colorPattern", "value": "brown", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be brown. \n        Output: ", "result": "\n          box, can, jar, bottle, container, packaging, carton, case, tube,\n```"}
{"cat": "container", "slot": "colorPattern", "value": "cream", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be cream. \n        Output: ", "result": "\n        box, can, jar, bottle, cream, container, carton, tube,\n```"}
{"cat": "container", "slot": "purpose", "value": "carry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are used to carry. \n        Output: ", "result": "\n        box, can, jar, bottle, bag, bucket, pail, sack, container.\n    \"\"\"\n    category = \"container\"\n    words = []\n    for word in text.split():\n        if \"carry\" in word:\n            words.append(word"}
{"cat": "container", "slot": "purpose", "value": "store", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are used to store. \n        Output: ", "result": "\n        box, can, jar, bottle, pot, pail, bag, crate, container\n    \"\"\"\n    category = \"container\"\n    words = []\n    for word in text.split():\n        if \"store\" in word:\n            words.append(word)\n"}
{"cat": "container", "slot": "purpose", "value": "cleaning", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are used for cleaning. \n        Output: ", "result": "\n            mop, broom, dustpan, duster, vacuum, bucket, sponge, scrubber, detergent, soap.\n    \"\"\"\n    words = []\n    for word in container:\n        if \"cleaning\" in word:\n            words.append"}
{"cat": "container", "slot": "purpose", "value": "shopping", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are used for shopping. \n        Output: ", "result": "\n```\nshopping, basket, cart, store, aisle, checkout, receipt, cashier, credit, debit\n```\n\n```python\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "container", "slot": "purpose", "value": "gardening", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are used for gardening. \n        Output: ", "result": "\n          - can\n          - pot\n          - seed\n          - trowel\n          - watering\n          - soil\n          - compost\n          - fertilizer\n          - rake\n          - hoe\n```\n\n```\nSolution:\nprovide a list of "}
{"cat": "container", "slot": "purpose", "value": "storage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are used for storage. \n        Output: ", "result": "\n        box, can, jar, bottle, pail, crate, barrel, sack, container\n    \"\"\"\n    category = \"container\"\n    words = [\"box\", \"can\", \"jar\", \"bottle\", \"pail\", \"crate\", \"barrel\","}
{"cat": "container", "slot": "purpose", "value": "tote", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are used to tote. \n        Output: ", "result": "\n        box, cart, container, crate, sack, tote, bag, case, can, drum\n    \"\"\"\n    category = \"container\"\n    words = []\n    for word in text.split():\n        if \"to\" in word:\n            words.append(word"}
{"cat": "container", "slot": "efficiency", "value": "plastic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be plastic. \n        Output: ", "result": "\n        - bottle\n        - can\n        - jar\n        - box\n        - bag\n        - pouch\n        - tube\n        - container\n        - wrapper\n        - liner\n        \"\"\"\n        words = []\n        for word in container:\n            if \"pl"}
{"cat": "container", "slot": "efficiency", "value": "shaped", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be shaped. \n        Output: ", "result": "\n        box, can, cup, jar, jug, pot, pail, pitcher, vase.\n    \"\"\"\n    words = []\n    for word in words:\n        if word.lower() == \"can\":\n            words.append(\"candle\")\n        elif word."}
{"cat": "container", "slot": "place", "value": "kitchen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be found or used in kitchens. \n        Output: ", "result": "\n            \n```"}
{"cat": "container", "slot": "place", "value": "cafeteria", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be found or used in cafeterias. \n        Output: ", "result": "\n        coffee, cup, sugar, creamer, napkin, straw, spoon, fork, knife, plate.\n    \"\"\"\n    category = \"container\"\n    words = [\"coffee\", \"cup\", \"sugar\", \"creamer\", \"napkin\", \"st"}
{"cat": "container", "slot": "place", "value": "supermarket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be found or used in supermarkets. \n        Output: ", "result": "\n            1. Milk\n            2. Bread\n            3. Eggs\n            4. Cheese\n            5. Fruits\n            6. Vegetables\n            7. Meat\n            8. Poultry\n            9. Seafood\n            10. C"}
{"cat": "container", "slot": "place", "value": "restaurant", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be found or used in restaurants. \n        Output: ", "result": "\n        salt, pepper, sugar, ketchup, soy sauce, vinegar, olive oil, mustard, mayonnaise, hot sauce. \n        \"\"\"\n        category = 'container'\n        condition = 'can be found or used in restaurants'\n       "}
{"cat": "container", "slot": "place", "value": "shop", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be found or used in shops. \n        Output: ", "result": "\n            \n```"}
{"cat": "container", "slot": "place", "value": "pub", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be found or used in pubs. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in pubs:\n            if \"container\" in word and \"pubs\" in word:\n                words.append(word)\n        return \", \".join(words)\n\n    print(find_container_in_pubs(pub"}
{"cat": "container", "slot": "place", "value": "canteen", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be found or used in canteens. \n        Output: ", "result": "\n          can, \n          tin, \n          cup, \n          plate, \n          spoon, \n          fork, \n          knife, \n          water, \n          juice, \n          soda.\n    \"\"\"\n    words = []\n    for"}
{"cat": "container", "slot": "place", "value": "cellar", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be found or used in cellars. \n        Output: ", "result": "\n            1. Barrel\n            2. Cask\n            3. Vat\n            4. Keg\n            5. Bottle\n            6. Case\n            7. Bin\n            8. Hogshead\n            9. Butt\n            10. Drum\n        \"\"\""}
{"cat": "container", "slot": "place", "value": "garden", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be found or used in gardens. \n        Output: ", "result": "\n            1. Flower\n            2. Herb\n            3. Vegetable\n            4. Berry\n            5. Tree\n            6. Shrub\n            7. Grass\n            8. Fruit\n            9. Seed\n            10. Soil\n```"}
{"cat": "container", "slot": "place", "value": "beach", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be found or used in beaches. \n        Output: ", "result": "\n        sand, bucket, pail, shovel, seashell, bucket, pail, shovel, seashell, bucket, pail, shovel, seashell, bucket, pail, shovel, seashell, bucket, pail, shovel"}
{"cat": "container", "slot": "efficiency", "value": "shaped", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be shaped. \n        Output: ", "result": "\n        box, can, cup, jar, jug, pot, pail, pitcher, vase.\n    \"\"\"\n    words = []\n    for word in words:\n        if word.lower() == \"can\":\n            words.append(\"candle\")\n        elif word."}
{"cat": "container", "slot": "efficiency", "value": "recycled", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be recycled. \n        Output: ", "result": "\n        box, can, carton, container, crate, drum, jug, package, sack, tank\n    \"\"\"\n    category = \"container\"\n    condition = \"can be recycled\"\n    words = []\n    for word in text.split():\n        if word."}
{"cat": "container", "slot": "part", "value": "handle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  handle. \n        Output: ", "result": " can, handle, container. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"handle\" in word and \"container\" in word:\n            words.append(word)\n    return words\n\ndef count_vowels(word):\n    \"\"\"\n"}
{"cat": "container", "slot": "part", "value": "bung", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  bung. \n        Output: ", "result": " can, have, bung."}
{"cat": "container", "slot": "part", "value": "lid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  lid. \n        Output: ", "result": "\n        - can\n        - have\n        - lid\n        - belong\n        - category\n        - satisfy\n        - condition\n        - list\n        - comma\n        - separated\n        - words\n    \"\"\"\n    words = [\"can\", \"have\", \"lid\", \"belong"}
{"cat": "container", "slot": "part", "value": "hoop", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  hoop. \n        Output: ", "result": "\n        box, can, cup, hoop, kettle, lid, pot, ring, saucer, teapot\n    \"\"\"\n    category = \"container\"\n    words = [\"box\", \"can\", \"cup\", \"hoop\", \"kettle\", \"lid\", \""}
{"cat": "container", "slot": "part", "value": "label", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  label. \n        Output: ", "result": " can, have, label. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"can\" in word and \"have\" in word and \"label\" in word:\n            words.append(word)\n    return words\n\ndef count_vowels("}
{"cat": "container", "slot": "part", "value": "cwt", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  cwt. \n        Output: ", "result": " can, have, cwt. \n    \"\"\"\n    category = Category.objects.get(name='container')\n    words = Word.objects.filter(category=category, definition__contains='cwt')\n    return [word.word for word in words]\n\n# Test the function"}
{"cat": "container", "slot": "part", "value": "compartment", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  compartment. \n        Output: ", "result": "\n        box, compartment, can, container, compartmentalize, containerize, \n        compartmental, compartmented, compartmentally.\n    \"\"\"\n    category = \"container\"\n    words = []\n    for word in text.split():\n        if \"can\""}
{"cat": "container", "slot": "part", "value": "centner", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  centner. \n        Output: ", "result": " container. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"center\" in word and \"can\" in word and \"have\" in word:\n            words.append(word)\n    return words\n\ndef count_vowels(word):\n   "}
{"cat": "container", "slot": "part", "value": "spigot", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  spigot. \n        Output: ", "result": "\n        - can\n        - have\n        - spigot\n        - \n        - \n        - \n        - \n        - \n        - \n        - \n        - \n        - \n        - \n        - \n        - \n       "}
{"cat": "container", "slot": "part", "value": "bottlecap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  bottlecap. \n        Output: ", "result": " cap, can, bottle, capcap, bottlecap, cancap, bottlecap, capcan, bottlecap. \n    \"\"\"\n    words = []\n    for word in container:\n        if \"bottlecap\" in word:\n            words.append(word)"}
{"cat": "container", "slot": "part", "value": "quintal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  quintal. \n        Output: ", "result": "\n        can, have, quintal, container, 10, words, satisfy, condition, \n        comma, separated, list, \n    \"\"\"\n    words = [\"can\", \"have\", \"quintal\", \"container\", \"10\", \"words\", \"satisfy"}
{"cat": "container", "slot": "part", "value": "brim", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  brim. \n        Output: ", "result": " can, have, brim. \n    \"\"\"\n    words = []\n    for word in container:\n        if \"brim\" in word:\n            words.append(word)\n    return words\n\n# Your code here\n\nprint(find_words(container, \"can have"}
{"cat": "container", "slot": "part", "value": "cental", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  cental. \n        Output: ", "result": " can, have, central. \n    \"\"\"\n    words = []\n    for word in container:\n        if \"central\" in word:\n            words.append(word)\n    return words\n\ndef count_vowels(string):\n    \"\"\"\n    Given a string, return"}
{"cat": "container", "slot": "part", "value": "rim", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  rim. \n        Output: ", "result": " can, have, rim. \n    \"\"\"\n    words = []\n    for word in container:\n        if \"rim\" in word:\n            words.append(word)\n    return words\n\ndef count_vowels(string):\n    \"\"\"\n    Given a string, return"}
{"cat": "container", "slot": "part", "value": "breech", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  breech. \n        Output: ", "result": " can, have, breech."}
{"cat": "container", "slot": "part", "value": "neck", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  neck. \n        Output: ", "result": " can, with, have, has, of, the, to, up, in \n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"neck\" in word:\n            words.append(word)\n    return words\n\ndef count_vow"}
{"cat": "container", "slot": "part", "value": "zipper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  zipper. \n        Output: ", "result": "box, can, zipper, bag, container, compartment, lid, pocket, pouch, wallet. \n    \"\"\"\n    category = \"container\"\n    words = [\"box\", \"can\", \"zipper\", \"bag\", \"container\", \"compartment\", \"lid\","}
{"cat": "container", "slot": "part", "value": "base", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  base. \n        Output: ", "result": "\n```\nbase, can, have, \n```"}
{"cat": "container", "slot": "part", "value": "strap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  strap. \n        Output: ", "result": "\n        box, can, cup, jar, lid, plate, pot, spoon, strap\n\"\"\"\n\nword_list = [\"box\", \"can\", \"cup\", \"jar\", \"lid\", \"plate\", \"pot\", \"spoon\", \"strap\"]\nfiltered_list"}
{"cat": "container", "slot": "part", "value": "rear of barrel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  rear of barrel. \n        Output: ", "result": " barrel, can, rear, of, barrel, container, have, \n        satisfy, condition. \n        \"\"\"\n        words = []\n        for word in container:\n            if \"rear\" in word and \"barrel\" in word:\n                words.append(word)"}
{"cat": "container", "slot": "part", "value": "pocket", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  pocket. \n        Output: ", "result": " box, can, pocket, bag, case, container, compartment, pouch, satchel, wallet.\n    \"\"\"\n    words = []\n    for word in text.split():\n        if \"can\" in word and \"pocket\" in word:\n            words.append("}
{"cat": "container", "slot": "part", "value": "zip", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  zip. \n        Output: ", "result": " can, have, zip. \n    \"\"\"\n    words = []\n    for word in container:\n        if \"zip\" in word:\n            words.append(word)\n    if len(words) == 0:\n        print(\"No words found.\")\n    else:\n       "}
{"cat": "container", "slot": "part", "value": "tap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  tap. \n        Output: ", "result": " can, have, tap. \n    \"\"\"\n    words = []\n    for word in container:\n        if \"tap\" in word:\n            words.append(word)\n    return words\n\ndef count_vowels(string):\n    \"\"\"\n    Given a string,"}
{"cat": "container", "slot": "part", "value": "rear of tube", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  rear of tube. \n        Output: ", "result": " can, of, tube, rear, container. \n    \"\"\"\n    words = []\n    for word in container:\n        if \"rear\" in word and \"tube\" in word:\n            words.append(word)\n    print(\", \".join(words))\n```\n"}
{"cat": "container", "slot": "part", "value": "mouth", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  mouth. \n        Output: ", "result": " can, with, have, mouth, of, the, to, up, in, \n        with, have, mouth, of, the, to, up, in, can, with, have, \n        mouth, of, the, to, up, in, can, with, have,"}
{"cat": "container", "slot": "part", "value": "stopper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  stopper. \n        Output: ", "result": "\n        box, can, jar, lid, stopper, bottle, case, carton, container, boxed.\n    \"\"\"\n    words = []\n    for word in container:\n        if \"stopper\" in word:\n            words.append(word)\n    return words\n"}
{"cat": "container", "slot": "part", "value": "cork", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  cork. \n        Output: ", "result": " bottle, cork. \n    \"\"\"\n    words = []\n    for word in container:\n        if \"cork\" in word:\n            words.append(word)\n    print(\", \".join(words))\n```\nExplanation:\n\n* The function takes two arguments"}
{"cat": "container", "slot": "part", "value": "spout", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  spout. \n        Output: ", "result": "\n        can, have, spout, container, box, barrel, drum, crate, carton, pallet \n    \"\"\"\n    words = []\n    for word in container_words:\n        if \"spout\" in word:\n            words.append(word)\n   "}
{"cat": "container", "slot": "part", "value": "clasp", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  clasp. \n        Output: ", "result": " can, have, clasp. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"clasp\" in word and \"container\" in word:\n            words.append(word)\n    return words\n\ndef count_vowels(word):\n   "}
{"cat": "container", "slot": "part", "value": "cap", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  cap. \n        Output: ", "result": " can, have, cap. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"can\" in word and \"have\" in word and \"cap\" in word:\n            words.append(word)\n    return words\n\ndef count_vowels("}
{"cat": "container", "slot": "part", "value": "short hundredweight", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  short hundredweight. \n        Output: ", "result": "100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 2000, 3000, 4"}
{"cat": "container", "slot": "part", "value": "stave", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  stave. \n        Output: ", "result": "10 words that belong to the category and satisfy the condition. \n        \"\"\"\n        words = []\n        for word in container:\n            if \"stave\" in word:\n                words.append(word)\n        return words\n\ndef count_vowels(word):\n   "}
{"cat": "container", "slot": "part", "value": "hundredweight", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  hundredweight. \n        Output: ", "result": "10,000, 20,000, 30,000, 40,000, 50,000, 60,000, 70,000, 80,000, "}
{"cat": "container", "slot": "content", "value": "liquid", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain liquids. \n        Output: ", "result": "\n        - bottle\n        - can\n        - cup\n        - glass\n        - jug\n        - pitcher\n        - bowl\n        - jar\n        - container\n        - vase\n        \"\"\"\n        words = []\n        for word in word_list:\n            if"}
{"cat": "container", "slot": "content", "value": "wine", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain wines. \n        Output: ", "result": "\n        box, bottle, cask, decanter, glass, jug, magnum, bottling, vat.\n    \"\"\"\n    words = []\n    for word in text.split():\n        if \"wine\" in word and \"container\" in word:\n            words.append"}
{"cat": "container", "slot": "content", "value": "drink", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain drinks. \n        Output: ", "result": "\n        coffee, tea, soda, juice, milk, water, beer, wine, cocktail, \n        Category: container. \n        Condition: contain drinks. \n        Output: \n        coffee, tea, soda, juice, milk, water,"}
{"cat": "container", "slot": "content", "value": "beer", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain beers. \n        Output: ", "result": "\n        \"\"\"\n        words = Category.objects.filter(category='container').filter(Q(name__contains='beers')|Q(description__contains='beers')).distinct().order_by('name', 'description')\n        return [word.name for word in words]\n"}
{"cat": "container", "slot": "content", "value": "grocery", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain groceries. \n        Output: ", "result": "\n```\nbread, milk, eggs, cereal, fruit, vegetables, meat, poultry, seafood, snacks\n```\n\nExample 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n"}
{"cat": "container", "slot": "content", "value": "sand", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain sand. \n        Output: ", "result": "\n        sand, pail, bucket, shovel, beach, dune, hourglass, hourglass sand, \n        hourglass pail, hourglass bucket, hourglass shovel, hourglass beach, \n        hourglass dune, hourglass hourglass, hourglass pail"}
{"cat": "container", "slot": "content", "value": "liquor", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain liquors. \n        Output: ", "result": "\n        whiskey, gin, vodka, rum, tequila, brandy, scotch, bourbon, cordial, liqueur.\n    \"\"\"\n    liquor_words = [\"whiskey\", \"gin\", \"vodka\", \"rum\", \"tequ"}
{"cat": "container", "slot": "content", "value": "biscuit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain biscuits. \n        Output: ", "result": "\n            cookie, biscuit, muffin, cake, cupcake, donut, bread, roll, pastry, scone\n        \"\"\"\n        category = \"container\"\n        condition = \"contain biscuits\"\n        words = get_words(category, condition"}
{"cat": "container", "slot": "content", "value": "soda", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain sodas. \n        Output: ", "result": "\n        - can\n        - bottle\n        - soda\n        - pop\n        - fizzy\n        - carbonated\n        - beverage\n        - drink\n        - liquid\n        - container\n        \"\"\"\n        words = []\n        for word in container:\n            if"}
{"cat": "container", "slot": "content", "value": "backpack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain backpacks. \n        Output: ", "result": "\n        backpack, bookbag, knapsack, rucksack, satchel, totebag, duffelbag, gymbag, holdall, kitbag.\n    \"\"\"\n    words = []\n    for word in text.split():\n        if \"backpack"}
{"cat": "container", "slot": "content", "value": "gardening", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain gardenings. \n        Output: ", "result": "\n        - container\n        - gardening\n        - plant\n        - pot\n        - soil\n        - seed\n        - water\n        - sun\n        - fertilizer\n        - prune\n        \"\"\"\n        words = []\n        for word in text.split():\n            if"}
{"cat": "container", "slot": "content", "value": "ice", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain ices. \n        Output: ", "result": "\n```\nice, ice, ice, ice, ice, ice, ice, ice, ice\n```"}
{"cat": "container", "slot": "content", "value": "purse", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain purses. \n        Output: ", "result": "\n            \n```"}
{"cat": "container", "slot": "content", "value": "wallet", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain wallets. \n        Output: ", "result": "\n        wallet, wallet wallet, wallet wallet wallet, wallet wallet wallet wallet, wallet wallet wallet wallet wallet, wallet wallet wallet wallet wallet wallet, wallet wallet wallet wallet wallet wallet wallet"}
{"cat": "container", "slot": "content", "value": "spray", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain sprays. \n        Output: ", "result": "\n        - spray\n        - sprays\n        - spraying\n        - sprayer\n        - sprayers\n        - spraying\n        - sprayers\n        - spray\n        - sprays\n        - spraying\n        - sprayer"}
{"cat": "container", "slot": "content", "value": "flower", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain flowers. \n        Output: ", "result": "\n        roses, daisies, sunflowers, tulips, iris, lilies, marigolds, petunias, poppies, daffodils \n    \"\"\"\n    flowers = ['roses', 'daisies', 'sunflowers', 't"}
{"cat": "container", "slot": "content", "value": "lunch", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain lunches. \n        Output: ", "result": "\n        box, bag, container, lunch, meal, pack, packed, packaging, lunchbox, lunchboxes\n    \"\"\"\n    category = \"container\"\n    condition = \"contain lunches\"\n    words = get_words(category, condition)\n"}
{"cat": "container", "slot": "content", "value": "water", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain water. \n        Output: ", "result": "\n        box, bottle, can, cup, glass, jug, pitcher, bowl, mug. \n    \"\"\"\n    words = []\n    for word in text.split():\n        if \"water\" in word.lower():\n            words.append(word)\n    return"}
{"cat": "container", "slot": "content", "value": "muffin", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain muffins. \n        Output: ", "result": "\n        container, muffin, muffin, muffin, muffin, muffin, muffin, muffin, muffin, muffin. \n        \"\"\"\n        words = []\n        for word in container_words:\n            if \"muff"}
{"cat": "container", "slot": "content", "value": "haversack", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain haversacks. \n        Output: ", "result": "\n        haversack, ammunition, canteen, messkit, first aid kit, grenade, rifle, pistol, bayonet, entrenching tool.\n    \"\"\"\n    category = \"container\"\n    words = [\"haversack\", \"ammunition\","}
{"cat": "container", "slot": "material", "value": "wood", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of wood. \n        Output: ", "result": "\n        box, crate, chest, case, container, pallet, wood, plank, lumber, stockpile.\n    \"\"\"\n    category = \"container\"\n    condition = \"can be made of wood\"\n    words = []\n    for word in text.split():"}
{"cat": "container", "slot": "material", "value": "canvas", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of canvas. \n        Output: ", "result": "10 words that can be made of canvas. \n        Examples: canvas, tarp, dropcloth, sail, awning, tent, tarpaulin, marquee, banner, awning. \n        \"\"\"\n        words = []\n        for word in word_list:"}
{"cat": "container", "slot": "material", "value": "cotton", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of cotton. \n        Output: ", "result": "\n        box, bag, can, bottle, jar, pot, pouch, sack, container.\n    \"\"\"\n    words = []\n    for word in container:\n        if \"cotton\" in word:\n            words.append(word)\n    print(\", \".join(words"}
{"cat": "container", "slot": "material", "value": "polyester", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of polyester. \n        Output: ", "result": "\n        polyester, plastic, container, bottle, bag, sack, box, jar, pouch, wrapper\n    \"\"\"\n    polyester_words = [\"polyester\", \"plastic\", \"container\", \"bottle\", \"bag\", \"sack\", \"box\", \"jar"}
{"cat": "container", "slot": "material", "value": "fibre", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of fibre. \n        Output: ", "result": "\n        box, carton, crate, drum, fibre, jar, package, sack, tank, tube\n    \"\"\"\n    fibre_words = [\"box\", \"carton\", \"crate\", \"drum\", \"fibre\", \"jar\", \"package\", \"s"}
{"cat": "container", "slot": "material", "value": "ceramic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of ceramic. \n        Output: ", "result": "\n        box, jar, vase, bowl, plate, teapot, mug, pitcher, cookie jar, ceramic.\n    \"\"\"\n    category = \"container\"\n    condition = \"can be made of ceramic\"\n    words = []\n    for word in"}
{"cat": "container", "slot": "material", "value": "leather", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of leather. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in container:\n            if \"leather\" in word:\n                words.append(word)\n        print(\", \".join(words))\n```\nExplanation:\n\n* The function takes two arguments: a category and a condition."}
{"cat": "container", "slot": "material", "value": "fabric", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of fabric. \n        Output: ", "result": "\n        box, basket, bag, sack, container, tote, pouch, purse, hobo, satchel\n    \"\"\"\n    category = \"container\"\n    words = [\"box\", \"basket\", \"bag\", \"sack\", \"container\", \"tote\","}
{"cat": "container", "slot": "material", "value": "cloth", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of cloth. \n        Output: ", "result": "\n        box, bag, sack, case, container, pouch, purse, tote, wallet, bagel.\n    \"\"\"\n    words = []\n    for word in words:\n        if \"container\" in word and \"cloth\" in word:\n            words.append"}
{"cat": "container", "slot": "material", "value": "wicker", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of wicker. \n        Output: ", "result": "\n        - basket\n        - rattan\n        - wickerwork\n        - bamboo\n        - cane\n        - reed\n        - willow\n        - rush\n        - sedge\n        - thatch\n        \"\"\"\n        words = []\n        for word"}
{"cat": "container", "slot": "material", "value": "clay", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of clay. \n        Output: ", "result": "\n        box, can, jar, pot, vase, bowl, plate, cup, jug, pitcher.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"container\" in word and \"made of clay\" in word:\n            words."}
{"cat": "container", "slot": "material", "value": "paper", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of paper. \n        Output: ", "result": "\n        box, carton, crate, container, packaging, sack, shipping, tray, wrapper\n    \"\"\"\n    category = \"container\"\n    condition = \"can be made of paper\"\n    words = get_words(category, condition)\n    print(\", \".join"}
{"cat": "container", "slot": "material", "value": "aluminum", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of aluminum. \n        Output: ", "result": "\n        aluminum, can, container, foil, jar, lids, metal, pop, tin. \n    \"\"\"\n    aluminum_words = []\n    for word in words:\n        if \"aluminum\" in word:\n            aluminum_words.append"}
{"cat": "container", "slot": "material", "value": "metal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of metal. \n        Output: ", "result": "\n        box, can, jar, bottle, pot, pan, kettle, bowl, tray, dish\n    \"\"\"\n    category = \"container\"\n    words = [\"box\", \"can\", \"jar\", \"bottle\", \"pot\", \"pan\", \"kett"}
{"cat": "container", "slot": "shape", "value": "round", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be round. \n        Output: ", "result": "\n        box, can, cup, jar, jug, pot, round, bottle, bowl. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"round\" in word and \"container\" in word:\n            words.append(word)\n    return"}
{"cat": "container", "slot": "shape", "value": "circular", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be circular. \n        Output: ", "result": "\n        box, bottle, can, jar, jug, pot, tin, tube, vase.\n    \"\"\"\n    words = []\n    for word in words:\n        if \"container\" in word and \"can\" in word:\n            words.append(word)\n    return"}
{"cat": "container", "slot": "shape", "value": "cylindrical", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be cylindrical. \n        Output: ", "result": "\n        box, can, cylinder, jar, bottle, barrel, tube, container, vase,\n```"}
{"cat": "container", "slot": "shape", "value": "curved", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be curved. \n        Output: ", "result": "\n        box, can, cup, jar, jug, pot, bowl, tray, vase.\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"container\" in word and \"can\" in word and word != \"can\":\n            words."}
{"cat": "container", "slot": "shape", "value": "conical", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be conical. \n        Output: ", "result": "\n        box, can, cone, cylinder, jar, pot, sack, tube, vase \n    \"\"\"\n    category = \"container\"\n    words = [\"box\", \"can\", \"cone\", \"cylinder\", \"jar\", \"pot\", \"sack\", \""}
{"cat": "container", "slot": "shape", "value": "flat", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be flat. \n        Output: ", "result": "\n        box, can, cup, jar, lid, plate, pot, saucer, tray\n    \"\"\"\n    words = []\n    for word in word_list:\n        if \"flat\" in word and \"container\" in word:\n            words.append(word)\n    return"}
{"cat": "container", "slot": "shape", "value": "dry", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be dry. \n        Output: ", "result": "\n        box, can, jar, bottle, container, dry, package, carton, case, tube.\n    \"\"\"\n    box = \"box\"\n    can = \"can\"\n    jar = \"jar\"\n    bottle = \"bottle\"\n    container = \""}
{"cat": "container", "slot": "shape", "value": "hollow", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be hollow. \n        Output: ", "result": "\n        box, can, jar, bottle, tube, container, vase, bowl, cup, jug\n    \"\"\"\n    category = \"container\"\n    words = [\"box\", \"can\", \"jar\", \"bottle\", \"tube\", \"container\", \"vase\","}
{"cat": "container", "slot": "shape", "value": "rectangular", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be rectangular. \n        Output: ", "result": "\n        box, can, container, cubicle, desk, drawer, envelope, file, folder, inbox.\n    \"\"\"\n    words = []\n    for word in words:\n        if \"rectangular\" in word and \"container\" in word:\n            words.append("}
{"cat": "container", "slot": "shape", "value": "square", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be square. \n        Output: ", "result": "\n```\nbox,can,container,cube,dish,jar,lid,pail,tin,vase\n```"}
{"cat": "container", "slot": "material", "value": "plastic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of plastic. \n        Output: ", "result": "\n        - container\n        - plastic\n        - storage\n        - box\n        - bag\n        - case\n        - tube\n        - bottle\n        - pouch\n        - wrapper\n        \"\"\"\n        words = []\n        for word in synonyms:\n            if"}
{"cat": "container", "slot": "efficiency", "value": "reusable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be reusable. \n        Output: ", "result": "\n        box, can, jar, bottle, container, reusable, recyclable, packaging, wrapper\n    \"\"\"\n    category = \"container\"\n    condition = \"can be reusable\"\n    words = []\n    for word in text.split():\n        if word."}
{"cat": "container", "slot": "part", "value": "glass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can have  glass. \n        Output: ", "result": " box, can, glass, glasses, jar, jars, pot, pots, vase, vases \n    \"\"\"\n    words = []\n    for word in container_words:\n        if \"glass\" in word:\n            words.append(word)\n    return words\n"}
{"cat": "container", "slot": "content", "value": "bag", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain bags. \n        Output: ", "result": "\n        bag,sack,container,suitcase,trunk,duffel,backpack,briefcase,tote,\n```\n\n1. Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list"}
{"cat": "container", "slot": "material", "value": "reusable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of reusable. \n        Output: ", "result": "\n        box, can, jar, bottle, container, reusable, recyclable, packaging, wrapper\n    \"\"\"\n    category = \"container\"\n    words = [\"box\", \"can\", \"jar\", \"bottle\", \"container\", \"reusable\", \"recycl"}
{"cat": "container", "slot": "material", "value": "glass", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of glass. \n        Output: ", "result": "\n        glass, bottle, jar, vase, container, glassware, glass bottle, glass jar, glass vase, glass container.\n    \"\"\"\n    words = []\n    for word in category:\n        if \"glass\" in word:\n            words.append(word)\n"}
{"cat": "container", "slot": "material", "value": "recycled", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of recycled. \n        Output: ", "result": "\n        recyclable, plastic, glass, aluminum, paper, cardboard, biodegradable, compostable, recycled, eco-friendly\n    \"\"\"\n    category = \"container\"\n    condition = \"can be made of recycled\"\n   "}
{"cat": "container", "slot": "generalization", "value": "instrumentation", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are instrumentation. \n        Output: ", "result": "\n```\ncontainer,instrumentation\n```\n1. \n2. \n3. \n4. \n5. \n6. \n7. \n8. \n9. \n10."}
{"cat": "container", "slot": "generalization", "value": "instrumentality", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are instrumentality. \n        Output: ", "result": "\n```\ncontainer, ship, boat, barge, canoe, kayak, raft, yacht, hovercraft, submarine\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. "}
{"cat": "container", "slot": "generalization", "value": "artefact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are artefact. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in container:\n            if \"artefact\" in word:\n                words.append(word)\n        return words\n\n# Your code here\n\nprint(find_artefacts(container, \"artefact\"))\nprint(find_"}
{"cat": "container", "slot": "generalization", "value": "artifact", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are artifact. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in container:\n            if \"artifact\" in word:\n                words.append(word)\n        return words\n"}
{"cat": "container", "slot": "generalization", "value": "container", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are container. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in container:\n            if word.endswith(\".container\"):\n                words.append(word)\n        return \", \".join(words)\n"}
{"cat": "container", "slot": "generalization", "value": "receptacle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are receptacle. \n        Output: ", "result": "\n        - can\n        - jar\n        - bottle\n        - box\n        - bucket\n        - pail\n        - container\n        - receptacle\n        - vase\n        - pitcher\n        \"\"\"\n        words = [\"can\", \"jar\", \"bottle\","}
{"cat": "container", "slot": "generalization", "value": "vessel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are vessel. \n        Output: ", "result": "\n        box, can, jar, bottle, barrel, drum, tank, crate, carton\n    \"\"\"\n    category = \"container\"\n    words = [\"box\", \"can\", \"jar\", \"bottle\", \"barrel\", \"drum\", \"tank\", \""}
{"cat": "container", "slot": "generalization", "value": "unit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are unit. \n        Output: ", "result": "\n        box, can, cup, jar, jug, pot, pitcher, bottle, box. \n    \"\"\"\n    words = []\n    for word in words:\n        if \"unit\" in word and \"container\" in word:\n            words.append(word)\n    return"}
{"cat": "container", "slot": "generalization", "value": "foodstuff", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are foodstuff. \n        Output: ", "result": "\n        apple, bread, cheese, chicken, cake, coffee, egg, fish, milk, pizza \n    \"\"\"\n    food_words = [\"apple\", \"bread\", \"cheese\", \"chicken\", \"cake\", \"coffee\", \"egg\", \""}
{"cat": "container", "slot": "generalization", "value": "package", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are package. \n        Output: ", "result": "\n        box, carton, case, crate, drum, sack, skid, boxcar, container, pallet\n    \"\"\"\n    category = \"container\"\n    condition = \"are package\"\n    words = []\n    for word in text.split():\n        if word."}
{"cat": "container", "slot": "generalization", "value": "framework", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are framework. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in words:\n            if word.endswith(\".framework\"):\n                words.append(word)\n        return \", \".join(words)\n\n    @staticmethod\n    def get_container_name(words):\n        \"\"\"\n"}
{"cat": "container", "slot": "generalization", "value": "whole", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are whole. \n        Output: ", "result": "\n```\nbox, can, jar, bottle, barrel, drum, tank, crate, carton\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output:"}
{"cat": "container", "slot": "generalization", "value": "supporting structure", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are supporting structure. \n        Output: ", "result": "\n```\ncontainer,box,crate,drum,tank,barrel,trunk,hull,shell,vessel\n```\nExplanation:\nThe words \"container\", \"box\", \"crate\", \"drum\", \"tank\", \"barrel\", \"trunk"}
{"cat": "container", "slot": "generalization", "value": "avoirdupois unit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are avoirdupois unit. \n        Output: ", "result": "10, ounce, pound, cup, quart, pint, teaspoon, tablespoon, ounce, cup \n    \"\"\"\n    words = []\n    for word in word_list:\n        if word.category == \"container\" and word.unit_of_measure"}
{"cat": "container", "slot": "generalization", "value": "structure", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are structure. \n        Output: ", "result": "\n        box, carton, crate, drum, barrel, can, bottle, jar, tube, case\n    \"\"\"\n    category = \"container\"\n    condition = \"are structure\"\n    words = get_words(category, condition)\n    return \", \".join(words"}
{"cat": "container", "slot": "generalization", "value": "tubing", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are tubing. \n        Output: ", "result": "\n```\ntubing, pipe, hose, conduit, line, tube, fitting, coupling, swivel, elbow\n```\n\n### Example 2:\n```\nProvide a list of 10 words that belong to the category and satisfy the condition. \n"}
{"cat": "container", "slot": "generalization", "value": "mass unit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are mass unit. \n        Output: ", "result": "5.0, 10.0, 20.0, 40.0, 100.0, 200.0, 300.0, 500.0, 1000.0, 2000."}
{"cat": "container", "slot": "generalization", "value": "food product", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are food product. \n        Output: ", "result": "\n        apple, bread, cheese, chicken, cake, coffee, egg, fish, milk, pizza\n    \"\"\"\n    food_words = [\"apple\", \"bread\", \"cheese\", \"chicken\", \"cake\", \"coffee\", \"egg\", \"fish"}
{"cat": "container", "slot": "generalization", "value": "meal", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are meal. \n        Output: ", "result": "\n        box, can, jar, plate, bowl, bag, tray, cup, spoon, fork\n    \"\"\"\n    category = \"container\"\n    words = [\"box\", \"can\", \"jar\", \"plate\", \"bowl\", \"bag\", \"tray\", \"cup\","}
{"cat": "container", "slot": "generalization", "value": "construction", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are construction. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in container:\n            if word.is_construction():\n                words.append(word)\n        return words\n"}
{"cat": "container", "slot": "generalization", "value": "cookware", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are cookware. \n        Output: ", "result": "\n            aluminum, ceramic, copper, glass, iron, plastic, stainless steel, terracotta, titanium, wood\n        \"\"\"\n        category = \"container\"\n        condition = \"are cookware\"\n        words = get_words(category, condition"}
{"cat": "container", "slot": "generalization", "value": "tube", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are tube. \n        Output: ", "result": "\n        box, can, bottle, jar, tube, barrel, drum, crate, case, carton\n    \"\"\"\n    category = \"container\"\n    words = [\"box\", \"can\", \"bottle\", \"jar\", \"tube\", \"barrel\", \"d"}
{"cat": "container", "slot": "generalization", "value": "utensil", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are utensil. \n        Output: ", "result": "\n            fork, spoon, knife, bowl, plate, cup, saucer, spatula, ladle, tongs.\n    \"\"\"\n    category = \"container\"\n    condition = \"are utensil\"\n    words = get_words(category, condition)\n   "}
{"cat": "container", "slot": "generalization", "value": "cooking utensil", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are cooking utensil. \n        Output: ", "result": "\n        knife, spoon, fork, plate, bowl, cup, spatula, ladle, tongs, skillet \n    \"\"\"\n    category = \"container\"\n    cooking_utensils = [\"knife\", \"spoon\", \"fork\", \"plate\","}
{"cat": "container", "slot": "generalization", "value": "conduit", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are conduit. \n        Output: ", "result": "\n```\nconduit, pipe, channel, hose, pipework, plumbing, vent, flue, duct, conduit\n```\nExplanation: The words `conduit`, `pipe`, `channel`, `hose`, `pipework`, `plumbing`,"}
{"cat": "container", "slot": "generalization", "value": "food", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are food. \n        Output: ", "result": "\n        apple, banana, cherry, date, fig, grape, orange, pear, plum, strawberry\n    \"\"\"\n    food_container_words = []\n    for word in container_words:\n        if \"food\" in word:\n            food_container"}
{"cat": "container", "slot": "generalization", "value": "parcel", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are parcel. \n        Output: ", "result": "\n        box, crate, barrel, sack, case, drum, pallet, carton, container\n    \"\"\"\n    category = \"container\"\n    words = []\n    for word in text.split():\n        if word.endswith(\".parcel\"):\n            words."}
{"cat": "container", "slot": "generalization", "value": "nutrient", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are nutrient. \n        Output: ", "result": "\n            apple, banana, carrot, orange, peach, pear, plum, strawberry, tomato, watermelon \n        \"\"\"\n        words = []\n        for word in container:\n            if \"nutrient\" in word:\n                words.append"}
{"cat": "container", "slot": "generalization", "value": "bundle", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are bundle. \n        Output: ", "result": "\n        \"\"\"\n        words = []\n        for word in container:\n            if word.endswith(\".bundle\"):\n                words.append(word)\n        return \", \".join(words)\n"}
{"cat": "container", "slot": "generalization", "value": "kitchen utensil", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are kitchen utensil. \n        Output: ", "result": "\n        knife, spoon, fork, plate, bowl, cup, spatula, ladle, tongs, skillet \n    \"\"\"\n    category = \"container\"\n    kitchen_utensils = [\"knife\", \"spoon\", \"fork\", \"plate\", \""}
{"cat": "container", "slot": "generalization", "value": "passage", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are passage. \n        Output: ", "result": "\n        box, can, jar, bottle, tin, pot, pail, bag, case.\n    \"\"\"\n    category = \"container\"\n    condition = \"are passage\"\n    words = []\n    for word in text.split():\n        if word.lower() in PASS"}
{"cat": "container", "slot": "generalization", "value": "sheaf", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are sheaf. \n        Output: ", "result": "\n        box, carton, crate, drum, sack, tote, barrel, case, container, pallet\n    \"\"\"\n    category = \"container\"\n    words = [\"box\", \"carton\", \"crate\", \"drum\", \"sack\", \"tote\","}
{"cat": "container", "slot": "generalization", "value": "unit of measurement", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are unit of measurement. \n        Output: ", "result": "\n        length, \n        width, \n        height, \n        volume, \n        mass, \n        weight, \n        capacity, \n        count, \n        area, \n        moment of inertia\n    \"\"\"\n    words = [\"length\", \"width"}
{"cat": "container", "slot": "shape", "value": "shaped", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be shaped. \n        Output: ", "result": "\n        box, can, cup, jar, jug, pot, pail, pitcher, vase.\n    \"\"\"\n    words = []\n    for word in words:\n        if word.lower() == \"can\":\n            words.append(\"candle\")\n        elif word."}
{"cat": "container", "slot": "efficiency", "value": "plastic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be plastic. \n        Output: ", "result": "\n        - bottle\n        - can\n        - jar\n        - box\n        - bag\n        - pouch\n        - tube\n        - container\n        - wrapper\n        - liner\n        \"\"\"\n        words = []\n        for word in container:\n            if \"pl"}
{"cat": "container", "slot": "material", "value": "plastic", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be made of plastic. \n        Output: ", "result": "\n        - container\n        - plastic\n        - storage\n        - box\n        - bag\n        - case\n        - tube\n        - bottle\n        - pouch\n        - wrapper\n        \"\"\"\n        words = []\n        for word in synonyms:\n            if"}
{"cat": "container", "slot": "shape", "value": "shaped", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: can be shaped. \n        Output: ", "result": "\n        box, can, cup, jar, jug, pot, pail, pitcher, vase.\n    \"\"\"\n    words = []\n    for word in words:\n        if word.lower() == \"can\":\n            words.append(\"candle\")\n        elif word."}
{"cat": "container", "slot": "content", "value": "reusable", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: contain reusables. \n        Output: ", "result": "\n        reusable, container, recyclable, refillable, durable, reusable, recyclable, refillable, sustainable, eco-friendly\n    \"\"\"\n    words = []\n    for word in container_words:\n        if \"reusable\""}
{"cat": "container", "slot": "generalization", "value": "bag", "prompt": "Provide a list of 10 words that belong to the category and satisfy the condition. \n        Desired output: comma separated list of words. \n        Category: container. \n        Condition: are bag. \n        Output: ", "result": "\n        box, bag, case, container, pack, sack, tote, tube, wrapper.\n    \"\"\"\n    words = []\n    for word in text.split():\n        if \"bag\" in word and \"container\" in word:\n            words.append(word)\n"}
